{"version":3,"file":"select_picture.min.js","mappings":"mBAEAA,QAAQC,IAAI,4BAuDZ,IAAI,EAAS,GACbC,OAAOC,iBAAiB,SAASC,IAChC,GAAGA,EAAMC,OAAOC,UAAUC,SAAS,uBAAuB,CACzDH,EAAMI,iBAGN,IAAIC,EAAO,GAEeC,OAJ1B,EAAUN,EAAMC,QAINM,QAAQF,OACjBA,EAAO,EAAOE,QAAQF,MA/DzB,SAAqBL,EAAOK,EAAK,IAChCL,EAAMI,iBAEN,IAAII,EAAQC,GAAGC,MAAMC,OAAOH,MAAQC,GAAGC,MAAM,CAC5CE,MAAO,eACPC,OAAQ,CACPC,KAAM,cAEPC,UAAU,EACVC,QAAS,CACRX,KAAM,WAKRT,QAAQC,IAAIQ,GACD,IAARA,GACFG,EAAMS,GAAI,oBAAoB,SAASC,GACtC,IAAIC,EAAYX,EAAMY,QAAQC,IAAI,aAAaC,QAE/BhB,MAAba,GACeA,EAAUI,SAEbC,SAAWnB,IC+EtB,SAAwBoB,EAASC,EAAMC,GAAU,EAAOC,GAAM,EAAOC,EAAM,MACjF,GAAcvB,MAAXmB,EAIH,GAAmB,oBAAV,KAAsB,CAC9B,IAAIK,EAAU,CACbJ,KDrFuE,QCsFvEd,MAAOa,EAAQM,OACfC,mBAAoB,UACpBC,kBAAmB,WAGjBL,IACFE,EAA2B,mBAAI,GAO7BH,IACFG,EAAe,MAAID,GAGpBK,KAAKC,KAAKL,EACX,MACCM,MAAMX,EAAQM,OAEhB,CD3GKM,CAAe,mCAAmChC,gBAClDiC,SAASC,iBAAiB,oBAAoBC,SAAQC,GAAIA,EAAGC,MAAMC,OAAQ,SAE3ExB,EAAUyB,UAGb,IAGDpC,EAAMS,GAAI,UAAU,WAEnB,IAAI4B,EAAarC,EAAMY,QAAQC,IAAI,aAAaC,QAAQC,SAEpDuB,EAAU,EAAOC,QAAQ,6BAG7BD,EAAOE,cAAc,wBAAwBC,MAAQJ,EAAWK,GAGhE,IAAIC,EAASL,EAAOE,cAAc,0BAClCG,EAAOH,cAAc,OAAOI,IAAKP,EAAWQ,IAC5CF,EAAOjD,UAAUoD,OAAO,UAGxBR,EAAOE,cAAc,wBAAyBO,UAAYT,EAAOE,cAAc,wBAAyBO,UAAUC,QAAQ,MAAO,UAClI,IAEAhD,EAAMiD,MACP,CAaEC,CAAY1D,EAAOK,EACpB,I","sources":["webpack://Base scripts/./select_picture.js","webpack://Base scripts/./imports.js"],"sourcesContent":["import { displayMessage } from './imports.js';\r\n\r\nconsole.log(\"select picture.js loaded\");\r\nfunction selectImage(event, type='') {\r\n\tevent.preventDefault();\r\n\r\n\tlet frame = wp.media.frames.frame = wp.media({\r\n\t\ttitle: 'Select image' ,\r\n\t\tbutton: {\r\n\t\t\ttext: 'Save image',\r\n\t\t},\r\n\t\tmultiple: false,\r\n\t\tlibrary: {\r\n\t\t\ttype: 'image'\r\n\t\t},\r\n\t});\r\n\r\n\t// check file type\r\n\tconsole.log(type)\r\n\tif(type != ''){\r\n\t\tframe.on( 'selection:toggle', function(ev) {\r\n\t\t\tlet selection\t= frame.state().get('selection').first();\r\n\t\r\n\t\t\tif(selection != undefined){\r\n\t\t\t\tlet attachment = selection.toJSON();\r\n\r\n\t\t\t\tif(attachment.subtype != type){\r\n\t\t\t\t\tdisplayMessage(`Please select an image with the ${type} extension!`, 'error');\r\n\t\t\t\t\tdocument.querySelectorAll('.swal2-container').forEach(el=>el.style.zIndex= 999999);\r\n\r\n\t\t\t\t\tselection.destroy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tframe.on( 'select', function() {\r\n\t\t//Get the selected image\r\n\t\tlet attachment = frame.state().get('selection').first().toJSON();\r\n\r\n\t\tlet parent\t\t= button.closest('.picture_selector_wrapper');\r\n\t\t\r\n\t\t//Store the id\r\n\t\tparent.querySelector('.image_attachment_id').value = attachment.id;\r\n\t\t\r\n\t\t//Show the image\r\n\t\tlet imgdiv = parent.querySelector('.image-preview-wrapper');\r\n\t\timgdiv.querySelector('img').src= attachment.url;\r\n\t\timgdiv.classList.remove('hidden');\r\n\t\t\r\n\t\t//Change button text\r\n\t\tparent.querySelector('.select_image_button' ).innerHTML = parent.querySelector('.select_image_button' ).innerHTML.replace(\"Add\", 'Replace');\r\n\t});\r\n\r\n\tframe.open();\r\n}\r\n\r\nvar button = '';\r\nwindow.addEventListener('click', event=>{\r\n\tif(event.target.classList.contains('select_image_button')){\r\n\t\tevent.preventDefault();\r\n\t\tbutton\t\t= event.target;\r\n\r\n\t\tlet type = '';\r\n\r\n\t\tif(button.dataset.type != undefined){\r\n\t\t\ttype\t= button.dataset.type;\r\n\t\t}\r\n\t\tselectImage(event, type);\r\n\t}\r\n})","export let scripts;\r\nexport let callback;\r\n\r\nexport let afterScriptsLoaded\t= function (){\r\n    tinymce.remove();\r\n\r\n    // Activate tinyMce's again\r\n    document.querySelectorAll('.entry-content .wp-editor-area').forEach(el =>{\r\n        window.tinyMCE.execCommand('mceAddEditor', false, el.id);\r\n    });\r\n\r\n    // invoke dom content loaded events\r\n    window.document.dispatchEvent(new Event(\"DOMContentLoaded\", {\r\n        bubbles: true,\r\n        cancelable: true\r\n    }));\r\n\r\n    // Somehow the visual/text switch does not work, manually fix it\r\n    document.querySelectorAll('.wp-switch-editor').forEach(el=>el.addEventListener('click', ev=>{\r\n        let area    = el.closest('.wp-editor-wrap').querySelector('.wp-editor-area');\r\n        let panel   =  el.closest('.wp-editor-wrap').querySelector('.mce-panel');\r\n        area.style.visibility='unset';\r\n        if(ev.target.matches('.switch-tmce')){\r\n           panel.style.display='block';\r\n            area.style.display='none';\r\n        }else{\r\n            panel.style.display='none';\r\n            area.style.display='block';\r\n        }\r\n    }));\r\n\r\n    //add niceselects\r\n\tdocument.querySelectorAll('select:not(.nonice,.swal2-select)').forEach(function(select){\r\n        if(select._niceselect == undefined){\r\n\t\t    select._niceselect = NiceSelect.bind(select,{searchable: true});\r\n        }\r\n\t});\r\n\r\n    if(typeof callback == 'function'){\r\n        callback();\r\n    }\r\n}\r\n\r\nexport let addStyles    = function (response){\r\n    let temp = document.createElement('div');\r\n\r\n    if(response.js){\r\n        temp.innerHTML =  response.js;\r\n        scripts\t= [...temp.children];\r\n        addScripts();\r\n    }\r\n\r\n    if(response.css){\r\n        temp.innerHTML = response.css;\r\n        [...temp.children].forEach(el => {\r\n            document.head.appendChild(el);\r\n        });\r\n    }\r\n}\r\n\r\nexport let addScripts\t= function () {\r\n    let el\t= scripts.shift();\r\n\r\n    // only add if needed\r\n    if(document.getElementById(el.id) == null && el.tagName == 'SCRIPT'){\r\n        var s = document.createElement('script');\r\n\r\n        if(el.type == ''){\r\n            s.type\t= 'text/javascript'; \r\n        }else{\r\n            s.type\t= el.type;\r\n        }\r\n\r\n        if(el.src != ''){\r\n            s.src \t= el.src;\r\n        }else{\r\n            s.innerHTML\t= el.innerHTML;\r\n        }\r\n        \r\n        s.id\t= el.id;\r\n        \r\n        document.head.appendChild(s);\r\n\r\n        if(scripts.length > 0){\r\n            if(el.src != ''){\r\n                s.addEventListener('load', addScripts);\r\n            }else{\r\n                addScripts();\r\n            }\r\n        }else{\r\n            if(el.src != ''){\r\n                s.addEventListener('load', afterScriptsLoaded);\r\n            }else{\r\n                afterScriptsLoaded();\r\n            }\t\t\t\r\n        }\r\n    }else if(scripts.length > 0){\r\n        //run again when this script is loaded\r\n        addScripts();\r\n    }else{\r\n        afterScriptsLoaded();\r\n    }\r\n}\r\n\r\n\r\nexport function displayMessage(message, icon, autoclose=false, no_ok=false, timer=1500){\r\n\tif(message == undefined){\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif(typeof(Swal) != 'undefined'){\r\n\t\tvar options = {\r\n\t\t\ticon: icon,\r\n\t\t\ttitle: message.trim(),\r\n\t\t\tconfirmButtonColor: \"#bd2919\",\r\n\t\t\tcancelButtonColor: 'Crimson'\r\n\t\t};\r\n\r\n\t\tif(no_ok){\r\n\t\t\toptions['showConfirmButton'] = false;\r\n\t\t}\r\n\t\t\r\n\t\tif(typeof(callback) == 'function'){\r\n\t\t\toptions['didClose'] = () => callback();\r\n\t\t}\r\n\t\t\r\n\t\tif(autoclose){\r\n\t\t\toptions['timer'] = timer;\r\n\t\t}\r\n\t\t\r\n\t\tSwal.fire(options);\r\n\t}else{\r\n\t\talert(message.trim());\r\n\t}\r\n}"],"names":["console","log","window","addEventListener","event","target","classList","contains","preventDefault","type","undefined","dataset","frame","wp","media","frames","title","button","text","multiple","library","on","ev","selection","state","get","first","toJSON","subtype","message","icon","autoclose","no_ok","timer","options","trim","confirmButtonColor","cancelButtonColor","Swal","fire","alert","displayMessage","document","querySelectorAll","forEach","el","style","zIndex","destroy","attachment","parent","closest","querySelector","value","id","imgdiv","src","url","remove","innerHTML","replace","open","selectImage"],"sourceRoot":""}