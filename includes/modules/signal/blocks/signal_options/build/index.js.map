{"version":3,"file":"index.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;;;;ACNA,MAAM;EAAEA;AAAF,IAAoCC,EAAE,CAACC,IAA7C;AACA,MAAM;EAAEC;AAAF,IAAoCF,EAAE,CAACG,OAA7C;AACA,MAAM;EAAEC;AAAF,IAAoCJ,EAAE,CAACK,OAA7C;AACA,MAAM;EAAEC;AAAF,IAAoCN,EAAE,CAACO,WAA7C;AACA,MAAM;EAAEC,SAAF;EAAaC,aAAb;EAA4BC;AAA5B,IAAqDV,EAAE,CAACW,UAA9D;AACA;AACA;AACA;AACA;CAGA;;AACA,SAASW,kBAAT,CAA4BC,QAA5B,EAAsC;EAClC,IAAI,OAAOA,QAAQ,CAACC,UAAhB,KAA+B,WAAnC,EAAgD;IAC5CD,QAAQ,CAACC,UAAT,GAAsBC,MAAM,CAACC,MAAP,CAAcH,QAAQ,CAACC,UAAvB,EAAmC;MACrDG,WAAW,EAAE;QACTC,IAAI,EAAE;MADG,CADwC;MAIrDC,iBAAiB,EAAE;QACfD,IAAI,EAAE;MADS,CAJkC;MAOrDE,oBAAoB,EAAE;QAClBF,IAAI,EAAE;MADY;IAP+B,CAAnC,CAAtB;EAWH;;EACD,OAAOL,QAAP;AACH;;AAEDvB,EAAE,CAAC+B,KAAH,CAASC,SAAT,CACI,0BADJ,EAEI,sBAFJ,EAGIV,kBAHJ,GAMA;;AACA,MAAMW,cAAc,GAAG/B,0BAA0B,CAAEgC,SAAD,IAAe;EAC7D,OAASC,KAAF,IAAa;IAChB,MAAM;MAAEX,UAAF;MAAcY,aAAd;MAA6BC;IAA7B,IAA4CF,KAAlD,CADgB,CAGhB;;IACA,IAAG,CAACE,UAAJ,EAAe;MACX,OACI,kEAAC,QAAD,QACI,kEAAC,SAAD,EAAgBF,KAAhB,CADJ,CADJ;IAKH;;IAED,MAAMG,QAAQ,GAAGpB,0DAAS,CACpBqB,MAAF,IAAcA,MAAM,CAAE,aAAF,CAAN,CAAwBC,kBAAxB,EADQ,EAEtB,EAFsB,CAA1B;IAKA,MAAM,CAAEC,IAAF,EAAQC,OAAR,IAAoBC,aAAa,CAAE,UAAF,EAAcL,QAAd,EAAwB,MAAxB,CAAvC;IAEA,MAAMM,UAAU,GAAKH,IAAI,CAAE,aAAF,CAAzB;IACH,MAAMI,iBAAiB,GAAIJ,IAAI,CAAE,qBAAF,CAA/B;IACA,MAAMK,kBAAkB,GAAGL,IAAI,CAAE,sBAAF,CAA/B;;IAEG,MAAMM,eAAe,GAAG,CAAEC,KAAF,EAASC,GAAT,KAAkB;MACtC,IAAIC,OAAO,GAAG,EAAE,GAAGT;MAAL,CAAd;MAEAS,OAAO,CAACD,GAAD,CAAP,GAAeD,KAAf;MAEAN,OAAO,CAAEQ,OAAF,CAAP;IACH,CAND;;IAQA,OACI,kEAAC,QAAD,QACI,kEAAC,SAAD,EAAgBf,KAAhB,CADJ,EAEI,kEAAC,iBAAD,QACC,kEAAC,SAAD;MAAW,KAAK,EAAGpC,EAAE,CAAE,gBAAF,EAAoB,KAApB;IAArB,GACO,kEAAC,aAAD;MACI,KAAK,EAAEA,EAAE,CAAC,gCAAD,EAAmC,KAAnC,CADb;MAEI,OAAO,EAAE6C,UAFb;MAGI,QAAQ,EAAGI,KAAD,IAAWD,eAAe,CAACC,KAAD,EAAQ,aAAR;IAHxC,EADP,EAOO,kEAAC,YAAD;MACI,QAAQ,EAAIH,iBADhB;MAEI,OAAO,EAAI,CACP;QAAEM,KAAK,EAAEpD,EAAE,CAAC,gBAAD,CAAX;QAA+BiD,KAAK,EAAE;MAAtC,CADO,EAEP;QAAEG,KAAK,EAAEpD,EAAE,CAAC,6BAAD,CAAX;QAA4CiD,KAAK,EAAE;MAAnD,CAFO,CAFf;MAMI,QAAQ,EAAIA,KAAD,IAAWD,eAAe,CAAEC,KAAF,EAAS,qBAAT;IANzC,EAPP,EAgBO,kEAAC,eAAD;MACI,KAAK,EAAGjD,EAAE,CAAC,yCAAD,CADd;MAEI,KAAK,EAAG+C,kBAFZ;MAGI,QAAQ,EAAIE,KAAD,IAAWD,eAAe,CAAEC,KAAF,EAAS,sBAAT;IAHzC,EAhBP,CADD,CAFJ,CADJ;EA6BH,CA5DD;AA6DH,CA9DgD,EA8D9C,gBA9D8C,CAAjD;AAgEAhD,EAAE,CAAC+B,KAAH,CAASC,SAAT,CACI,kBADJ,EAEI,qBAFJ,EAGIC,cAHJ,E","sources":["webpack://block-filter/external window [\"wp\",\"components\"]","webpack://block-filter/external window [\"wp\",\"coreData\"]","webpack://block-filter/external window [\"wp\",\"data\"]","webpack://block-filter/external window [\"wp\",\"element\"]","webpack://block-filter/external window [\"wp\",\"htmlEntities\"]","webpack://block-filter/webpack/bootstrap","webpack://block-filter/webpack/runtime/compat get default export","webpack://block-filter/webpack/runtime/define property getters","webpack://block-filter/webpack/runtime/hasOwnProperty shorthand","webpack://block-filter/webpack/runtime/make namespace object","webpack://block-filter/./src/index.js"],"sourcesContent":["module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"htmlEntities\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const { __ }                            = wp.i18n;\r\nconst { createHigherOrderComponent }    = wp.compose;\r\nconst { Fragment }                      = wp.element;\r\nconst { InspectorControls }             = wp.blockEditor;\r\nconst { PanelBody, ToggleControl, CheckboxControl }      = wp.components;\r\nimport { SearchControl, Spinner, __experimentalInputControl as InputControl } from '@wordpress/components';\r\nimport {useState, useEffect } from \"@wordpress/element\";\r\nimport { useSelect } from '@wordpress/data';\r\nimport { store as coreDataStore } from '@wordpress/core-data';\r\nimport { decodeEntities } from '@wordpress/html-entities';\t\r\n\r\n// Add attributes\r\nfunction addSignalAttribute(settings) {\r\n    if (typeof settings.attributes !== 'undefined') {\r\n        settings.attributes = Object.assign(settings.attributes, {\r\n            send_signal: {\r\n                type: 'boolean',\r\n            },\r\n            signalmessagetype: {\r\n                type: 'string',\r\n            },\r\n            signal_extra_message: {\r\n                type: 'string'\r\n            }\r\n        });\r\n    }\r\n    return settings;\r\n}\r\n \r\nwp.hooks.addFilter(\r\n    'blocks.registerBlockType',\r\n    'sim/signal-attribute',\r\n    addSignalAttribute\r\n);\r\n\r\n// Add controls to panel\r\nconst signalControls = createHigherOrderComponent((BlockEdit) => {\r\n    return ( props ) => {\r\n        const { attributes, setAttributes, isSelected } = props;\r\n\r\n        // Only work on selected blocks\r\n        if(!isSelected){\r\n            return (\r\n                <Fragment>\r\n                    <BlockEdit { ...props } />\r\n                </Fragment>\r\n            );\r\n        }\r\n\r\n        const postType = useSelect(\r\n            ( select ) => select( 'core/editor' ).getCurrentPostType(),\r\n            []\r\n        );\r\n    \r\n        const [ meta, setMeta ] = useEntityProp( 'postType', postType, 'meta' );\r\n\r\n        const sendSignal\t\t\t= meta[ 'send_signal' ];\r\n\t    const signalMessageType\t\t= meta[ 'signal_message_type' ];\r\n\t    const signalExtraMessage\t= meta[ 'signal_extra_message' ];\r\n\r\n        const updateMetaValue = ( value, key ) => {\r\n            let newMeta\t= { ...meta };\r\n\r\n            newMeta[key]\t= value;\r\n    \r\n            setMeta( newMeta );\r\n        };\t\r\n        \r\n        return (\r\n            <Fragment>\r\n                <BlockEdit { ...props } />\r\n                <InspectorControls>\r\n                \t<PanelBody title={ __( 'Signal Options', 'sim' ) }>\r\n                        <ToggleControl\r\n                            label={__('Send signal message on publish', 'sim')}\r\n                            checked={sendSignal}\r\n                            onChange={(value) => updateMetaValue(value, 'send_signal')}\r\n                        />\r\n                        \r\n                        <RadioControl\r\n                            selected= { signalMessageType }\r\n                            options = {[\r\n                                { label: __('Send a summary'), value: 'summary' },\r\n                                { label: __('Send the whole post content'), value: 'all' }\r\n                            ]}\r\n                            onChange={ (value) => updateMetaValue( value, 'signal_message_type')}\r\n                        />\r\n                        \r\n                        <TextareaControl\r\n                            label={ __('Add this sentence to the signal message') }\r\n                            value={ signalExtraMessage }\r\n                            onChange={ (value) => updateMetaValue( value, 'signal_extra_message') }\r\n                        />\r\n\t                </PanelBody>\r\n                </InspectorControls>\r\n            </Fragment>\r\n        );\r\n    };\r\n}, 'signalControls');\r\n \r\nwp.hooks.addFilter(\r\n    'editor.BlockEdit',\r\n    'sim/signal-controls',\r\n    signalControls\r\n);"],"names":["__","wp","i18n","createHigherOrderComponent","compose","Fragment","element","InspectorControls","blockEditor","PanelBody","ToggleControl","CheckboxControl","components","SearchControl","Spinner","__experimentalInputControl","InputControl","useState","useEffect","useSelect","store","coreDataStore","decodeEntities","addSignalAttribute","settings","attributes","Object","assign","send_signal","type","signalmessagetype","signal_extra_message","hooks","addFilter","signalControls","BlockEdit","props","setAttributes","isSelected","postType","select","getCurrentPostType","meta","setMeta","useEntityProp","sendSignal","signalMessageType","signalExtraMessage","updateMetaValue","value","key","newMeta","label"],"sourceRoot":""}