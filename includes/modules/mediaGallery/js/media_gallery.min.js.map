{"version":3,"file":"media_gallery.min.js","mappings":"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","sources":["webpack://mediagallery/./media_gallery.js"],"sourcesContent":["console.log('Media galery js loaded');\n\nfunction showImage(index){\n    //hide all containers\n    document.querySelectorAll('.large-image:not(.hidden)').forEach(el=>el.classList.add('hidden'));\n\n    //show new one\n    document.querySelector('.large-image[data-index=\"'+index+'\"]').classList.remove('hidden');\n}\n\nasync function load_more(index, showFirst, skipAmount){\n    var amount  = document.querySelector('#media-amount').value;\n    if(amount == skipAmount) return;\n    var types   = [];\n    document.querySelectorAll('.media-type-selector:checked').forEach(element=>types.push(element.value));\n    \n    var formData\t= new FormData();\n    formData.append('amount', amount);\n    formData.append('page', document.querySelector('#paged').value);\n    formData.append('skipAmount', skipAmount);\n    formData.append('types', types);\n    formData.append('startIndex', index+1);\n\n    var response    = await FormSubmit.fetchRestApi('media_gallery/load_more_media', formData);\n\n    document.querySelectorAll('#medialoaderwrapper:not(.hidden), .loaderwrapper:not(.hidden)').forEach(element=>element.classList.add('hidden'));\n\n    if(!response){\n        Main.displayMessage('All media are loaded', 'info');\n        document.getElementById('loadmoremedia').classList.add('hidden');\n    }else{\n        document.querySelector('.mediawrapper').insertAdjacentHTML('beforeEnd', response);\n\n        if(showFirst){\n            var el      = document.querySelector('[data-index=\"'+index+'\"]');\n            var nextEl = el.nextElementSibling.nextElementSibling;\n\n            showImage(nextEl.dataset.index);\n        }\n\n        //hide the load more button if the last cell has no next button\n        var cells = document.querySelectorAll('.large-image');\n        if(cells[cells.length-1].querySelector('.nextbtn') == null){\n            document.getElementById('loadmoremedia').classList.add('hidden');\n        }\n    }\n}\n\nasync function mediaSearch(target){\n    var amount          = document.querySelector('#media-amount').value;\n    var types           = [];\n    document.querySelectorAll('.media-type-selector:checked').forEach(el=>types.push(el.value));\n    var searchString    = target.closest('.mediabuttons').querySelector('.searchtext').value;\n    \n    var formData\t= new FormData();\n    formData.append('amount', amount);\n    formData.append('types', types);\n    formData.append('search', searchString);\n\n    var response    = await FormSubmit.fetchRestApi('media_gallery/media_search', formData);\n    \n    if(!response){\n        Main.displayMessage('Nothing found', 'warning');\n    }else{\n        document.querySelector('.mediawrapper').innerHTML = response;\n    }\n}\n\ndocument.querySelectorAll('.searchtext').forEach(el=>{\n    el.addEventListener(\"keyup\", function(event){\n        if (event.keyCode === 13) {\n            mediaSearch(event.target);\n        }\n    });\n});\n\nfunction nextButtonClicked(target){\n    let el      = target.closest('.large-image');\n    let nextEl = el.nextElementSibling;\n    if(nextEl != null){\n        nextEl = nextEl.nextElementSibling;\n    }\n\n    //load more\n    if(nextEl == null){\n        document.getElementById('medialoaderwrapper').classList.remove('hidden');\n\n        document.getElementById('paged').value = parseInt(document.getElementById('paged').value)+1;\n        load_more(el.dataset.index, true);\n    }else{\n        showImage(nextEl.dataset.index);\n    }\n}\n\nfunction loadMoreMedia(){\n    //find the last image\n    let media = document.querySelectorAll('.cell');\n\n    document.getElementById('paged').value = parseInt(document.getElementById('paged').value)+1;\n\n    load_more(media[media.length-1].dataset.index, false);\n\n    Main.showLoader(target, false);\n}\n\nfunction mediaTypeSelected(target){\n    var visibleCells;\n\n    if(target.checked){\n        document.querySelectorAll('.cell.'+target.value).forEach(el=>el.classList.remove('hidden'));\n\n        // remove all more than the maximum\n        visibleCells   = document.querySelectorAll('.cell:not(.hidden)');\n        var amount          = document.querySelector('#media-amount').value;\n        for (let i = amount; i < visibleCells.length; i++) { \n            visibleCells[i].remove();\n        }\n    }else{\n        document.querySelectorAll('.cell.'+target.value).forEach(el=>el.classList.add('hidden'));\n\n        var media = document.querySelectorAll('.cell');\n        // load more of the remaining types untill we reach the maximum\n        visibleCells   = document.querySelectorAll('.cell:not(.hidden)');\n        load_more(media[media.length-1].dataset.index, false, visibleCells.length);\n    }\n}\n\nasync function downloadMedia(target){\n    var answer = await Swal.fire({\n        title: 'Warning',\n        html: \"Downloading of materials is only allowed for use in presentations. <br>You should not share this file with others as it may contain privacy sensitive information\",\n        showCancelButton: true,\n        confirmButtonText: 'I promise not to share this file',\n        confirmButtonColor: \"#bd2919\"\n    });\n\n    //swap and/or\n    if (answer.isConfirmed) {\n        target.querySelector('a').click();\n    }\n\n}\n\ndocument.addEventListener('click', async ev=>{\n    var target  = ev.target;\n    var parent  = target.closest('.large-image');\n\n    if(target.matches('.media-item')){\n        ev.preventDefault();\n\t\tev.stopPropagation();\n        showImage(target.closest('.cell').dataset.index);\n    }\n\n    if(target.matches('.closebtn')){\n        parent.classList.add('hidden');\n\n        //stop any video's\n        var iframe  = parent.querySelector( 'iframe');\n        if(iframe != null){\n            // refresh iframe\n            iframe.src  = iframe.src;\n        }\n    }\n\n    if(target.matches('.prevbtn')){\n        let el      = target.closest('.large-image');\n        let prevEl = el.previousElementSibling.previousElementSibling;\n\n        showImage(prevEl.dataset.index);\n    }\n\n    if(target.matches('.nextbtn')){\n        nextButtonClicked(target);\n    }\n\n    if(target.id == 'loadmoremedia'){\n        ev.preventDefault();\n\t\tev.stopPropagation();\n\n        loadMoreMedia();\n    }\n\n    if(target.matches('.buttonwrapper .description')){\n        Main.displayMessage(target.dataset.description);\n    }\n\n    // media type selector\n    if(target.matches('.media-type-selector')){\n        mediaTypeSelected(target);\n    }\n\n    if(target.matches('.mediabuttons .search')){\n        ev.preventDefault();\n\t\tev.stopPropagation();\n        mediaSearch(target);\n    }\n\n    if(target.matches('.download')){\n        ev.preventDefault();\n        downloadMedia(target)\n    }\n});\n\ndocument.addEventListener('change', ev=>{\n    var target= ev.target;\n\n    if(target.id=='media-amount'){\n        //reset page count\n        document.getElementById('paged').value = 1;\n\n        //Check how many we have currently\n        var media       = document.querySelectorAll('.cell');\n        var curAmount   = media.length;\n\n        // We need to add more\n        if(target.value > curAmount){\n            var start   = parseInt(media[media.length-1].dataset.index);\n            load_more(start, false, curAmount);\n        // We need to remove some\n        }else if(target.value < curAmount){\n            var i = 1;\n            document.querySelectorAll('.cell, .large-image').forEach(el=>{\n                if(i > target.value){\n                    el.remove()\n                }\n\n                if(el.matches('.cell')){\n                    i++;\n                }\n            });\n        }\n    }\n});\n\nfunction handleTouchStart(evt) {\n    const firstTouch = evt.touches[0];                                      \n    xDown = firstTouch.clientX;                                      \n    yDown = firstTouch.clientY;                                      \n}                                              \n                                                                           \nfunction handleTouchMove(evt) {\n    if ( ! xDown || ! yDown ) {\n        return;\n    }\n\n    var xUp = evt.touches[0].clientX;                                    \n    var yUp = evt.touches[0].clientY;\n\n    var xDiff = xDown - xUp;\n    var yDiff = yDown - yUp;\n                                                                        \n    if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {\n        var nextEl;\n        var el = document.querySelector('.large-image:not(.hidden)');\n        if ( xDiff > 0 ) {\n            /* right swipe */\n            nextEl = el.nextElementSibling.nextElementSibling;\n        } else {\n            /* left swipe */\n            nextEl = el.previousElementSibling.previousElementSibling;\n        }\n        showImage(nextEl.dataset.index);\n    }\n    /* reset values */\n    xDown = null;\n    yDown = null;                                             \n}\n\nvar xDown = null;                                                        \nvar yDown = null;\ndocument.addEventListener('touchstart', handleTouchStart);        \ndocument.addEventListener('touchmove', handleTouchMove);"],"names":["showImage","index","document","querySelectorAll","forEach","el","classList","add","querySelector","remove","async","load_more","showFirst","skipAmount","amount","value","types","element","push","formData","FormData","append","response","FormSubmit","fetchRestApi","insertAdjacentHTML","nextElementSibling","dataset","cells","length","getElementById","Main","displayMessage","mediaSearch","target","searchString","closest","innerHTML","loadMoreMedia","media","parseInt","showLoader","console","log","addEventListener","event","keyCode","ev","parent","matches","preventDefault","stopPropagation","iframe","src","previousElementSibling","nextEl","nextButtonClicked","id","description","visibleCells","checked","i","mediaTypeSelected","Swal","fire","title","html","showCancelButton","confirmButtonText","confirmButtonColor","isConfirmed","click","downloadMedia","curAmount","xDown","yDown","evt","firstTouch","touches","clientX","clientY","xUp","yUp","xDiff","yDiff","Math","abs"],"sourceRoot":""}