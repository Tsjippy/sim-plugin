{"version":3,"file":"media_gallery.min.js","mappings":"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","sources":["webpack://mediagallery/./media_gallery.js"],"sourcesContent":["console.log('Media galery js loaded');\r\n\r\nfunction showImage(index){\r\n    //hide all containers\r\n    document.querySelectorAll('.large-image:not(.hidden)').forEach(el=>el.classList.add('hidden'));\r\n\r\n    //show new one\r\n    let wrapper     = document.querySelector(`.large-image[data-index=\"${index}\"]`);\r\n\r\n    let image       = wrapper.querySelector('.image img');\r\n    if(image != null && image.dataset.full != undefined){\r\n        image.src   = image.dataset.full;\r\n    }\r\n    wrapper.classList.remove('hidden');\r\n}\r\n\r\nasync function loadMore(index, showFirst, skipAmount=0){\r\n    let button = document.getElementById('loadmoremedia');\r\n    if(button != null){\r\n        button.classList.add('hidden');\r\n    }\r\n    var amount  = document.querySelector('#media-amount').value;\r\n    if(amount == skipAmount) return;\r\n    var types   = [];\r\n    document.querySelectorAll('.media-type-selector:checked').forEach(element=>types.push(element.value));\r\n    var cats   = [];\r\n    document.querySelectorAll('.media-cat-selector:checked').forEach(element=>cats.push(element.value));\r\n\r\n    var formData\t= new FormData();\r\n    formData.append('amount', amount);\r\n    formData.append('page', document.querySelector('#paged').value);\r\n    formData.append('skipAmount', skipAmount);\r\n    formData.append('types', types);\r\n    formData.append('categories', cats);\r\n    formData.append('startIndex', index+1);\r\n\r\n    var response    = await FormSubmit.fetchRestApi('media_gallery/load_more_media', formData);\r\n\r\n    // Hide the full screen loader\r\n    document.getElementById('medialoaderwrapper').classList.add('hidden');\r\n    \r\n    if(!response){\r\n        Main.displayMessage('All media are loaded', 'info');\r\n    }else{\r\n        if(button != null){\r\n            button.classList.remove('hidden');\r\n        }\r\n        document.querySelector('.mediawrapper').insertAdjacentHTML('beforeEnd', response);\r\n\r\n        if(showFirst){\r\n            var el      = document.querySelector('[data-index=\"'+index+'\"]');\r\n            var nextEl = el.nextElementSibling.nextElementSibling;\r\n\r\n            showImage(nextEl.dataset.index);\r\n        }\r\n\r\n        //hide the load more button if the last cell has no next button\r\n        var cells = document.querySelectorAll('.large-image');\r\n        if(cells[cells.length-1].querySelector('.nextbtn') == null){\r\n            document.getElementById('loadmoremedia').classList.add('hidden');\r\n        }\r\n    }\r\n\r\n    if(button != null){\r\n        button.parentNode.querySelector('.loaderwrapper').remove();\r\n    }\r\n}\r\n\r\nasync function catChanged(target){\r\n    document.querySelector('.mediawrapper').innerHTML   = '';\r\n\r\n    let loader  = Main.showLoader(document.querySelector('.mediawrapper'), false, 'Loading');\r\n\r\n    var amount  = document.querySelector('#media-amount').value;\r\n    var types   = [];\r\n    document.querySelectorAll('.media-type-selector:checked').forEach(element=>types.push(element.value));\r\n    var cats   = [];\r\n    document.querySelectorAll('.media-cat-selector:checked').forEach(element=>cats.push(element.value));\r\n\r\n    var formData\t= new FormData();\r\n    formData.append('amount', amount);\r\n    formData.append('types', types);\r\n    formData.append('categories', cats);\r\n\r\n    var response    = await FormSubmit.fetchRestApi('media_gallery/change_cats', formData);\r\n\r\n    if(response){\r\n        document.querySelector('.mediawrapper').innerHTML   = response;\r\n    }\r\n\r\n    loader.remove();\r\n}\r\n\r\nasync function mediaSearch(target){\r\n    var amount          = document.querySelector('#media-amount').value;\r\n    var types           = [];\r\n    document.querySelectorAll('.media-type-selector:checked').forEach(el=>types.push(el.value));\r\n    var searchString    = target.closest('.mediabuttons').querySelector('.searchtext').value;\r\n    \r\n    var formData\t= new FormData();\r\n    formData.append('amount', amount);\r\n    formData.append('types', types);\r\n    formData.append('search', searchString);\r\n\r\n    var response    = await FormSubmit.fetchRestApi('media_gallery/media_search', formData);\r\n    \r\n    if(!response){\r\n        Main.displayMessage('Nothing found', 'warning');\r\n    }else{\r\n        document.querySelector('.mediawrapper').innerHTML = response;\r\n    }\r\n}\r\n\r\ndocument.querySelectorAll('.searchtext').forEach(el=>{\r\n    el.addEventListener(\"keyup\", function(event){\r\n        if (event.keyCode === 13) {\r\n            mediaSearch(event.target);\r\n        }\r\n    });\r\n});\r\n\r\nfunction nextButtonClicked(target){\r\n    let el      = target.closest('.large-image');\r\n    let nextEl = el.nextElementSibling;\r\n    if(nextEl != null){\r\n        nextEl = nextEl.nextElementSibling;\r\n    }\r\n\r\n    //load more\r\n    if(nextEl == null){\r\n        document.getElementById('medialoaderwrapper').classList.remove('hidden');\r\n\r\n        document.getElementById('paged').value = parseInt(document.getElementById('paged').value)+1;\r\n        loadMore(el.dataset.index, true);\r\n    }else{\r\n        showImage(nextEl.dataset.index);\r\n    }\r\n}\r\n\r\nfunction loadMoreMedia(target){\r\n    //find the last image\r\n    let media = document.querySelectorAll('.cell');\r\n\r\n    document.getElementById('paged').value = parseInt(document.getElementById('paged').value)+1;\r\n\r\n    loadMore(media[media.length-1].dataset.index, false);\r\n\r\n    Main.showLoader(target, false);\r\n}\r\n\r\nfunction mediaTypeSelected(target){\r\n    let visibleCells;\r\n    let amount     = document.querySelector('#media-amount').value;\r\n\r\n    // we should show a new type or show all\r\n    if(target.checked || document.querySelectorAll('.media-type-selector:checked').length==0){\r\n        // show all hidden ones\r\n        document.querySelectorAll(`.cell.${target.value}.hidden`).forEach(el=>el.classList.remove('hidden'));\r\n\r\n        if(target.checked){\r\n            // hide all needed\r\n            document.querySelectorAll('.media-type-selector:not(:checked)').forEach(type=>{\r\n                document.querySelectorAll(`.cell.${type.value}:not(.hidden)`).forEach(el=>el.classList.add('hidden'));\r\n            });\r\n        }\r\n\r\n        // remove all more than the maximum in case we have too many\r\n        visibleCells   = document.querySelectorAll('.cell:not(.hidden)');\r\n        for (let i = amount; i < visibleCells.length; i++) { \r\n            // remove the cell and the larger-image\r\n            document.querySelector(`.mediawrapper [data-index=\"${visibleCells[i].dataset.index}\"`).remove();\r\n        }\r\n    }else{\r\n        document.querySelectorAll(`.cell.${target.value}`).forEach(el=>el.classList.add('hidden'));\r\n    }\r\n\r\n    let media               = document.querySelectorAll('.cell');\r\n    // load more of the remaining types untill we reach the maximum\r\n    let visibleCellsCount    = document.querySelectorAll('.cell:not(.hidden)').length;\r\n\r\n    if(visibleCellsCount < amount){\r\n        let types   = '';\r\n\r\n        document.querySelectorAll('.media-type-selector:checked').forEach(el=>{\r\n            if(types != ''){\r\n                types += ' and ';\r\n            }\r\n            \r\n            types   += el.value+'s';\r\n        });\r\n\r\n        Main.showLoader(document.getElementById('loadmoremedia'), false, 'Loading '+types);\r\n        loadMore(media[media.length-1].dataset.index, false, visibleCellsCount);\r\n    }\r\n}\r\n\r\nasync function downloadMedia(target){\r\n    let options = {\r\n        title: 'Warning',\r\n        html: \"Downloading of materials is only allowed for use in presentations. <br>You should not share this file with others as it may contain privacy sensitive information\",\r\n        showCancelButton: true,\r\n        confirmButtonText: 'I promise not to share this file',\r\n        confirmButtonColor: \"#bd2919\"\r\n    }\r\n\r\n    if(document.fullscreenElement != null){\r\n        options['target']\t= document.fullscreenElement;\r\n    }\r\n\r\n    var answer = await Swal.fire(options);\r\n\r\n    //swap and/or\r\n    if (answer.isConfirmed) {\r\n        target.querySelector('a').click();\r\n    }\r\n\r\n}\r\n\r\ndocument.addEventListener('click', async ev=>{\r\n    var target  = ev.target;\r\n    var parent  = target.closest('.large-image');\r\n\r\n    if(target.matches('.media-item')){\r\n        ev.preventDefault();\r\n\t\tev.stopPropagation();\r\n        showImage(target.closest('.cell').dataset.index);\r\n    }\r\n\r\n    if(target.matches('.closebtn')){\r\n        parent.classList.add('hidden');\r\n\r\n        //stop any video's\r\n        var iframe  = parent.querySelector( 'iframe');\r\n        if(iframe != null){\r\n            // refresh iframe\r\n            iframe.src  = iframe.src;\r\n        }\r\n    }\r\n\r\n    if(target.matches('.prevbtn')){\r\n        let el      = target.closest('.large-image');\r\n        let prevEl = el.previousElementSibling.previousElementSibling;\r\n\r\n        showImage(prevEl.dataset.index);\r\n    }\r\n\r\n    if(target.matches('.nextbtn')){\r\n        nextButtonClicked(target);\r\n    }\r\n\r\n    if(target.id == 'loadmoremedia'){\r\n        ev.preventDefault();\r\n\t\tev.stopPropagation();\r\n\r\n        loadMoreMedia(target);\r\n    }\r\n\r\n    if(target.matches('.buttonwrapper .description')){\r\n        Main.displayMessage(atob(target.dataset.description));\r\n    }\r\n\r\n    // media type selector\r\n    if(target.matches('.media-type-selector')){\r\n        mediaTypeSelected(target);\r\n    }\r\n\r\n    if(target.matches('.mediabuttons .search')){\r\n        ev.preventDefault();\r\n\t\tev.stopPropagation();\r\n        mediaSearch(target);\r\n    }\r\n\r\n    if(target.matches('.download')){\r\n        ev.preventDefault();\r\n        downloadMedia(target)\r\n    }\r\n\r\n    if(target.matches('.media-cat-selector')){\r\n        catChanged(target);\r\n    }\r\n});\r\n\r\ndocument.addEventListener('change', ev=>{\r\n    var target= ev.target;\r\n\r\n    if(target.id=='media-amount'){\r\n        //reset page count\r\n        document.getElementById('paged').value = 1;\r\n\r\n        //Check how many we have currently\r\n        var media       = document.querySelectorAll('.cell');\r\n        var curAmount   = media.length;\r\n\r\n        // We need to add more\r\n        if(target.value > curAmount){\r\n            var start   = parseInt(media[media.length-1].dataset.index);\r\n            loadMore(start, false, curAmount);\r\n\r\n            Main.showLoader(document.getElementById('loadmoremedia'), false, 'Loading more...');\r\n        // We need to remove some\r\n        }else if(target.value < curAmount){\r\n            var i = 1;\r\n            document.querySelectorAll('.cell, .large-image').forEach(el=>{\r\n                if(i > target.value){\r\n                    el.remove()\r\n                }\r\n\r\n                if(el.matches('.cell')){\r\n                    i++;\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\nfunction handleTouchStart(evt) {\r\n    const firstTouch = evt.touches[0];                                      \r\n    xDown = firstTouch.clientX;                                      \r\n    yDown = firstTouch.clientY;                                      \r\n}                                              \r\n                                                                           \r\nfunction handleTouchMove(evt) {\r\n    if ( ! xDown || ! yDown ) {\r\n        return;\r\n    }\r\n\r\n    var xUp = evt.touches[0].clientX;                                    \r\n    var yUp = evt.touches[0].clientY;\r\n\r\n    var xDiff = xDown - xUp;\r\n    var yDiff = yDown - yUp;\r\n                                                                        \r\n    if ( Math.abs( xDiff ) > Math.abs( yDiff ) ) {\r\n        var nextEl;\r\n        var el = document.querySelector('.large-image:not(.hidden)');\r\n        if ( xDiff > 0 ) {\r\n            /* right swipe */\r\n            nextEl = el.nextElementSibling.nextElementSibling;\r\n        } else {\r\n            /* left swipe */\r\n            nextEl = el.previousElementSibling.previousElementSibling;\r\n        }\r\n        showImage(nextEl.dataset.index);\r\n    }\r\n    /* reset values */\r\n    xDown = null;\r\n    yDown = null;                                             \r\n}\r\n\r\nvar xDown = null;                                                        \r\nvar yDown = null;\r\ndocument.addEventListener('touchstart', handleTouchStart);        \r\ndocument.addEventListener('touchmove', handleTouchMove);"],"names":["showImage","index","document","querySelectorAll","forEach","el","classList","add","wrapper","querySelector","image","undefined","dataset","full","src","remove","async","loadMore","showFirst","skipAmount","button","getElementById","amount","value","types","element","push","cats","formData","FormData","append","response","FormSubmit","fetchRestApi","insertAdjacentHTML","nextElementSibling","cells","length","Main","displayMessage","parentNode","mediaSearch","target","searchString","closest","innerHTML","console","log","addEventListener","event","keyCode","ev","parent","matches","preventDefault","stopPropagation","iframe","previousElementSibling","nextEl","parseInt","nextButtonClicked","id","media","showLoader","loadMoreMedia","atob","description","visibleCells","checked","type","i","visibleCellsCount","mediaTypeSelected","options","title","html","showCancelButton","confirmButtonText","confirmButtonColor","fullscreenElement","Swal","fire","isConfirmed","click","downloadMedia","loader","catChanged","curAmount","xDown","yDown","evt","firstTouch","touches","clientX","clientY","xUp","yUp","xDiff","yDiff","Math","abs"],"sourceRoot":""}