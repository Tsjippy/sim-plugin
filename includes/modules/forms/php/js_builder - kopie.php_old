<?php
namespace SIM;

trait create_js{
    function create_js(){
        $this->datatype = $this->formdata->name;
        
        ob_start(); 

        //write external js into this file
        $extra_js   = apply_filters('form_extra_js', $this->datatype);
        if(!empty($extra_js)){
            echo "\n\n";
        }
        ?>
document.addEventListener("DOMContentLoaded", function() {
    console.log("Dynamic <?php echo $this->datatype;?> forms js loaded");

    tidy_multi_inputs();
    form = document.getElementById('simnigeria_form_<?php echo $this->datatype;?>');
    <?php
    if($this->is_multi_step()){
    ?>
    //show first tab
    currentTab = 0; // Current tab is set to be the first tab (0)
    showTab(currentTab,form); // Display the current tab
    <?php
    }
    if(!empty($this->formdata->settings['save_in_meta'])){
    ?>form.querySelectorAll('select, input, textarea').forEach(el=>process_<?php echo $this->datatype;?>_fields(el));<?php
    }
?>

});

window.addEventListener("click", <?php echo $this->datatype;?>_listener);
window.addEventListener("input", <?php echo $this->datatype;?>_listener);

<?php echo $this->datatype;?>_prev_el = '';
function <?php echo $this->datatype;?>_listener(event) {
    var el			= event.target;
    form			= el.closest('form');
    var name		= el.name;
    if(name == '' || name == undefined){
        if(el.closest('.nice-select-dropdown') != null && el.closest('.inputwrapper') != null){
            el.closest('.inputwrapper').querySelectorAll('select').forEach(select=>{
                if(el.dataset.value == select.value){
                    el	= select;
                    name = select.name;
                }
            });
        }else{
            return;
        }
    }

    //prevent duplicate event handling
    if(el == <?php echo $this->datatype;?>_prev_el){
        return;
    }
    <?php echo $this->datatype;?>_prev_el = el;
    //clear event prevenion after 200 ms
    setTimeout(function(){ <?php echo $this->datatype;?>_prev_el = ''; }, 200);

    if(name == 'nextBtn'){
        nextPrev(1);
    }else if(name == 'prevBtn'){
        nextPrev(-1);
    }

    process_<?php echo $this->datatype;?>_fields(el);
}

function process_<?php echo $this->datatype;?>_fields(el){
    var name = el.name;
<?php
        //Loop over all elements to find any conditions
        foreach($this->form_elements as $element){
            $conditions	= unserialize($element->conditions);
            //if there are conditions
            if(is_array($conditions)){
                //Loop over the conditions
                foreach($conditions as $condition_index=>$condition){
                    //if there are rules build some javascript
                    if(is_array($condition['rules'])){
                        //Open the if statemenet
                        $lastrule_key			= array_key_last($condition['rules']);
                        $field_check_if 		= "if(";
                        $condition_variables	= '';
                        $condition_if			= 'if(';
                        
                        $check_for_change = false;
                        
                        //Loop over the rules
                        foreach($condition['rules'] as $rule_index=>$rule){
                            $fieldnumber_1	= $rule_index*2  + 1;
                            $fieldnumber_2	= $fieldnumber_1 + 1;
                            $equation		= str_replace(' value','',$rule['equation']);
                            
                            //Get field names of the fields who's value we are checking
                            $conditional_element		= $this->getelementbyid($rule['conditional_field']);
                            $conditional_field_name		= $conditional_element->name;
                            if(in_array($conditional_element->type,['radio','checkbox']) and strpos($conditional_field_name, '[]') === false) {
                                $conditional_field_name .= '[]';
                            }
                            $conditional_field_type		= $conditional_element->type;
                            $conditional_element_2		= $this->getelementbyid($rule['conditional_field_2']);
                            $conditional_field_2_name	= $conditional_element_2->name;
                            if(in_array($conditional_element_2->type,['radio','checkbox']) and strpos($conditional_field_2_name, '[]') === false) {
                                $conditional_field_2_name .= '[]';
                            }
                            $conditional_field_2_type	= $conditional_element_2->type;
                            
                            //Check if we are calculating a value based on two field values
                            if(($equation == '+' or $equation == '-') and !empty($rule['conditional_field_2']) and !empty($rule['equation_2'])){
                                $calc = true;
                            }else{
                                $calc = false;
                            }
                            
                            //make sure we do not include other fields in changed or click rules
                            if(in_array($equation, ['changed','clicked'])){
                                $field_check_if		= "if(name == '$conditional_field_name'";
                                $check_for_change	= true;
                            }
                            
                            //Only allow or statements
                            if($check_for_change == false or $condition['rules'][$rule_index-1]['combinator'] == 'OR'){
                                //Write the if statement to check if the current clicked field belongs to this condition
                                if($field_check_if != 'if(') $field_check_if .= " || ";
                                $field_check_if .= "name == '$conditional_field_name'";
                                
                                //If there is an extra field to check
                                if(!empty($rule['conditional_field_2'])){
                                    $field_check_if .= " || name == '$conditional_field_2_name'";
                                }
                            }
            
                            //We calculate the sum or difference of two field values if needed.
                            if($calc){
                                if($conditional_field_type == 'date'){
                                    //Convert date strings to date values then miliseconds to days
                                    $condition_variables .= "\t\tvar calculated_value_$rule_index = (Date.parse(value_$fieldnumber_1) $equation Date.parse(value_$fieldnumber_2))/ (1000 * 60 * 60 * 24);\n";
                                }else{
                                    $condition_variables .= "\t\tvar calculated_value_$rule_index = value_$fieldnumber_1 $equation value_$fieldnumber_2;\n";
                                }
                                $equation = $rule['equation_2'];
                            }
                            
                            //compare with calculated value
                            if($calc){
                                $comparevalue1 = "calculated_value_$rule_index";
                            //compare with a field value
                            }else{
                                $comparevalue1 = "value_$fieldnumber_1";
                            }
                                
                            //compare with the value of another field
                            if(strpos($rule['equation'], 'value') !== false){
                                $comparevalue2 = "value_$fieldnumber_2";
                            //compare with a number
                            }elseif(is_numeric($rule['conditional_value'])){
                                $comparevalue2 = trim($rule['conditional_value']);
                            //compare with text
                            }else{
                                $comparevalue2 = "'".strtolower(trim($rule['conditional_value']))."'";
                            }
                            
                            /* 
                                NOW WE KNOW THAT THE CHANGED FIELD BELONGS TO THIS CONDITION
                                LETS CHECK IF ALL THE VALUES ARE MET AS WELL 
                            */
                            if(!in_array($equation, ['changed','clicked','checked','!checked'])){
                                $condition_variables .= "\n\t\tvar value_$fieldnumber_1 = get_field_value('$conditional_field_name',true,$comparevalue2);\n";
                                
                                if(!empty($rule['conditional_field_2'])){
                                    $condition_variables .= "\n\t\tvar value_$fieldnumber_2 = get_field_value('$conditional_field_2_name',true,$comparevalue2);\n";
                                }
                            }
                            
                            if($equation == 'checked'){
                                if(count($condition['rules'])==1){
                                    $condition_if .= "el.checked == true";
                                }else{
                                    $condition_if .= "form.querySelector('[name=\"$conditional_field_name\"]').checked == true";
                                }
                            }elseif($equation == '!checked'){
                                if(count($condition['rules'])==1){
                                    $condition_if .= "el.checked == false";
                                }else{
                                    $condition_if .= "form.querySelector('[name=\"$conditional_field_name\"]').checked == false";
                                }
                            }elseif($equation != 'changed' and $equation != 'clicked'){
                                $condition_if .= "$comparevalue1 $equation $comparevalue2";
                            }
                            
                            //If there is another rule, add or or and
                            if($lastrule_key == $rule_index){
                                $condition_if .= "){\n";
                            }else{
                                if(
                                    !empty($rule['combinator'])														and //there is a next rule
                                    $condition_if != 'if(' 															and	//there is already preceding code
                                    !in_array($condition['rules'][$rule_index+1]['equation'],['changed','clicked'])		//The next element will also be included in the if statement
                                ){
                                    if($rule['combinator'] == 'AND'){
                                        $condition_if .= " && ";
                                    }else{
                                        $condition_if .= " || ";
                                    }
                                }
                            }
                        }
                        //Now we write it all out as a whole
                        echo "\n\t$field_check_if){\n";
                            
                            //no need for variable in case of a 'changed' condition
                            if(strpos($condition_if,"if()") === false){
                                echo $condition_variables;
                                echo "\n\t\t$condition_if";
                            }
                            
                            $action = $condition['action'];
                            
                            //show, toggle or hide action for this field
                            if($action == 'show' or $action == 'hide' or $action == 'toggle'){
                                if($action == 'show'){
                                    $action = 'remove';
                                }elseif($action == 'hide'){
                                    $action = 'add';
                                }
                                
                                //do not write a rule for label with another element
                                if($element->type != 'label' or empty($element->wrap)){
                                    //formstep do not have an inputwrapper
                                    if($element->type == 'formstep'){
                                        $closest = "";
                                    }else{
                                        $closest = ".closest('.inputwrapper')";
                                    }
                                    $name	= $element->name;
                                    if(in_array($element->type,['radio','checkbox']) and strpos($name, '[]') === false) {
                                        $name .= '[]';
                                    }
                                    if(empty($element->multiple)){
                                        echo "\n\t\t\tform.querySelector('[name=\"$name\"]')$closest.classList.$action('hidden');";
                                    }else{
                                        echo "\n\t\t\tform.querySelector('[name^=\"$name\"]')$closest.classList.$action('hidden');";
                                    }
                                }
                                foreach($conditions['copyto'] as $field_index){
                                    if(!is_numeric($field_index))	continue;
                                    //find the element with the right id
                                    $copy_to_element	= $this->getelementbyid($field_index);
                                    $name				= $copy_to_element->name;
                                    if(in_array($copy_to_element->type,['radio','checkbox']) and strpos($name, '[]') === false) {
                                        $name .= '[]';
                                    }
                                    
                                    //formstep do not have an inputwrapper
                                    if($element->type == 'formstep'){
                                        $closest = "";
                                    }else{
                                        $closest = ".closest('.inputwrapper')";
                                    }
                                    if(empty($copy_to_element->multiple)){
                                        echo "\n\t\t\tform.querySelector('[name=\"$name\"]')$closest.classList.$action('hidden');";
                                    }else{
                                        echo "\n\t\t\tform.querySelector('[name^=\"$name\"]')$closest.classList.$action('hidden');";
                                    }
                                }
                            //set property value
                            }elseif($action == 'property' or $action == 'value'){
                                //set the attribute value of one field to the value of another field
                                $fieldname		= $element->name;
                                if($element->type == 'checkbox') $fieldname .= '[]';
                                
                                //fixed prop value
                                if($action == 'value'){
                                    $propertyname	= $condition['propertyname1'];
                                    echo "\t\t\tvar replacement_value = '{$condition['action_value']}';";
                                //retrieve value from another field
                                }else{
                                    $propertyname	= $condition['propertyname'];
                                
                                    $copyfieldid	= $condition['property_value'];
                                    
                                    //find the element with the right id
                                    $copy_element = $this->getelementbyid($copyfieldid);
                                    $copyfieldname	= $copy_element->name;
                                    if($copy_element->type == 'checkbox') $copyfieldname .= '[]';
                                    
                                    //if($copyfieldname == $conditional_field_name and count($condition['rules']) == 1){
                                    //	echo "\t\t\tvar replacement_value = value;";
                                    //}else{
                                        echo "\t\t\tvar replacement_value = get_field_value('$copyfieldname')";
                                    //}
                                }
                                
                                if($propertyname == 'value'){
                                    echo "\n\t\t\tchange_field_value('$fieldname', replacement_value);";
                                }else{
                                    echo "\n\t\t\tchange_field_property('$fieldname', '$propertyname', replacement_value);";
                                }
                            }else{
                                print_array("formbuilder.php writing js: missing action: '$action' for condition $condition_index of field {$element->name}");
                            }
                            
                            if(strpos($condition_if,"if()") === false){
                                echo "\n\t\t}";//close condition if
                            }
                        echo "\n\t}";//close field check if
                    }
                }
            }
        }
        
        //end js listener function
        echo "\n}";

        //write it all to a file
        $js			= ob_get_clean();

        //Create js file
        file_put_contents($this->jsfilename.'.js', $js);
        // Create minified version
        $js = \JShrink\Minifier::minify($js, array('flaggedComments' => false));
        file_put_contents($this->jsfilename.'.min.js', $js);
    }
}