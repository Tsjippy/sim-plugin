{"version":3,"file":"forms.min.js","mappings":"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","sources":["webpack://FormFunctions/webpack/universalModuleDefinition","webpack://FormFunctions/webpack/bootstrap","webpack://FormFunctions/webpack/runtime/define property getters","webpack://FormFunctions/webpack/runtime/hasOwnProperty shorthand","webpack://FormFunctions/webpack/runtime/make namespace object","webpack://FormFunctions/./forms.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"FormFunctions\"] = factory();\n\telse\n\t\troot[\"FormFunctions\"] = factory();\n})(self, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","async function saveFormInput(target){\n\tlet form\t\t= target.closest('form');\n\tlet response\t= await FormSubmit.submitForm(target, 'forms/save_form_input');\n\n\tif(response){\n\t\ttarget.closest('.submit_wrapper').querySelector('.loadergif').classList.add('hidden');\n\n\t\tMain.displayMessage(response);\n\n\t\tif(form.dataset.reset == 'true'){\n\t\t\tFormSubmit.formReset(form);\n\t\t}\n\t}\n}\n\nexport function removeDefaultSelect(el){\n\tArray.from(el.options).forEach(function(option){\n\t\toption.defaultSelected = false;\n\t});\n}\n\nlet tinymceSettings = [];\nfunction prepareForCloning(originalNode){\n\t//First remove any nice selects\n\toriginalNode.querySelectorAll('select').forEach(select => {\n\t\t//remove defaults if it has changed\n\t\tif(select.selectedIndex != -1){\n\t\t\tif(!select.options[select.selectedIndex].defaultSelected){\n\t\t\t\t//remove all default selected\n\t\t\t\tremoveDefaultSelect(select);\n\t\t\t}\n\t\t}\n\t\t\n\t\t//Then add a new default selected if needed\n\t\tif(select.selectedOptions.length>0){\n\t\t\tselect.selectedOptions[0].defaultSelected = true;\n\t\t}\n\t\t\n\t\t//remove the original\n\t\tselect._niceselect.destroy()\n\t});\n\n\t//also remove any tinymce's\n\tif(typeof(tinymce) != 'undefined'){\n\t\toriginalNode.querySelectorAll('.wp-editor-area').forEach(el =>{\n\t\t\tlet tn = tinymce.get(el.id);\n\t\t\tif(tn != null){\n\t\t\t\ttinymceSettings[el.id] = tn.settings\n\t\t\t\ttn.save();\n\t\t\t\ttn.remove();\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport function cloneNode(originalNode, clear=true){\n\tprepareForCloning(originalNode);\n\t\n\t//make a clone\n\tlet newNode = originalNode.cloneNode(true);\n\t\n\t//Then add niceselects again after cloning took place\n\toriginalNode.querySelectorAll('select').forEach(select => {\n\t\tselect._niceselect = NiceSelect.bind(select,{searchable: true});\n\t\tif(select.value == ''){\n\t\t\tselect._niceselect.clear();\n\t\t}\n\t});\n\t\n\t//add tinymce's again\n\toriginalNode.querySelectorAll('.wp-editor-area').forEach(el =>{\n\t\ttinymce.init(tinymceSettings[el.id]);\n\t});\n\t\n\t//clear values in the clone\n\tif(clear){\n\t\tnewNode.querySelectorAll('input,select,textarea').forEach(input => {\n\t\t\tif(input.type == 'checkbox' || input.type == 'radio'){\n\t\t\t\tinput.checked = false;\n\t\t\t}else if(input.type != 'hidden'){\n\t\t\t\tinput.value = \"\";\n\t\t\t}\n\t\t\t\n\t\t\t//if this is a select\n\t\t\tif(input.type == \"select-one\"){\n\t\t\t\t//remove any defaults\n\t\t\t\tremoveDefaultSelect(input);\n\t\t\t\t\n\t\t\t\tinput._niceselect = NiceSelect.bind(input,{searchable: true});\n\t\t\t\tinput._niceselect.clear();\n\t\t\t}\n\t\t});\n\t}else{\n\t\tnewNode.querySelectorAll('select').forEach(select => {\n\t\t\tselect._niceselect = NiceSelect.bind(select,{searchable: true});\n\t\t});\n\t}\n\t\n\treturn newNode;\n}\n\nexport function copyFormInput(originalNode){\n\tlet newNode = cloneNode(originalNode);\n\t\n\t//update the data index\n\tnewNode.querySelectorAll('.upload-files').forEach(function(uploadButton){\n\t\tuploadButton.dataset.index = nodeNr;\n\t})\n\t\n\t//Clear contents of any document preview divs.\n\tnewNode.querySelectorAll('.documentpreview').forEach(function(previewDiv){\n\t\tpreviewDiv.innerHTML = '';\n\t});\n\n\t//Select\n\tlet i = 0;\n\tnewNode.querySelectorAll('select').forEach(select => {\n\t\t//Find the value of the select we have cloned\n\t\tlet previousVal = originalNode.getElementsByTagName('select')[i].selectedIndex;\n\t\t\n\t\t//Hide the value in the clone\n\t\tselect.options[previousVal].style.display = 'none';\n\t\t\n\t\t//Add nice select\n\t\tselect._niceselect.update();\n\t\t\n\t\tselect.nextSibling.querySelector('.current').textContent = 'Select an option';\n\t\t\n\t\ti++;\n\t});\n\t\n\t//Add remove buttons if they are not there\n\tif(originalNode.querySelector('.remove') == null){\n \t\tlet addElement \t\t= newNode.querySelector('.add');\n\t\tlet elementClass \t= addElement.className.replace('add','remove');\n\t\tlet id \t\t\t\t= addElement.id.replace('add','remove');\n\t\tlet content \t\t= addElement.textContent.replace('Add','Remove this').replace('an','').replace('+','-');\n\t\t\n\t\tlet html = `<button type=\"button\" class=\"${elementClass}\" id=\"${id}\" style=\"flex: 1;\">${content}</button>`;\n\t\t\n\t\t//Add minus button to the first div\n\t\toriginalNode.querySelector('.buttonwrapper').insertAdjacentHTML('beforeend', html);\n\t\t//Add minus button to the second div\n\t\tnewNode.querySelector('.buttonwrapper').insertAdjacentHTML('beforeend', html)\n\t}\t\n\t\n\t//Insert the clone\n\toriginalNode.parentNode.insertBefore(newNode, originalNode.nextSibling);\n\t\n\treturn newNode;\n}\n\nexport function fixNumbering(cloneDivsWrapper){\n\tcloneDivsWrapper.querySelectorAll(':scope > .clone_div').forEach((clone, index)=>{\n\t\t//Update the new number\t\n\t\t//DIV\n\t\tif(clone.id != ''){\n\t\t\tclone.id = clone.id.replace(/(\\d)/g, index);\n\t\t}\n\t\t\n\t\tif(clone.dataset.divid  != null){\n\t\t\tclone.dataset.divid = index;\n\t\t}\n\t\t\n\t\t//Update the title\n\t\tclone.querySelectorAll('h3, h4').forEach(title => {\n\t\t\ttitle.textContent = title.textContent.replace(/(\\d)/g, index+1);\n\t\t});\n\t\t\n\t\t//Update the legend\n\t\tclone.querySelectorAll('legend').forEach(legend => {\n\t\t\tlegend.innerHTML = legend.innerHTML.replace(/ (\\d)/g, ' '+(index+1));\n\t\t});\n\t\t\n\t\t//Update the elements\n\t\tclone.querySelectorAll('input,select,textarea').forEach(input => {\n\t\t\t//Do not copy nice selects\n\t\t\tif(!input.classList.contains('nice-select-search')){\n\t\t\t\t//Update the id\n\t\t\t\tif(input.id != '' && input.id != undefined){\n\t\t\t\t\tinput.id = input.id.replace(/(\\d)/g, index);\n\t\t\t\t}\n\t\t\t\t//Update the name\n\t\t\t\tif(input.name != '' && input.name != undefined){\n\t\t\t\t\tinput.name = input.name.replace(/(\\d)/g, index);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t//Reset the select to the default\n\t\t\t\tif(input.type == 'button'){\n\t\t\t\t\tinput.value = input.value.replace(/\\d/g, index);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t})\n}\n\nexport function removeNode(target){\n\tlet node\t\t\t= target.closest(\".clone_div\");\n\tlet parentNode\t\t= node.closest('.clone_divs_wrapper');\n\tlet allCloneDivs\t= parentNode.querySelectorAll('.clone_div');\n\t\n\t//Check if we are removing the last element\n\tif(allCloneDivs[allCloneDivs.length-1] == node){\n\t\tlet addElement = node.querySelector(\".add\");\n\t\t\n\t\t//Move the add button one up\n\t\tlet prev = node.previousElementSibling;\n\t\tprev.querySelector('.buttonwrapper').appendChild(addElement);\n\t}\n\t\n\t//Remove the node\n\tnode.remove();\n\n\t//If there is only one div remaining, remove the remove button\n\tif(parentNode.querySelectorAll('.clone_div').length == 1){\n\t\tlet removeElement = parentNode.querySelector('.remove');\n\t\tremoveElement.remove();\n\t}\n\n\tfixNumbering(parentNode)\n}\n\n/* \n\tFUNCTIONS USED BY DYNAMIC FORMS JS\n */\nexport function tidyMultiInputs(){\n\t//remove unnecessary buttons on inputs with multiple values\n\tdocument.querySelectorAll('.clone_divs_wrapper').forEach(function(div){\n\t\tlet cloneDivArr\t= div.querySelectorAll('.clone_div');\n\t\t\n\t\tif(cloneDivArr.length == 1){\n\t\t\tcloneDivArr[0].querySelectorAll('.remove').forEach(el=>el.remove());\n\t\t}\n\t\t\n\t\tcloneDivArr.forEach(function(cloneDiv, index, array){\n\t\t\t//update dataset\n\t\t\tcloneDiv.dataset.divid = index;\n\t\t\t\n\t\t\t//remove add button for all but the last\n\t\t\tif(index != array.length - 1){\n\t\t\t\tcloneDiv.querySelectorAll('.add').forEach(el=>el.remove());\n\t\t\t}\n\t\t})\n\t});\n}\n\t\n//show a next form step\nexport function showTab(n, form) {\n\tif(typeof(form) != 'undefined'){\n\t\tif(n == 0){\n\t\t\tlet loader = form.querySelector('.formsteploader');\n\t\t\t//hide loader\n\t\t\tif(loader != null){\n\t\t\t\tloader.classList.add('hidden');\n\t\t\t\n\t\t\t\t//show form controls\n\t\t\t\tform.querySelector('.multistepcontrols').classList.remove('hidden');\n\t\t\t}\n\t\t}\n\t\t\n\t\t//hide all formsteps\n\t\tform.querySelectorAll('.formstep:not(.stephidden)').forEach(step=>step.classList.add('stephidden'));\n\t\t\n\t\t// Show the specified formstep of the form ...\n\t\tlet x = form.getElementsByClassName(\"formstep\");\n\t\t\n\t\tif(x.length == 0){\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t//scroll back to top\n\t\tlet y = x[n].offsetTop - document.querySelector(\"#masthead\").offsetHeight\n\t\twindow.scrollTo({ top: y, behavior: 'auto'});\n\t\t\n\t\t//show\n\t\tx[n].classList.remove('stephidden');\n\n\t\t// This function removes the \"active\" class of all steps...\n\t\tform.querySelectorAll(\".step.active\").forEach(el=>{el.classList.remove('active');});\n\n\t\t//... and adds the \"active\" class to the current step:\n\t\tx = form.getElementsByClassName(\"step\");\n\t\tx[n].classList.add(\"active\");\n\n\t\t// ... and fix the Previous/Next buttons:\n\t\tif (n == 0) {\n\t\t\tform.querySelector('[name=\"prevBtn\"]').classList.add('hidden');\n\t\t} else {\n\t\t\tform.querySelector('[name=\"prevBtn\"]').classList.remove('hidden');\n\t\t}\n\n\t\tif (n == (x.length - 1)) {\n\t\t\tform.querySelector('[name=\"nextBtn\"]').classList.add('hidden');\n\t\t\tform.querySelector('.form_submit').classList.remove('hidden');\n\t\t} else {\n\t\t\tform.querySelector('[name=\"nextBtn\"]').classList.remove('hidden');\n\t\t\tform.querySelector('.form_submit').classList.add('hidden');\n\t\t}\n\t}else{\n\t\tconsole.log('no form defined');\n\t}\n\t\t\n}\n\n//next form step clicked\nexport function nextPrev(n) {\n\t// This function will figure out which tab to display\n\tlet x \t\t\t\t= form.querySelectorAll(\".formstep\");\n\tlet stepIndicators\t= form.querySelectorAll(\".step\");\n\tlet currentTab\t\t= 0;\n\tlet valid;\n\n\t// Find the current active tab\n\tx.forEach((el, index)=>{if(!el.matches('.stephidden')){currentTab = index}});\n\t\n\t//Check validity of this step if going forward\n\tif(n>0){\n\t\t// Report validity of each required field\n\t\tlet elements\t= x[currentTab].querySelectorAll('.required:not(.hidden) input, .required:not(.hidden) textarea, .required:not(.hidden) select');\n\t\tfor(const element of elements) {\n\t\t\telement.required\t\t= true;\n\t\t\tvalid\t\t= element.reportValidity();\n\t\t\tif(!valid){\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif(!valid) return;\n\t\t\n\t\t//mark the last step as finished\n\t\tstepIndicators[currentTab].classList.add(\"finish\");\n\t}else{\n\t\t//mark the last step as unfinished\n\t\tstepIndicators[currentTab].classList.remove(\"finish\");\n\t}\n\t\n\t//loop over all the formsteps to hide stepindicators of them if needed\n\tArray.from(x).forEach((formstep,index) =>{\n\t\tif(formstep.classList.contains('hidden')){\n\t\t\t//hide the corresponding circle\n\t\t\tstepIndicators[index].classList.add('hidden');\n\t\t}\n\t});\n\n\t// Increase or decrease the current tab by 1:\n\tcurrentTab = currentTab + n;\n\t\n\t//check if the next tab is hidden\n\twhile(x[currentTab].classList.contains('hidden')){\n\t\t//go to the next tab\n\t\tcurrentTab = currentTab + n;\n\t}\n\t\n\t// if you have reached the end of the form... :\n\tif (currentTab >= x.length) {\n\t\treturn false;\n\t}\n\t// Otherwise, display the correct tab:\n\tshowTab(currentTab,form);\n}\n\nfunction getRadioValue(form, name){\n\tlet el\t= form.querySelector(`[name='${name}' i]:checked`);\n\n\t//There is no radio selected currently\n\tif(el == null){\n\t\t//return an empty value\n\t\treturn '';\n\t}\n\n\treturn el.value;\n}\n\nfunction getCheckboxValue(form, name, compareValue, orgName){\n\tlet value\t\t= '';\n\tlet elements\t= '';\n\n\t//we are dealing with a specific checkbox\n\tif(orgName.type == 'checkbox' ){\n\t\tif(el.checked){\n\t\t\treturn el.value;\n\t\t}\n\t\t\n\t\treturn '';\n\t}\n\n\t//we should find the checkbox with this value and check if it is checked\n\tif(compareValue != null){\n\t\telements\t= form.querySelector(`[name='${name}' i][value=\"${compareValue}\" i]:checked`);\n\t\tif(elements != null){\n\t\t\tvalue = compareValue;\n\t\t}\n\t//no compare value give just return all checked values\n\t}else{\n\t\telements\t= form.querySelectorAll(`[name=\"${name}\" i]:checked`);\n\t\t\n\t\telements.forEach(el=>{\n\t\t\tif(value != ''){\n\t\t\t\tvalue += ', ';\n\t\t\t}\n\t\t\tvalue += el.value;\n\t\t});\n\t}\n\n\treturn value;\n}\n\nfunction getDataListValue(el){\n\tlet value\t\t= '';\n\tlet origInput \t= el.list.querySelector(\"[value='\"+el.value+\"' i]\");\n\t\t\t\n\tif(origInput == null){\n\t\tvalue =  el.value;\n\t}else{\n\t\tvalue = origInput.dataset.value;\n\t\tif(value == ''){\n\t\t\tvalue =  el.value;\n\t\t}\n\t}\n\n\treturn value;\n}\n\nexport function getFieldValue(orgName, form, checkDatalist=true, compareValue=null, lowercase=false){\n\tlet el\t\t= ''; \n\tlet name\t= '';\n\tlet value \t= '';\n\n\t//name is not a name but a node\n\tif(orgName instanceof Element){\n\t\tel\t\t\t= orgName;\t\t\n\t\t//check if valid input type\n\t\tif(el.tagName != 'INPUT' && el.tagName != 'TEXTAREA' && el.tagName != 'SELECT' && el.closest('.nice-select-dropdown') == null){\n\t\t\tel = el.querySelector('input, select, textarea');\n\t\t}\n\t\tif(el == null){\n\t\t\tel\t\t\t= orgName;\n\t\t}\n\t\tname\t\t= el.name;\n\t}else{\n\t\tname\t\t= orgName;\n\t\tel\t\t\t= form.querySelector(`[name='${name}' i]`);\n\t}\n\t\n\tif(el == null){\n\t\tconsole.trace();\n\t\tconsole.log(\"cannot find element with name \"+name);\n\n\t\treturn value;\n\t}\n\n\tif(el.type == 'radio'){\n\t\tvalue\t= getRadioValue(form, name);\n\t}else if(el.type == 'checkbox'){\n\t\tvalue\t= getCheckboxValue(form, name, compareValue, orgName);\t\n\t}else if(el.closest('.nice-select-dropdown') != null && el.dataset.value != undefined){\n\t\t//nice select\n\t\tvalue = el.dataset.value\n\t}else if(el.list != null && checkDatalist){\n\t\tvalue =  getDataListValue(el);\n\t}else if(el.value != null && el.value != 'undefined'){\n\t\tvalue = el.value;\n\t}\n\t\n\tif(lowercase){\n\t\treturn value.toLowerCase();\n\t}\n\treturn value;\n}\n\nfunction findcheckboxTarget(form, name, value){\n\tlet targets = form.querySelectorAll(`[name=\"${name}\" i]`);\n\tfor (const element of targets) {\n\t\tif(element.value.toLowerCase() == value.toLowerCase()){\n\t\t\treturn element;\n\t\t}\n\t}\n}\n\nexport function changeFieldValue(orgName, value, functionRef){\n\tlet name\t= '';\n\tlet target\t= '';\n\n\tif(orgName instanceof Element){\n\t\tname\t= orgName.name;\n\t\ttarget\t= orgName;\n\t}else{\n\t\tname \t= orgName;\n\t\t//get the target\n\t\ttarget \t= form.querySelector(`[name=\"${name}\" i]`);\n\t}\n\t\n\tif(target.type == 'radio' || target.type == 'checkbox'){\n\t\tif(!(orgName instanceof Element)){\n\t\t\ttarget\t= findcheckboxTarget(form, name, value);\n\t\t}\n\t\t\n\t\tif(target.value.toLowerCase() == value.toLowerCase()){\n\t\t\ttarget.checked = true;\n\t\t}\n\t//the target has a list attached to it\n\t}else if(target.list != null){\n\t\tlet dataListOption = target.list.querySelector(`[data-value=\"${value}\" i]`);\n\n\t\t//we found a match\n\t\tif(dataListOption != null){\n\t\t\ttarget.value = dataListOption.value;\n\t\t}else{\n\t\t\ttarget.value = value;\n\t\t}\n\t}else{\n\t\ttarget.value = value;\n\t}\n\t\n\t//create a new event\n\tlet evt = new Event('input');\n\t//attach the target\n\ttarget.dispatchEvent(evt);\n\t\n\t//run the originating function with this event\n\tfunctionRef(target);\n}\n\nexport function changeFieldProperty(name, att, value, functionRef){\n\t//first change the value\n\tlet target = form.querySelector(`[name=\"${name}\" i]`);\n\t\n\tform.querySelector(`[name=\"${name}\"]`)[att] = value;\n\t\n\t//create a new event\n\tlet evt = new Event('input');\n\n\t//attach the target\n\ttarget.dispatchEvent(evt);\n\n\t//run the originating function with this event\n\tfunctionRef(target);\n}\n\n//Main code\ndocument.addEventListener(\"DOMContentLoaded\",function() {\n\tconsole.log('Forms.js is loaded');\n});\n\n//we are online again\nwindow.addEventListener('online',function(){\n\tdocument.querySelectorAll('.form_submit').forEach(btn=>{\n\t\tbtn.disabled = false\n\t\tbtn.querySelectorAll('.offline').forEach(el=>el.remove());\n\t});\n});\n\n//prevent form submit when offline\nwindow.addEventListener('offline',function(){\n\tdocument.querySelectorAll('.form_submit').forEach(btn=>{\n\t\tbtn.disabled = true;\n\t\tif(btn.querySelector('.online') == null){\n\t\t\tbtn.innerHTML = '<div class=\"online\">'+btn.innerHTML+'</div>';\n\t\t}\n\t\tbtn.innerHTML += '<div class=\"offline\">You are offline</div>'\n\t});\n});\n\ndocument.addEventListener('click',function(event) {\n\tlet target = event.target;\n\t\n\t//add element\n\tif(target.matches('.add')){\n\t\tlet newNode = copyFormInput(target.closest(\".clone_div\"));\n\n\t\tfixNumbering(target.closest('.clone_divs_wrapper'));\n\n\t\t//add tinymce's can only be done when node is inserted and id is unique\n\t\tnewNode.querySelectorAll('.wp-editor-area').forEach(el =>{\n\t\t\twindow.tinyMCE.execCommand('mceAddEditor',false, el.id);\n\t\t});\n\n\t\ttarget.remove();\n\t}\n\t\n\t//remove element\n\tif(target.matches('.remove')){\n\t\t//Remove node clicked\n\t\tremoveNode(target);\n\t}\n\n\tif(target.matches('.sim_form [name=\"submit_form\"]')){\n\t\tevent.stopPropagation();\n\t\t\n\t\tsaveFormInput(target);\n\t}\n});"],"names":["root","factory","exports","module","define","amd","self","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","removeDefaultSelect","el","Array","from","options","forEach","option","defaultSelected","tinymceSettings","cloneNode","originalNode","clear","querySelectorAll","select","selectedIndex","selectedOptions","length","_niceselect","destroy","tn","tinymce","id","settings","save","remove","prepareForCloning","newNode","NiceSelect","bind","searchable","init","input","type","checked","copyFormInput","uploadButton","dataset","index","nodeNr","previewDiv","innerHTML","i","previousVal","getElementsByTagName","style","display","update","nextSibling","querySelector","textContent","addElement","html","className","replace","insertAdjacentHTML","parentNode","insertBefore","fixNumbering","cloneDivsWrapper","clone","divid","title","legend","classList","contains","undefined","name","removeNode","target","node","closest","allCloneDivs","previousElementSibling","appendChild","tidyMultiInputs","document","div","cloneDivArr","cloneDiv","array","showTab","n","form","loader","add","step","x","getElementsByClassName","y","offsetTop","offsetHeight","window","scrollTo","top","behavior","console","log","nextPrev","valid","stepIndicators","currentTab","matches","elements","element","required","reportValidity","formstep","getCheckboxValue","compareValue","orgName","getFieldValue","checkDatalist","lowercase","Element","tagName","trace","getRadioValue","list","origInput","getDataListValue","toLowerCase","changeFieldValue","functionRef","targets","findcheckboxTarget","dataListOption","evt","Event","dispatchEvent","changeFieldProperty","att","addEventListener","btn","disabled","event","tinyMCE","execCommand","stopPropagation","async","response","FormSubmit","submitForm","Main","displayMessage","reset","formReset","saveFormInput"],"sourceRoot":""}