{"version":3,"file":"forms.min.js","mappings":"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","sources":["webpack://forms/./forms.js"],"sourcesContent":["function remove_default_select(el){\r\n\tArray.from(el.options).forEach(function(option){\r\n\t\toption.defaultSelected = false;\r\n\t});\r\n}\r\n\r\nfunction clone_node(original_node, clear=true){\r\n\t//First remove any nice selects\r\n\toriginal_node.querySelectorAll('select').forEach(select => {\r\n\t\t//remove defaults if it has changed\r\n\t\tif(select.options[select.selectedIndex].defaultSelected == false){\r\n\t\t\t//remove all default selected\r\n\t\t\tremove_default_select(select);\r\n\t\t}\r\n\t\t\r\n\t\t//Then add a new default selected if needed\r\n\t\tif(select.selectedOptions.length>0){\r\n\t\t\tselect.selectedOptions[0].defaultSelected = true;\r\n\t\t}\r\n\t\t\r\n\t\t//remove the original\r\n\t\tselect._niceselect.destroy()\r\n\t});\r\n\t\r\n\t//also remove any tinymce's\r\n\tif(typeof(tinymce) != 'undefined'){\r\n\t\ttinymce_settings = [];\r\n\t\toriginal_node.querySelectorAll('.wp-editor-area').forEach(el =>{\r\n\t\t\tvar tn = tinymce.get(el.id);\r\n\t\t\tif(tn != null){\r\n\t\t\t\ttinymce_settings[el.id] = tn.settings\r\n\t\t\t\ttn.save();\r\n\t\t\t\ttn.remove();\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\t\r\n\t//make a clone\r\n\tnewnode = original_node.cloneNode(true);\r\n\t\r\n\t//Then add niceselects again after cloning took place\r\n\toriginal_node.querySelectorAll('select').forEach(select => {\r\n\t\tselect._niceselect = NiceSelect.bind(select,{searchable: true});\r\n\t\tif(select.value == ''){\r\n\t\t\tselect._niceselect.clear();\r\n\t\t}\r\n\t});\r\n\t\r\n\t//add tinymce's again\r\n\toriginal_node.querySelectorAll('.wp-editor-area').forEach(el =>{\r\n\t\ttinymce.init(tinymce_settings[el.id]);\r\n\t});\r\n\t\r\n\t//clear values in the clone\r\n\tif(clear == true){\r\n\t\tnewnode.querySelectorAll('input,select,textarea').forEach(input => {\r\n\t\t\tif(input.type == 'checkbox' || input.type == 'radio'){\r\n\t\t\t\tinput.checked = false;\r\n\t\t\t}else if(input.type != 'hidden'){\r\n\t\t\t\tinput.value = \"\";\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t//if this is a select\r\n\t\t\tif(input.type == \"select-one\"){\r\n\t\t\t\t//remove any defaults\r\n\t\t\t\tremove_default_select(input);\r\n\t\t\t\t\r\n\t\t\t\tinput._niceselect = NiceSelect.bind(input,{searchable: true});\r\n\t\t\t\tinput._niceselect.clear();\r\n\t\t\t}\r\n\t\t});\r\n\t}else{\r\n\t\tnewnode.querySelectorAll('select').forEach(select => {\r\n\t\t\tselect._niceselect = NiceSelect.bind(select,{searchable: true});\r\n\t\t});\r\n\t}\r\n\t\r\n\treturn newnode;\r\n}\r\n\r\nfunction copy_form_input(original_node){\r\n\tnewnode = clone_node(original_node);\r\n\t\r\n\t//Find the node number\r\n\tvar nodenr = parseInt(original_node.dataset.divid)+1;\r\n\t\r\n\tif(original_node.getAttribute(\"data-type\") != null){\r\n\t\tvar datatype = original_node.getAttribute(\"data-type\").replace('[','\\\\[').replace(']','\\\\]');\r\n\t\tre = new RegExp('('+datatype+'?\\\\]?\\\\[).*[0-9](.*)',\"g\");\r\n\t}else{\r\n\t\tre = new RegExp('(.*)[0-9](.*)',\"g\");\r\n\t}\r\n\t\r\n\t//update the data index\r\n\tnewnode.querySelectorAll('.upload-files').forEach(function(uploadbutton){\r\n\t\tuploadbutton.dataset.index = nodenr;\r\n\t})\r\n\t\r\n\t//Clear contents of any document preview divs.\r\n\tnewnode.querySelectorAll('.documentpreview').forEach(function(previewdiv){\r\n\t\tpreviewdiv.innerHTML = '';\r\n\t});\r\n\r\n\t//Select\r\n\tvar i = 0;\r\n\tnewnode.querySelectorAll('select').forEach(select => {\r\n\t\t//Find the value of the select we have cloned\r\n\t\tprevious_val = original_node.getElementsByTagName('select')[i].selectedIndex;\r\n\t\t\r\n\t\t//Hide the value in the clone\r\n\t\tselect.options[previous_val].style.display = 'none';\r\n\t\t\r\n\t\t//Add nice select\r\n\t\tselect._niceselect.update();\r\n\t\t\r\n\t\tselect.nextSibling.querySelector('.current').textContent = 'Select an option';\r\n\t\t\r\n\t\ti++;\r\n\t});\r\n\t\r\n\t//Add remove buttons if they are not there\r\n\tif(original_node.querySelector('.remove') == null){\r\n \t\tvar add_element \t= newnode.querySelector('.add');\r\n\t\tvar element_class \t= add_element.className.replace('add','remove');\r\n\t\tvar id \t\t\t\t= add_element.id.replace('add','remove');\r\n\t\tvar content \t\t= add_element.textContent.replace('Add','Remove this').replace('an','').replace('+','-');\r\n\t\t\r\n\t\tvar html = '<button type=\"button\" class=\"'+element_class+'\" id=\"'+id+'\" style=\"flex: 1;\">'+content+'</button>';\r\n\t\t\r\n\t\t//Add minus button to the first div\r\n\t\toriginal_node.querySelector('.buttonwrapper').insertAdjacentHTML('beforeend',html);\r\n\t\t//Add minus button to the second div\r\n\t\tnewnode.querySelector('.buttonwrapper').insertAdjacentHTML('beforeend',html)\r\n\t}\r\n\t\r\n\t//Insert the clone\r\n\toriginal_node.parentNode.insertBefore(newnode, original_node.nextSibling);\r\n\t\r\n\t//add tinymce's can only be done when node is inserted and id is unique\r\n\tnewnode.querySelectorAll('.wp-editor-area').forEach(el =>{\r\n\t\ttinymce.init({selector:\"#\"+el.id});\r\n\t});\r\n\t\r\n\treturn newnode;\r\n}\r\n\r\nfunction fix_numbering(clone_divs_wrapper){\r\n\tclone_divs_wrapper.querySelectorAll('.clone_div').forEach((clone, index)=>{\r\n\t\t//Update the new number\t\r\n\t\t//DIV\r\n\t\tif(clone.id != ''){\r\n\t\t\tclone.id = clone.id.replace(re, '$1'+index+'$2');\r\n\t\t}\r\n\t\t\r\n\t\tif(clone.dataset.divid  != null){\r\n\t\t\tclone.dataset.divid = index;\r\n\t\t}\r\n\t\t\r\n\t\t//Update the title\r\n\t\tclone.querySelectorAll('h3').forEach(title => {\r\n\t\t\ttitle.textContent = title.textContent.replace(/([0-9])/g, index+1);\r\n\t\t});\r\n\t\t\r\n\t\t//Update the label\r\n\t\tclone.querySelectorAll('label, legend').forEach(label => {\r\n\t\t\tlabel.innerHTML = label.innerHTML.replace(/ ([0-9])/g, ' '+(index+1));\r\n\t\t});\r\n\t\t\r\n\t\t//Update the elements\r\n\t\tclone.querySelectorAll('input,select,textarea').forEach(input => {\r\n\t\t\t//Do not copy nice selects\r\n\t\t\tif(!input.classList.contains('nice-select-search')){\r\n\t\t\t\t//Update the id\r\n\t\t\t\tif(input.id != '' && input.id != undefined){\r\n\t\t\t\t\tinput.id = input.id.replace(re, '$1'+index+'$2');\r\n\t\t\t\t}\r\n\t\t\t\t//Update the name\r\n\t\t\t\tif(input.name != '' && input.name != undefined){\r\n\t\t\t\t\tinput.name = input.name.replace(re, '$1'+index+'$2');\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t//Reset the select to the default\r\n\t\t\t\tif(input.type == 'button'){\r\n\t\t\t\t\tinput.value = input.value.replace(/[0-9]/g, index);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t})\r\n}\r\n\r\nfunction remove_node(target){\r\n\tvar node\t\t\t= target.closest(\".clone_div\");\r\n\tvar parent_node\t\t= node.closest('.clone_divs_wrapper');\r\n\tvar all_clone_divs\t= parent_node.querySelectorAll('.clone_div');\r\n\t\r\n\t//Check if we are removing the last element\r\n\tif(all_clone_divs[all_clone_divs.length-1] == node){\r\n\t\tvar add_element = node.querySelector(\".add\");\r\n\t\t\r\n\t\t//Move the add button one up\r\n\t\tvar prev = node.previousElementSibling;\r\n\t\tprev.querySelector('div').appendChild(add_element);\r\n\t}\r\n\t\r\n\t//Check which number to update\r\n\tif(node.getAttribute(\"data-type\") != null){\r\n\t\tvar datatype = node.getAttribute(\"data-type\").replace('[','\\\\[').replace(']','\\\\]');\r\n\t\tre = new RegExp('('+datatype+'?\\\\]?\\\\[).*[0-9](.*)',\"g\");\r\n\t}else{\r\n\t\tre = new RegExp('(.*)[0-9](.*)',\"g\");\r\n\t}\r\n\t\r\n\t//Remove the node\r\n\tnode.remove();\r\n\t\r\n\t//update the collection\r\n\tall_clone_divs\t= parent_node.querySelectorAll('.clone_div');\r\n\t\r\n\t//If there is only one div remaining, remove the remove button\r\n\tif(all_clone_divs.length == 1){\r\n\t\tvar remove_element = parent_node.querySelector('.remove');\r\n\t\tremove_element.remove();\r\n\t}\r\n\t\r\n\t//Loop over all the remaining nodes.\r\n\tnodenr = parseInt(all_clone_divs[0].dataset.divid);\r\n\tall_clone_divs.forEach(function(clonenode){\r\n\t\tif(clonenode.dataset.type == 'understudies'){\r\n\t\t\t//update the data index\r\n\t\t\tclonenode.querySelectorAll('.upload-files').forEach(function(uploadbutton){\r\n\t\t\t\tuploadbutton.dataset.index = nodenr;\r\n\t\t\t})\r\n\t\t}\r\n\t\t\t\r\n\t\t//DIV\r\n\t\tif(clonenode.id != ''){\r\n\t\t\tclonenode.id = clonenode.id.replace(re, '$1'+nodenr+'$2');\r\n\t\t}\r\n\t\t\r\n\t\tclonenode.dataset.divid = nodenr;\r\n\t\t\r\n\t\t//Update the title\r\n\t\tclonenode.querySelectorAll('h3').forEach(title => {\r\n\t\t\ttitle.textContent = title.textContent.replace(/[0-9]/g, nodenr);\r\n\t\t});\r\n\t\t\r\n\t\t//Update the label\r\n\t\tclonenode.querySelectorAll('label').forEach(label => {\r\n\t\t\tif(all_clone_divs[0].dataset.divid == 0){\r\n\t\t\t\tlabelnr = nodenr + 1;\r\n\t\t\t}else{\r\n\t\t\t\tlabelnr = nodenr;\r\n\t\t\t}\r\n\t\t\tlabel.innerHTML = label.innerHTML.replace(/ ([0-9])/g, function($1) {return ' '+labelnr});\r\n\t\t});\r\n\t\t\r\n\t\t//Update the elements\r\n\t\tclonenode.querySelectorAll('input,select,textarea').forEach(input => {\r\n\t\t\tif(input.id != ''){\r\n\t\t\t\t//Update the id\r\n\t\t\t\tinput.id = input.id.replace(re, '$1'+nodenr+'$2');\r\n\t\t\t}\r\n\t\t\t//Update the name\r\n\t\t\tinput.name = input.name.replace(re, '$1'+nodenr+'$2');\r\n\t\t});\t\r\n\r\n\t\tnodenr += 1;\r\n\t})\r\n}\r\n\r\n/* \r\n\tFUNCTIONS USED BY DYNAMIC FORMS JS\r\n */\r\nfunction tidy_multi_inputs(){\r\n\t//remove unnecessary buttons on inputs with multiple values\r\n\tdocument.querySelectorAll('.clone_divs_wrapper').forEach(function(div){\r\n\t\tvar clone_div_arr\t= div.querySelectorAll('.clone_div');\r\n\t\t\r\n\t\tif(clone_div_arr.length == 1){\r\n\t\t\tclone_div_arr[0].querySelectorAll('.remove').forEach(el=>el.remove());\r\n\t\t}\r\n\t\t\r\n\t\tclone_div_arr.forEach(function(clone_div, index, array){\r\n\t\t\t//update dataset\r\n\t\t\tclone_div.dataset.divid = index;\r\n\t\t\t\r\n\t\t\t//remove add button for all but the last\r\n\t\t\tif(index != array.length - 1){\r\n\t\t\t\tclone_div.querySelectorAll('.add').forEach(el=>el.remove());\r\n\t\t\t}\r\n\t\t})\r\n\t});\r\n}\r\n\t\r\n//show a next form step\r\nfunction showTab(n,form) {\r\n\tif(typeof(form) != 'undefined'){\r\n\t\tif(n == 0){\r\n\t\t\tvar loader = form.querySelector('.formsteploader');\r\n\t\t\t//hide loader\r\n\t\t\tif(loader != null){\r\n\t\t\t\tloader.classList.add('hidden');\r\n\t\t\t\r\n\t\t\t\t//show form controls\r\n\t\t\t\tform.querySelector('.multistepcontrols').classList.remove('hidden');\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//hide all formsteps\r\n\t\tform.querySelectorAll('.formstep:not(.stephidden)').forEach(step=>step.classList.add('stephidden'));\r\n\t\t\r\n\t\t// Show the specified formstep of the form ...\r\n\t\tvar x = form.getElementsByClassName(\"formstep\");\r\n\t\t\r\n\t\tif(x.length == 0){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t//scroll back to top\r\n\t\tvar y = x[n].offsetTop - document.querySelector(\"#masthead\").offsetHeight\r\n\t\twindow.scrollTo({ top: y, behavior: 'auto'});\r\n\t\t\r\n\t\t//show\r\n\t\tx[n].classList.remove('stephidden');\r\n\r\n\t\t// This function removes the \"active\" class of all steps...\r\n\t\tform.querySelectorAll(\".step.active\").forEach(el=>{el.classList.remove('active');});\r\n\r\n\t\t//... and adds the \"active\" class to the current step:\r\n\t\tvar x = form.getElementsByClassName(\"step\");\r\n\t\tx[n].classList.add(\"active\");\r\n\r\n\t\t// ... and fix the Previous/Next buttons:\r\n\t\tif (n == 0) {\r\n\t\t\tform.querySelector('[name=\"prevBtn\"]').classList.add('hidden');\r\n\t\t} else {\r\n\t\t\tform.querySelector('[name=\"prevBtn\"]').classList.remove('hidden');\r\n\t\t}\r\n\r\n\t\tif (n == (x.length - 1)) {\r\n\t\t\tform.querySelector('[name=\"nextBtn\"]').classList.add('hidden');\r\n\t\t\tform.querySelector('.form_submit').classList.remove('hidden');\r\n\t\t} else {\r\n\t\t\tform.querySelector('[name=\"nextBtn\"]').classList.remove('hidden');\r\n\t\t\tform.querySelector('.form_submit').classList.add('hidden');\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.log('no form defined');\r\n\t}\r\n\t\t\r\n}\r\n\r\n//next form step clicked\r\nfunction nextPrev(n) {\r\n\t// This function will figure out which tab to display\r\n\tvar x \t\t\t\t= form.getElementsByClassName(\"formstep\");\r\n\tvar stepindicators\t= form.getElementsByClassName(\"step\");\r\n\t\r\n\t//reset required fields\r\n\tform.querySelectorAll('[required]').forEach(el=>{el.required = false;});\r\n\t\r\n\t//Check validity of this step if going forward\r\n\tif(n>0){\r\n\t\t//make all required fields of this step required\r\n\t\tx[currentTab].querySelectorAll('.required:not(.hidden) input, .required:not(.hidden) textarea, .required:not(.hidden) select').forEach(el=>{el.required = true});\r\n\t\t//report validity to the user\r\n\t\tform.reportValidity();\r\n\t\t//if not valid return\r\n\t\tif(form.checkValidity() == false){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\t//mark the last step as finished\r\n\t\tstepindicators[currentTab].classList.add(\"finish\");\r\n\t}else{\r\n\t\t//mark the last step as unfinished\r\n\t\tstepindicators[currentTab].classList.remove(\"finish\");\r\n\t}\r\n\t\r\n\t//loop over all the formsteps to hide stepindicators of them if needed\r\n\tArray.from(x).forEach((formstep,index) =>{\r\n\t\tif(formstep.classList.contains('hidden')){\r\n\t\t\t//hide the corresponding circle\r\n\t\t\tstepindicators[index].classList.add('hidden');\r\n\t\t}\r\n\t});\r\n\r\n\t// Increase or decrease the current tab by 1:\r\n\tcurrentTab = currentTab + n;\r\n\t\r\n\t//check if the next tab is hidden\r\n\twhile(x[currentTab].classList.contains('hidden')){\r\n\t\t//go to the next tab\r\n\t\tcurrentTab = currentTab + n;\r\n\t}\r\n\t\r\n\t// if you have reached the end of the form... :\r\n\tif (currentTab >= x.length) {\r\n\t\treturn false;\r\n\t}\r\n\t// Otherwise, display the correct tab:\r\n\tshowTab(currentTab,form);\r\n}\r\n\r\nfunction get_field_value(orgname, checkdatalist=true, comparevalue=null){\r\n\t//name is not a name but a node\r\n\tif(orgname instanceof Element){\r\n\t\tel\t\t\t= orgname;\t\t\r\n\t\t//check if valid input type\r\n\t\tif(el.tagName != 'INPUT' && el.tagName != 'TEXTAREA' && el.tagName != 'SELECT' && el.closest('.nice-select-dropdown') == null){\r\n\t\t\tel = el.querySelector('input, select, textarea');\r\n\t\t}\r\n\t\tif(el == null){\r\n\t\t\tel\t\t\t= orgname;\r\n\t\t}\r\n\t\tname\t\t= el.name;\r\n\t}else{\r\n\t\tname\t\t= orgname;\r\n\t\tel\t\t\t= form.querySelector('[name=\\\"'+name+'\\\" i]');\r\n\t}\r\n\t\r\n\tif(el != null){\r\n\t\tvar value = '';\r\n\t\tif(el.type == 'radio'){\r\n\t\t\tel\t\t= form.querySelector('[name=\\\"'+name+'\\\" i]:checked');\r\n\t\t\t\r\n\t\t\t//There is no radio selected currently\r\n\t\t\tif(el == null){\r\n\t\t\t\t//return an empty value\r\n\t\t\t\treturn '';\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(el.type == 'checkbox'){\r\n\t\t\t//we are dealing with a specific checkbox\r\n\t\t\tif(orgname.type == 'checkbox' ){\r\n\t\t\t\tif(el.checked){\r\n\t\t\t\t\treturn el.value;\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn '';\r\n\t\t\t\t}\r\n\t\t\t//we should return all checked checkboxes\r\n\t\t\t}else{\r\n\t\t\t\t//we should find the checkbox with this value and check if it is checked\r\n\t\t\t\tif(comparevalue != null){\r\n\t\t\t\t\tels\t\t= form.querySelector('[name=\\\"'+name+'\\\" i][value=\"'+comparevalue+'\" i]:checked');\r\n\t\t\t\t\tif(els != null){\r\n\t\t\t\t\t\tvalue = comparevalue;\r\n\t\t\t\t\t}\r\n\t\t\t\t//no compare value give just return all checked values\r\n\t\t\t\t}else{\r\n\t\t\t\t\tels\t\t= form.querySelectorAll('[name=\\\"'+name+'\\\" i]:checked');\r\n\t\t\t\t\t\r\n\t\t\t\t\tels.forEach(el=>{\r\n\t\t\t\t\t\tif(value != ''){\r\n\t\t\t\t\t\t\tvalue += ', ';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue += el.value;\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t//get the value of niceselect\r\n\t\t}else if(el.closest('.nice-select-dropdown') != null && el.dataset.value != undefined){\r\n\t\t\tvalue = el.dataset.value\r\n\t\t//value of datalist\r\n\t\t}else if(el.list != null && checkdatalist){\r\n\t\t\tvar orig_input = el.list.querySelector(\"[value='\"+el.value+\"' i]\");\r\n\t\t\t\r\n\t\t\tif(orig_input == null){\r\n\t\t\t\tvalue =  el.value;\r\n\t\t\t}else{\r\n\t\t\t\tvalue = orig_input.dataset.value;\r\n\t\t\t\tif(value == ''){\r\n\t\t\t\t\tvalue =  el.value;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}else if(el.type == 'checkbox'){\r\n\t\t\tif(el.checked){\r\n\t\t\t\tvalue = el.value;\r\n\t\t\t}else{\r\n\t\t\t\tvalue = '';\r\n\t\t\t}\r\n\t\t}else if(el.value != null && el.value != 'undefined'){\r\n\t\t\tvalue = el.value;\r\n\t\t}\r\n\t\t\r\n\t\treturn value.toLowerCase();\r\n\t}else{\r\n\t\tconsole.trace();\r\n\t\tconsole.log(\"cannot find element with name \"+name);\r\n\t}\r\n}\r\n\r\nfunction change_field_value(orgname, value){\r\n\tif(orgname instanceof Element){\r\n\t\tvar name\t= orgname.name;\r\n\t\tvar target\t= orgname;\r\n\t}else{\r\n\t\tvar name = orgname;\r\n\t\t//get the target\r\n\t\tvar target = form.querySelector('[name=\"'+name+'\" i]');\r\n\t}\r\n\t\r\n\tif(target.type == 'radio' || target.type == 'checkbox'){\r\n\t\tif(!(orgname instanceof Element)){\r\n\t\t\ttargets = form.querySelectorAll('[name=\"'+name+'\" i]');\r\n\t\t\tfor (let i = 0; i < targets.length; i++) {\r\n\t\t\t\tif(targets[i].value.toLowerCase() == value.toLowerCase()){\r\n\t\t\t\t\ttarget = targets[i];\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tif(target.value.toLowerCase() == value.toLowerCase()){\r\n\t\t\ttarget.checked = true;\r\n\t\t}\r\n\t//the target has a list attached to it\r\n\t}else if(target.list != null){\r\n\t\tvar datalistoption = target.list.querySelector('[data-value=\"'+value+'\" i]');\r\n\t\t//we found a match\r\n\t\tif(datalistoption != null){\r\n\t\t\ttarget.value = datalistoption.value;\r\n\t\t}else{\r\n\t\t\ttarget.value = value;\r\n\t\t}\r\n\t}else{\r\n\t\ttarget.value = value;\r\n\t}\r\n\t\r\n\tprev_el = '';\r\n\t//create a new event\r\n\tevt = new Event('input');\r\n\t//attach the target\r\n\ttarget.dispatchEvent(evt);\r\n\t\r\n\t//run the originating function with this event\r\n\twindow[arguments.callee.caller.name](target);\r\n}\r\n\r\nfunction change_field_property(name, att, value){\r\n\t//first change the value\r\n\tvar target = form.querySelector('[name=\"'+name+'\" i]');\r\n\t\r\n\tform.querySelector('[name=\"'+name+'\"]')[att] = value;\r\n\t\r\n\tprev_el = '';\r\n\t//create a new event\r\n\tevt = new Event('input');\r\n\t//attach the target\r\n\ttarget.dispatchEvent(evt);\r\n\t//run the originating function with this event\r\n\twindow[arguments.callee.caller.name](target);\r\n}\r\n\r\n//Main code\r\ndocument.addEventListener(\"DOMContentLoaded\",function() {\r\n\tconsole.log('Forms.js is loaded');\r\n});\r\n\r\n//we are online again\r\nwindow.addEventListener('online',function(){\r\n\tdocument.querySelectorAll('.form_submit').forEach(btn=>{\r\n\t\tbtn.disabled = false\r\n\t\tbtn.querySelectorAll('.offline').forEach(el=>el.remove());\r\n\t});\r\n});\r\n\r\n//prevent form submit when offline\r\nwindow.addEventListener('offline',function(){\r\n\tdocument.querySelectorAll('.form_submit').forEach(btn=>{\r\n\t\tbtn.disabled = true;\r\n\t\tif(btn.querySelector('.online') == null){\r\n\t\t\tbtn.innerHTML = '<div class=\"online\">'+btn.innerHTML+'</div>';\r\n\t\t}\r\n\t\tbtn.innerHTML += '<div class=\"offline\">You are offline</div>'\r\n\t});\r\n});\r\n\r\ndocument.addEventListener('click',function(event) {\r\n\tvar target = event.target;\r\n\t\r\n\t//add element\r\n\tif(target.matches('.add')){\r\n\t\tcopy_form_input(target.closest(\".clone_div\"));\r\n\r\n\t\tfix_numbering(target.closest('.clone_divs_wrapper'));\r\n\r\n\t\ttarget.remove();\r\n\t}\r\n\t\r\n\t//remove element\r\n\tif(target.matches('.remove')){\r\n\t\tvar wrapper\t= target.closest('.clone_divs_wrapper');\r\n\t\t//Remove node clicked\r\n\t\tremove_node(target); \r\n\r\n\t\tfix_numbering(wrapper);\r\n\t}\r\n});"],"names":["remove_default_select","el","Array","from","options","forEach","option","defaultSelected","fix_numbering","clone_divs_wrapper","querySelectorAll","clone","index","id","replace","re","dataset","divid","title","textContent","label","innerHTML","input","classList","contains","undefined","name","type","value","document","addEventListener","console","log","window","btn","disabled","remove","querySelector","event","target","matches","original_node","newnode","clear","select","selectedIndex","selectedOptions","length","_niceselect","destroy","tinymce_settings","tn","tinymce","get","settings","save","cloneNode","NiceSelect","bind","searchable","init","checked","clone_node","nodenr","parseInt","getAttribute","datatype","RegExp","uploadbutton","previewdiv","i","previous_val","getElementsByTagName","style","display","update","nextSibling","add_element","html","className","insertAdjacentHTML","parentNode","insertBefore","selector","copy_form_input","closest","wrapper","node","parent_node","all_clone_divs","previousElementSibling","appendChild","clonenode","labelnr","$1","remove_node"],"sourceRoot":""}