{"version":3,"file":"forms_table.min.js","mappings":"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","sources":["webpack://forms/./forms_table.js"],"sourcesContent":["\r\nconsole.log(\"Formstable.js loaded\");\r\n\r\nasync function hideColumn(cell){\r\n\t// Hide the column\r\n\tvar table\t\t= cell.closest('table');\r\n\tvar tableRows\t= table.rows;\r\n\tfor (const element of tableRows) {\r\n\t\telement.cells[cell.cellIndex].classList.add('hidden')\r\n\t}\r\n\r\n\t//show the reset button\r\n\r\n\tcell.closest('.table-wrapper').querySelector('.reset-col-vis').classList.remove('hidden');\r\n\r\n\t// store as preference\r\n\tvar formData\t= new FormData();\r\n\tformData.append('formid', table.dataset.formid);\r\n\tformData.append('column_name', cell.id);\r\n\t\r\n\tawait FormSubmit.fetchRestApi('forms/save_table_prefs', formData);\r\n}\r\n\r\nasync function showHiddenColumns(target){\r\n\t//hiden the reset button\r\n\ttarget.closest('.table-wrapper').querySelector('.reset-col-vis').classList.add('hidden');\r\n\r\n\t// Show the columns again\r\n\tlet table\t\t= target.closest('.table-wrapper').querySelector('table');\r\n\ttable.querySelectorAll('th.hidden, td.hidden').forEach(el=>el.classList.remove('hidden'));\r\n\r\n\t// store as preference\r\n\tlet formData\t= new FormData();\r\n\tformData.append('formid', table.dataset.formid);\r\n\r\n\tlet response\t= await FormSubmit.fetchRestApi('forms/delete_table_prefs', formData);\r\n\r\n\tif(response){\r\n\t\tMain.displayMessage(response);\r\n\t\tlocation.reload();\r\n\t}\r\n}\r\n\r\nasync function saveColumnSettings(target){\r\n\tlet response = await FormSubmit.submitForm(target, 'forms/save_column_settings');\r\n\r\n\tif(response){\r\n\t\tMain.displayMessage(response);\r\n\t\tlocation.reload();\r\n\t}\r\n}\r\n\r\nasync function saveTableSettings(target){\r\n\tlet response = await FormSubmit.submitForm(target, 'forms/save_table_settings');\r\n\r\n\tif(response){\r\n\t\tMain.displayMessage(response);\r\n\t}\r\n}\r\n\r\nasync function askConfirmation(text){\r\n\tlet options\t= {\r\n\t\ttitle: 'Are you sure?',\r\n\t\ttext: `Are you sure you want to ${text} this?`,\r\n\t\ticon: 'warning',\r\n\t\tshowCancelButton: true,\r\n\t\tconfirmButtonColor: \"#bd2919\",\r\n\t\tcancelButtonColor: '#d33',\r\n\t\tconfirmButtonText: `Yes, ${text} it!`,\r\n\t};\r\n\r\n\tif(document.fullscreenElement != null){\r\n\t\toptions['target']\t= document.fullscreenElement;\r\n\t}\r\n\r\n\tlet result\t= await Swal.fire(options);\r\n\r\n\r\n\tdocument.fullscreenElement\r\n\r\n\treturn result.isConfirmed;\r\n}\r\n\r\nasync function removeSubmission(target){\r\n\tif(await askConfirmation('delete')){\t\t\r\n\t\tlet submissionId\t= target.closest('tr').dataset.id;\r\n\t\tlet table\t\t\t= target.closest('table');\r\n\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('submissionid', submissionId);\r\n\t\t\r\n\t\t//display loading gif\r\n\t\tMain.showLoader(target);\r\n\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('forms/remove_submission', formData);\r\n\r\n\t\tif(response){\r\n\t\t\ttable.querySelectorAll(`.table-row[data-id=\"${submissionId}\"]`).forEach(\r\n\t\t\t\trow=>row.remove()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function archiveSubmission(target){\t\r\n\tlet table\t\t\t= target.closest('table');\r\n\tlet tableRow\t\t= target.closest('tr');\r\n\tlet submissionId\t= tableRow.dataset.id;\r\n\tlet showSwal\t\t= true;\r\n\tlet action\t\t\t= target.value;\r\n\tlet response;\r\n\r\n\tlet formData \t\t= new FormData();\r\n\tformData.append('formid', table.dataset.formid);\r\n\tformData.append('submissionid', submissionId);\r\n\tformData.append('action', action);\r\n\t\r\n\t// Ask whether to archive one piece or the whole\r\n\tif(tableRow.dataset.subid != undefined){\r\n\t\tshowSwal = false;\r\n\r\n\t\tlet options\t= {\r\n\t\t\ttitle: `What do you want to ${action}?`,\r\n\t\t\ttext: `Do you want to ${action} just this one or the whole request?`,\r\n\t\t\ticon: 'question',\r\n\t\t\tshowDenyButton: true,\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonText: 'Just this one',\r\n\t\t\tdenyButtonText: 'The whole request',\r\n\t\t\tconfirmButtonColor: \"#bd2919\"\r\n\t\t};\r\n\t\r\n\t\tif(document.fullscreenElement != null){\r\n\t\t\toptions['target']\t= document.fullscreenElement;\r\n\t\t}\r\n\t\t\r\n\t\tresponse = await Swal.fire(options);\r\n\r\n\t\tif (response.isConfirmed) {\r\n\t\t\tformData.append('subid', tableRow.dataset.subid);\r\n\t\t}\r\n\t\t\r\n\t\t// skip if denied\r\n\t\tif(response.isDismissed){\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(showSwal){\r\n\t\tif(!await askConfirmation(action)){\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t//display loading gif\r\n\tMain.showLoader(target);\r\n\t\r\n\tresponse\t= await FormSubmit.fetchRestApi('forms/archive_submission', formData);\r\n\r\n\tif(response){\r\n\t\tlet params = new Proxy(new URLSearchParams(window.location.search), {\r\n\t\t\tget: (searchParams, prop) => searchParams.get(prop),\r\n\t\t});\r\n\r\n\t\t// Create a custom event so others can listen to it.\r\n\t\t// Used by bookings uploads\r\n\t\tconst event = new Event('submissionArchived');\r\n\t\t\r\n\t\t// Delete all\r\n\t\tif(formData.get('subid') == null){\r\n\t\t\ttable.querySelectorAll(`[data-id=\"${submissionId}\"]`).forEach(row=>{\r\n\t\t\t\trow.dispatchEvent(event);\r\n\r\n\t\t\t\t// just change the button name\r\n\t\t\t\tif(params.archived == 'true'){\r\n\t\t\t\t\tlet element;\r\n\t\t\t\t\tif(action == 'archive'){\r\n\t\t\t\t\t\telement = row.querySelector(`.loaderwrapper, .archive`);\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\telement = row.querySelector(`.loaderwrapper, .unarchive`);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tchangeArchiveButton(element, action);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trow.remove();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t// Only delete subid\r\n\t\t}else{\r\n\t\t\ttable.querySelectorAll(`.table-row[data-id=\"${submissionId}\"][data-subid=\"${tableRow.dataset.subid}\"]`).forEach(row=>{\r\n\t\t\t\trow.dispatchEvent(event);\r\n\t\t\t\t\r\n\t\t\t\t// just change the button name\r\n\t\t\t\tif(params.archived == 'true'){\r\n\t\t\t\t\tlet loader = row.querySelector('.loaderwrapper');\r\n\t\t\t\t\t\r\n\t\t\t\t\tchangeArchiveButton(loader, action);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trow.remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction changeArchiveButton(element, action){\r\n\tlet text;\r\n\r\n\tif(action == 'archive'){\r\n\t\taction \t= 'unarchive';\r\n\t\ttext\t= 'Unarchive';\r\n\t}else{\r\n\t\taction \t= 'archive';\r\n\t\ttext\t= 'Archive';\r\n\t}\r\n\telement.outerHTML = `<button class=\"${action} button forms_table_action\" name=\"${action}_action\" value=\"${action}\">${text}</button>`;\r\n}\r\n\r\nasync function getInputHtml(target){\r\n\tlet table\t\t\t= target.closest('table');\r\n\r\n\t// First make sure we have processed all others\r\n\tdocument.querySelectorAll('td.active').forEach(td=>{\r\n\t\tif(td != target){\r\n\t\t\tprocessFormsTableInput(td);\r\n\t\t}\r\n\t});\r\n\r\n\t// There can only be one active cell per page\r\n\ttarget.classList.add('active');\r\n\r\n\tlet formId\t\t\t= table.dataset.formid;\r\n    let submissionId\t= target.closest('tr').dataset.id;\r\n\tlet subId\t\t\t= target.dataset.subid;\r\n    let elementId\t\t= target.dataset.id\r\n\tlet elementName\t\t= target.dataset.name\r\n\tlet oldText\t\t\t= target.textContent;\r\n    \r\n    Main.showLoader(target.firstChild);\r\n\t\r\n\ttarget.dataset.oldtext\t \t= oldText;\r\n\r\n\tlet formData = new FormData();\r\n    formData.append('formid', formId);\r\n    formData.append('submissionid', submissionId);\r\n\tif(subId != undefined){\r\n\t\tformData.append('subid', subId);\r\n\t}\r\n    formData.append('elementid', elementId);\r\n\tformData.append('elementname', elementName);\r\n\r\n\tlet response\t= await FormSubmit.fetchRestApi('forms/get_input_html', formData);\r\n\r\n\tif(response){\r\n\t\ttarget.innerHTML\t \t\t= response;\r\n\r\n\t\taddFormsTableInputEventListeners(target);\r\n\r\n\t\ttarget.querySelectorAll('.file_upload_wrap').forEach(el=>el.addEventListener('uploadfinished', uploadFinished));\r\n\t}else{\r\n\t\ttarget.innerHTML\t= target.dataset.oldtext;\r\n\t\ttarget.classList.remove('active');\r\n\t}\r\n}\r\n\r\nfunction addFormsTableInputEventListeners(cell){\r\n\tlet inputs\t\t= cell.querySelectorAll('input,select,textarea');\r\n\t\t\r\n\tinputs.forEach((inputNode)=>{\r\n\t\tif(inputNode.type == 'select-one'){\r\n\t\t\tinputNode._niceselect = NiceSelect.bind(inputNode, {searchable: true});\r\n\t\t}\r\n\t\t\r\n\t\tif((inputNode.type != 'radio' && inputNode.type != 'checkbox') || inputs.length == 1){\r\n\r\n\t\t\tif(inputNode.type == 'date'){\r\n\t\t\t\tinputNode.addEventListener(\"blur\", processFormsTableInput);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinputNode.focus();\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction uploadFinished(event){\r\n\tif(event.target.closest('td') != null){\r\n\t\t//remove as soon as we come here\r\n\t\tdocument.removeEventListener('uploadfinished', uploadFinished);\r\n\t\tprocessFormsTableInput(document.querySelector('[data-oldtext]'));\r\n\t}\r\n}\r\n\r\n//function to get the temp input value and save it over AJAX\r\nvar running = false;\r\nasync function processFormsTableInput(target){\r\n\t// target is an event\r\n\tif(target.target != undefined){\r\n\t\ttarget = target.target;\r\n\t}\r\n\t\r\n\tif(running == target || target.value == '' || target.matches('.nice-select-search')){\r\n\t\treturn;\r\n\t}\r\n\trunning = target;\r\n\t\r\n\tsetTimeout(function(){ running = false;}, 500);\t\r\n\r\n\tlet table\t\t\t= target.closest('table');\r\n\tlet formId\t\t\t= table.dataset.formid;\r\n\tlet cell\t\t\t= target.closest('td');\r\n\tcell.classList.remove('active');\r\n    let elementId\t\t= cell.dataset.id\r\n\tlet elementName\t\t= cell.dataset.name\r\n\tlet value\t\t\t= FormFunctions.getFieldValue(target, cell, false);\r\n\tlet submissionId\t= target.closest('tr').dataset.id;\r\n\tlet subId\t\t\t= cell.dataset.subid;\r\n\tlet shortcodeid\t\t= '';\r\n\r\n\tif(target.closest('[data-shortcodeid]') != null){\r\n\t\tshortcodeid\t= target.closest('[data-shortcodeid]').dataset.shortcodeid;\r\n\t}\r\n\r\n\t//Only update when needed\r\n\tif (value != JSON.parse(cell.dataset.oldvalue)){\r\n\t\tMain.showLoader(cell.firstChild);\r\n\t\t\r\n\t\t// Submit new value and receive the filtered value back\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('formid', formId);\r\n\t\tformData.append('submissionid', submissionId);\r\n\t\tif(subId != undefined){\r\n\t\t\tformData.append('subid', subId);\r\n\t\t}\r\n\t\tformData.append('elementid', elementId);\r\n\t\tformData.append('elementname', elementName);\r\n\t\tformData.append('newvalue', JSON.stringify(value));\r\n\r\n\t\tif(shortcodeid != ''){\r\n\t\t\tformData.append('shortcodeid', shortcodeid);\r\n\t\t}\r\n\t\t\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('forms/edit_value', formData);\r\n\t\r\n\t\tif(response){\r\n\t\t\tconsole.log(response)\r\n\t\t\tlet newValue = response.newvalue;\r\n\t\t\t\r\n\t\t\tif(typeof(newValue) == 'string'){\r\n\t\t\t\tnewValue.replace('_', ' ');\r\n\t\t\t}\r\n\r\n\t\t\t//Replace the input element with its value\r\n\t\t\tif(newValue == \"\"){\r\n\t\t\t\tnewValue = \"X\";\r\n\t\t\t}\r\n\t\r\n\t\t\t//Update all occurences of this field\r\n\t\t\tif(subId == null){\r\n\t\t\t\tlet targets\t= table.querySelectorAll(`tr[data-id=\"${submissionId}\"] td[data-id=\"${elementId}\"]`);\r\n\t\t\t\ttargets.forEach(td=>{td.innerHTML = newValue;});\r\n\t\t\t}else{\r\n\t\t\t\tcell.innerHTML = newValue;\r\n\t\t\t}\r\n\r\n\t\t\tcell.dataset.oldvalue\t \t= JSON.stringify(newValue);\r\n\r\n\t\t\tconsole.log(cell)\r\n\t\r\n\t\t\tMain.displayMessage(response.message.replace('_', ' '));\r\n\t\t}\r\n\t}else{\r\n\t\tcell.innerHTML = cell.dataset.oldtext;\r\n\t}\r\n\r\n\taddFormsTableInputEventListeners(target);\r\n\r\n\tif(target.dataset.oldtext != undefined){\r\n\t\tdelete target.dataset.oldtext;\r\n\t}\r\n}\r\n\r\n// Add a change button when changing form values\r\nfunction addChangeButton(target){\r\n\tlet activeCell\t= target.closest('td.active');\r\n\t\r\n\tif(activeCell == null){\r\n\t\treturn;\r\n\t}\r\n\r\n\tlet button = document.createElement('button');\r\n    button.innerHTML = 'Save changes';\r\n    button.classList.add('button');\r\n    button.classList.add('small');\r\n    button.classList.add('save');\r\n\r\n\tbutton.addEventListener('click', ev=>processFormsTableInput(ev.target.closest('td').querySelector('input')));\r\n\r\n\t// only add the button once\r\n\tif(activeCell.querySelector('.save') == null){\r\n\t\tactiveCell.appendChild(button)\r\n\t}\r\n}\r\n\r\ndocument.addEventListener(\"click\", event=>{\r\n\tlet target = event.target;\r\n\r\n\tif(target.name == 'submit_column_setting'){\r\n\t\tsaveColumnSettings(target);\r\n\t}else if(target.name == 'submit_table_setting'){\r\n\t\tsaveTableSettings(target);\r\n\t}else if(target.name == 'form_settings[autoarchive]'){\r\n\t\t//show auto archive fields\r\n\t\tlet el = target.closest('.table_rights_wrapper').querySelector('.autoarchivelogic');\r\n\t\tif(target.value == 'true'){\r\n\t\t\tel.classList.remove('hidden');\r\n\t\t}else{\r\n\t\t\tel.classList.add('hidden');\r\n\t\t}\r\n\t}\r\n\r\n\t//Actions\r\n\tif(target.matches('.delete.forms_table_action')){\r\n\t\tremoveSubmission(target);\r\n\t}\r\n\r\n\tif(target.matches('.archive.forms_table_action, .unarchive.forms_table_action')){\r\n\t\tarchiveSubmission(target);\r\n\t}\r\n\r\n\tif(target.matches('.print.forms_table_action')){\r\n\t\twindow.location.href = window.location.href.split('?')[0]+\"?print=true&table_id=\"+table.dataset.id+\"&submission_id=\"+table_row.querySelector(\"[id='id' i]\").textContent;\r\n\t}\r\n\t\r\n\t//Open settings modal\r\n\tif(target.classList.contains('edit_formshortcode_settings')){\r\n\t\tMain.showModal(document.querySelector('.modal.form_shortcode_settings'));\r\n\t}\r\n\t\r\n\t//Edit data\r\n\tlet td = target.closest('td');\r\n\tif(td && !td.matches('.active')){\r\n\t\tif( target.matches('td.edit_forms_table')){\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tgetInputHtml(target);\r\n\t\t}else if(td.matches('td.edit_forms_table') && target.tagName != 'INPUT' && target.tagName != 'A' && target.tagName != 'TEXTAREA' && !target.closest('.nice-select') && !target.matches('.button.save')){\r\n\t\t\tconsole.log(target)\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tgetInputHtml(target.closest('td'));\r\n\t\t}\r\n\t}\r\n\t\r\n\t//Hide column\r\n\tif(target.classList.contains('visibilityicon')){\r\n\t\tif(target.tagName == 'SPAN'){\r\n\t\t\ttarget = target.querySelector('img');\r\n\t\t}\r\n\r\n\t\t// Table itself\r\n\t\tif(target.parentNode.matches('th')){\r\n\t\t\thideColumn(target.parentNode);\r\n\t\t// Table settings\r\n\t\t}else{\r\n\t\t\tif(target.classList.contains('visible')){\r\n\t\t\t\ttarget.classList.replace('visible','invisible');\r\n\t\t\t\ttarget.src\t= target.src.replace('visible.png','invisible.png');\r\n\t\t\t\ttarget.closest('.column_setting_wrapper').querySelector('.visibilitytype').value = 'hide';\r\n\t\t\t}else{\r\n\t\t\t\ttarget.classList.replace('invisible','visible');\r\n\t\t\t\ttarget.src\t= target.src.replace('invisible.png','visible.png');\r\n\t\t\t\ttarget.closest('.column_setting_wrapper').querySelector('.visibilitytype').value = 'show';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif(target.matches('.reset-col-vis')){\r\n\t\tshowHiddenColumns(target);\r\n\t}\r\n\r\n\t// If we clicked somewhere and there is an active cell\r\n\tlet activeCell\t= document.querySelector('td.active');\r\n\tif(activeCell != null && td == null){\r\n\t\tif((target.type != 'checkbox') || target.length == 1){\r\n\t\t\tconsole.log(target);\r\n\t\t\tprocessFormsTableInput(activeCell);\r\n\t\t}\r\n\t}\r\n\r\n\tif(target.matches('.permissins-rights-form')){\r\n\t\ttarget.closest('div').querySelector('.permission-wrapper').classList.toggle('hidden');\r\n\t}\r\n});\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\t\r\n\tif(typeof(Sortable) != 'undefined'){\r\n\t\t//Make the sortable_column_settings_rows div sortable\r\n\t\tlet options = {\r\n\t\t\thandle: '.movecontrol',\r\n\t\t\tanimation: 150,\r\n\t\t};\r\n\r\n\t\tdocument.querySelectorAll('.sortable_column_settings_rows').forEach(el=>{\r\n\t\t\tSortable.create(el, options);\r\n\t\t});\r\n\t}\r\n});\r\n\r\ndocument.addEventListener('change', event=>{\r\n\tlet target = event.target;\r\n\r\n\tif(target.id == 'sim-forms-selector'){\r\n\t\tdocument.querySelectorAll('.main_form_wrapper').forEach(el=>{\r\n\t\t\tel.classList.add('hidden');\r\n\t\t});\r\n\r\n\t\tdocument.getElementById(target.value).classList.remove('hidden');\r\n\r\n\t\t// position table\r\n\t\tSimTableFunctions.positionTable();\r\n\t}\r\n\r\n\tif(target.closest('td.active') != null){\r\n\t\tif(target.type != 'file' && target.type != 'date' && target.type != 'checkbox'){\r\n\t\t\t// Check if there are multiple inputs\r\n\t\t\tnames=[];\r\n\t\t\ttarget.closest('td.active').querySelectorAll('input').forEach(el=>{\r\n\t\t\t\tif(!names.includes(el.type)){\r\n\t\t\t\t\tnames.push(el.type);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tif(names.length == 1){\r\n\t\t\t\tprocessFormsTableInput(target);\r\n\t\t\t}else{\r\n\t\t\t\taddChangeButton(target);\r\n\t\t\t}\r\n\t\t}else if(target.type != 'file'){\r\n\t\t\taddChangeButton(target);\r\n\t\t}\r\n\t}\r\n});\r\n\r\n//Add a keyboard listener\r\ndocument.addEventListener(\"keyup\", function(event){\r\n\tif (['Enter', 'NumpadEnter'].includes(event.key) && keysPressed.Shift == undefined) {\r\n\r\n\t\tlet activeCell\t= document.querySelector('td.active');\r\n\t\tif(activeCell != null){\r\n\t\t\tprocessFormsTableInput(activeCell);\r\n\t\t}\r\n\t}\r\n\r\n\tdelete keysPressed[event.key];\r\n});\r\n\r\n\r\n// Keep track of which keys are pressed\r\nlet keysPressed = {};\r\ndocument.addEventListener('keydown', (event) => {\r\n   keysPressed[event.key] = true;\r\n});"],"names":["async","askConfirmation","text","options","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","document","fullscreenElement","result","Swal","fire","isConfirmed","changeArchiveButton","element","action","outerHTML","getInputHtml","target","table","closest","querySelectorAll","forEach","td","processFormsTableInput","classList","add","formId","dataset","formid","submissionId","id","subId","subid","elementId","elementName","name","oldText","textContent","Main","showLoader","firstChild","oldtext","formData","FormData","append","undefined","response","FormSubmit","fetchRestApi","innerHTML","addFormsTableInputEventListeners","el","addEventListener","uploadFinished","remove","cell","inputs","inputNode","type","_niceselect","NiceSelect","bind","searchable","length","focus","event","removeEventListener","querySelector","console","log","running","value","matches","setTimeout","FormFunctions","getFieldValue","shortcodeid","JSON","parse","oldvalue","stringify","newValue","newvalue","replace","displayMessage","message","addChangeButton","activeCell","button","createElement","ev","appendChild","submitForm","location","reload","saveColumnSettings","saveTableSettings","row","removeSubmission","tableRow","showSwal","showDenyButton","denyButtonText","isDismissed","params","Proxy","URLSearchParams","window","search","get","searchParams","prop","Event","dispatchEvent","archived","archiveSubmission","href","split","table_row","contains","showModal","stopPropagation","tagName","parentNode","tableRows","rows","cells","cellIndex","hideColumn","src","showHiddenColumns","toggle","handle","animation","Sortable","create","getElementById","SimTableFunctions","positionTable","names","includes","push","key","keysPressed","Shift"],"sourceRoot":""}