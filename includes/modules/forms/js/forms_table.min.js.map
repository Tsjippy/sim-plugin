{"version":3,"file":"forms_table.min.js","mappings":"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","sources":["webpack://forms/./forms_table.js"],"sourcesContent":["async function hideColumn(cell){\r\n\t// Hide the column\r\n\tvar table\t\t= cell.closest('table');\r\n\tvar tableRows\t= table.rows;\r\n\tfor (const element of tableRows) {\r\n\t\telement.cells[cell.cellIndex].classList.add('hidden')\r\n\t}\r\n\r\n\t//show the reset button\r\n\r\n\tcell.closest('.table-wrapper').querySelector('.reset-col-vis').classList.remove('hidden');\r\n\r\n\t// store as preference\r\n\tvar formData\t= new FormData();\r\n\tformData.append('formid', table.dataset.formid);\r\n\tformData.append('column_name', cell.id);\r\n\t\r\n\tawait FormSubmit.fetchRestApi('forms/save_table_prefs', formData);\r\n}\r\n\r\nasync function showHiddenColumns(target){\r\n\t//hiden the reset button\r\n\ttarget.closest('.table-wrapper').querySelector('.reset-col-vis').classList.add('hidden');\r\n\r\n\t// Show the columns again\r\n\tlet table\t\t= target.closest('.table-wrapper').querySelector('table');\r\n\ttable.querySelectorAll('th.hidden, td.hidden').forEach(el=>el.classList.remove('hidden'));\r\n\r\n\t// store as preference\r\n\tlet formData\t= new FormData();\r\n\tformData.append('formid', table.dataset.formid);\r\n\r\n\tlet response\t= await FormSubmit.fetchRestApi('forms/delete_table_prefs', formData);\r\n\r\n\tif(response){\r\n\t\tMain.displayMessage(response);\r\n\t\tlocation.reload();\r\n\t}\r\n}\r\n\r\nasync function saveColumnSettings(target){\r\n\tlet response = await FormSubmit.submitForm(target, 'forms/save_column_settings');\r\n\r\n\tif(response){\r\n\t\tMain.displayMessage(response);\r\n\t\tlocation.reload();\r\n\t}\r\n}\r\n\r\nasync function saveTableSettings(target){\r\n\tlet response = await FormSubmit.submitForm(target, 'forms/save_table_settings');\r\n\r\n\tif(response){\r\n\t\tMain.displayMessage(response);\r\n\t}\r\n}\r\n\r\nasync function askConfirmation(text){\r\n\tlet result = await Swal.fire({\r\n\t\ttitle: 'Are you sure?',\r\n\t\ttext: `Are you sure you want to ${text} this?`,\r\n\t\ticon: 'warning',\r\n\t\tshowCancelButton: true,\r\n\t\tconfirmButtonColor: \"#bd2919\",\r\n\t\tcancelButtonColor: '#d33',\r\n\t\tconfirmButtonText: `Yes, ${text} it!`\r\n\t});\r\n\r\n\treturn result.isConfirmed;\r\n}\r\n\r\nasync function removeSubmission(target){\r\n\tif(await askConfirmation('delete')){\t\t\r\n\t\tlet submissionId\t= target.closest('tr').dataset.id;\r\n\t\tlet table\t\t\t= target.closest('table');\r\n\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('submissionid', submissionId);\r\n\t\t\r\n\t\t//display loading gif\r\n\t\tMain.showLoader(target);\r\n\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('forms/remove_submission', formData);\r\n\r\n\t\tif(response){\r\n\t\t\ttable.querySelectorAll(`.table-row[data-id=\"${submissionId}\"]`).forEach(\r\n\t\t\t\trow=>row.remove()\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nasync function archiveSubmission(target){\t\r\n\tlet table\t\t\t= target.closest('table');\r\n\tlet tableRow\t\t= target.closest('tr');\r\n\tlet submissionId\t= tableRow.dataset.id;\r\n\tlet showSwal\t\t= true;\r\n\tlet action\t\t\t= target.value;\r\n\tlet response;\r\n\r\n\tlet formData \t\t= new FormData();\r\n\tformData.append('formid', table.dataset.formid);\r\n\tformData.append('submissionid', submissionId);\r\n\tformData.append('action', action);\r\n\t\r\n\t// Ask whether to archive one piece or the whole\r\n\tif(tableRow.dataset.subid != undefined){\r\n\t\tshowSwal = false;\r\n\t\t\r\n\t\tresponse = await Swal.fire({\r\n\t\t\ttitle: `What do you want to ${action}?`,\r\n\t\t\ttext: `Do you want to ${action} just this one or the whole request?`,\r\n\t\t\ticon: 'question',\r\n\t\t\tshowDenyButton: true,\r\n\t\t\tshowCancelButton: true,\r\n\t\t\tconfirmButtonText: 'Just this one',\r\n\t\t\tdenyButtonText: 'The whole request',\r\n\t\t\tconfirmButtonColor: \"#bd2919\",\r\n\t\t});\r\n\r\n\t\tif (response.isConfirmed) {\r\n\t\t\tformData.append('subid', tableRow.dataset.subid);\r\n\t\t}\r\n\t\t\r\n\t\t// skip if denied\r\n\t\tif(response.isDismissed){\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\t\r\n\tif(showSwal){\r\n\t\tif(!await askConfirmation(action)){\r\n\t\t\treturn;\r\n\t\t}\r\n\t}\r\n\r\n\t//display loading gif\r\n\tMain.showLoader(target);\r\n\t\r\n\tresponse\t= await FormSubmit.fetchRestApi('forms/archive_submission', formData);\r\n\r\n\tif(response){\r\n\t\tconst params = new Proxy(new URLSearchParams(window.location.search), {\r\n\t\t\tget: (searchParams, prop) => searchParams.get(prop),\r\n\t\t});\r\n\t\t\r\n\t\t// Delete all\r\n\t\tif(formData.get('subid') == null){\r\n\t\t\ttable.querySelectorAll(`.table-row[data-id=\"${submissionId}\"]`).forEach(row=>{\r\n\t\t\t\t// just change the button name\r\n\t\t\t\tif(params.archived == 'true'){\r\n\t\t\t\t\tlet loader = row.querySelector('.loaderwrapper, .'+action);\r\n\t\t\t\t\tchangeArchiveButton(loader, action);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trow.remove();\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t// Only delete subid\r\n\t\t}else{\r\n\t\t\ttable.querySelectorAll(`.table-row[data-id=\"${submissionId}\"][data-subid=\"${tableRow.dataset.subid}\"]`).forEach(row=>{\r\n\t\t\t\t// just change the button name\r\n\t\t\t\tif(params.archived == 'true'){\r\n\t\t\t\t\tlet loader = row.querySelector('.loaderwrapper');\r\n\t\t\t\t\tchangeArchiveButton(loader, action);\r\n\t\t\t\t}else{\r\n\t\t\t\t\trow.remove();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction changeArchiveButton(loader, action){\r\n\tlet text;\r\n\r\n\tif(action == 'archive'){\r\n\t\taction \t= 'unarchive';\r\n\t\ttext\t= 'Unarchive';\r\n\t}else{\r\n\t\taction \t= 'archive';\r\n\t\ttext\t= 'Archive';\r\n\t}\r\n\tloader.outerHTML = `<button class=\"${action} button forms_table_action\" name=\"${action}_action\" value=\"${action}\">${text}</button>`;\r\n}\r\n\r\nasync function getInputHtml(target){\r\n\tlet table\t\t\t= target.closest('table');\r\n\r\n\t// First make sure we have processed all others\r\n\tdocument.querySelectorAll('td.active').forEach(td=>{\r\n\t\tif(td != target){\r\n\t\t\tprocessFormsTableInput(td);\r\n\t\t}\r\n\t});\r\n\r\n\t// There can only be one active cell per page\r\n\ttarget.classList.add('active');\r\n\r\n\tlet formId\t\t\t= table.dataset.formid;\r\n    let submissionId\t= target.closest('tr').dataset.id;\r\n\tlet subId\t\t\t= target.dataset.subid;\r\n    let cellId\t\t\t= target.dataset.id\r\n\tlet oldText\t\t\t= target.textContent;\r\n    \r\n    Main.showLoader(target.firstChild);\r\n\t\r\n\ttarget.dataset.oldtext\t \t= oldText;\r\n\r\n\tlet formData = new FormData();\r\n    formData.append('formid', formId);\r\n    formData.append('submissionid', submissionId);\r\n\tformData.append('subid', subId);\r\n    formData.append('fieldname', cellId);\r\n\r\n\tlet response\t= await FormSubmit.fetchRestApi('forms/get_input_html', formData);\r\n\r\n\tif(response){\r\n\t\ttarget.innerHTML\t = response;\r\n\r\n\t\taddFormsTableInputEventListeners(target);\r\n\r\n\t\ttarget.querySelectorAll('.file_upload_wrap').forEach(el=>el.addEventListener('uploadfinished', uploadFinished));\r\n\t}\r\n}\r\n\r\nfunction addFormsTableInputEventListeners(cell){\r\n\tlet inputs\t\t= cell.querySelectorAll('input,select,textarea');\r\n\r\n\t// get old value\r\n\tlet oldValue\t= '';\r\n\tif(cell.dataset.oldvalue != undefined){\r\n\t\toldValue\t= JSON.parse(cell.dataset.oldvalue);\r\n\t}\r\n\r\n\t// make it an array if not an array\r\n\tif(!Array.isArray(oldValue)){\r\n\t\toldValue = [oldValue];\r\n\t}\r\n\t\t\r\n\tinputs.forEach((inputNode)=>{\r\n\t\tif(inputNode.type == 'select-one'){\r\n\t\t\tinputNode._niceselect = NiceSelect.bind(inputNode, {searchable: true});\r\n\t\t}\r\n\t\t\r\n\t\tif(inputNode.type != 'checkbox' || inputs.length == 1){\r\n\r\n\t\t\tif(inputNode.type == 'date'){\r\n\t\t\t\tinputNode.addEventListener(\"blur\", processFormsTableInput);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tinputNode.focus();\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction uploadFinished(event){\r\n\tif(event.target.closest('td') != null){\r\n\t\t//remove as soon as we come here\r\n\t\tdocument.removeEventListener('uploadfinished', uploadFinished);\r\n\t\tprocessFormsTableInput(document.querySelector('[data-oldtext]'));\r\n\t}\r\n}\r\n\r\n//function to get the temp input value and save it over AJAX\r\nvar running = false;\r\nasync function processFormsTableInput(target){\r\n\t// target is an event\r\n\tif(target.target != undefined){\r\n\t\ttarget = target.target;\r\n\t}\r\n\t\r\n\tif(running == target || target.value == ''){\r\n\t\treturn;\r\n\t}\r\n\trunning = target;\r\n\t\r\n\tsetTimeout(function(){ running = false;}, 500);\t\r\n\r\n\tlet table\t\t\t= target.closest('table');\r\n\tlet formId\t\t\t= table.dataset.formid;\r\n\tlet cell\t\t\t= target.closest('td');\r\n\tcell.classList.remove('active');\r\n    let cellId\t\t\t= cell.dataset.id\r\n\tlet value\t\t\t= FormFunctions.getFieldValue(target, cell, false);\r\n\tlet submissionId\t= target.closest('tr').dataset.id;\r\n\tlet subId\t\t\t= cell.dataset.subid;\r\n\t\r\n\t//Only update when needed\r\n\tif (value != cell.dataset.oldvalue){\r\n\t\tMain.showLoader(cell.firstChild);\r\n\t\t\r\n\t\t// Submit new value and receive the filtered value back\r\n\t\tlet formData = new FormData();\r\n\t\tformData.append('formid', formId);\r\n\t\tformData.append('submissionid', submissionId);\r\n\t\tif(subId != undefined){\r\n\t\t\tformData.append('subid', subId);\r\n\t\t}\r\n\t\tformData.append('fieldname', cellId);\r\n\t\tformData.append('newvalue', JSON.stringify(value));\r\n\t\t\r\n\t\tlet response\t= await FormSubmit.fetchRestApi('forms/edit_value', formData);\r\n\t\r\n\t\tif(response){\r\n\t\t\tlet newValue = response.newvalue.replace('_', ' ');\r\n\r\n\t\t\t//Replace the input element with its value\r\n\t\t\tif(newValue == \"\") newValue = \"X\";\r\n\t\r\n\t\t\t//Update all occurences of this field\r\n\t\t\tif(subId == null){\r\n\t\t\t\tlet targets\t= table.querySelectorAll(`tr[data-id=\"${submissionId}\"] td[data-id=\"${cellId}\"]`);\r\n\t\t\t\ttargets.forEach(td=>{td.innerHTML = newValue;});\r\n\t\t\t}else{\r\n\t\t\t\tcell.innerHTML = newValue;\r\n\t\t\t}\r\n\t\r\n\t\t\tMain.displayMessage(response.message)\r\n\t\t}\r\n\t}else{\r\n\t\tconsole.log(value)\r\n\t\tcell.innerHTML = cell.dataset.oldtext;\r\n\t}\r\n\r\n\taddFormsTableInputEventListeners(target);\r\n\r\n\tif(target.dataset.oldtext != undefined){\r\n\t\tdelete target.dataset.oldtext;\r\n\t}\r\n}\r\n\r\ndocument.addEventListener(\"click\", event=>{\r\n\tlet target = event.target;\r\n\r\n\tif(target.name == 'submit_column_setting'){\r\n\t\tsaveColumnSettings(target);\r\n\t}else if(target.name == 'submit_table_setting'){\r\n\t\tsaveTableSettings(target);\r\n\t}else if(target.name == 'form_settings[autoarchive]'){\r\n\t\t//show auto archive fields\r\n\t\tlet el = target.closest('.table_rights_wrapper').querySelector('.autoarchivelogic');\r\n\t\tif(target.value == 'true'){\r\n\t\t\tel.classList.remove('hidden');\r\n\t\t}else{\r\n\t\t\tel.classList.add('hidden');\r\n\t\t}\r\n\t}\r\n\r\n\t//Actions\r\n\tif(target.matches('.delete.forms_table_action')){\r\n\t\tremoveSubmission(target);\r\n\t}\r\n\r\n\tif(target.matches('.archive.forms_table_action, .unarchive.forms_table_action')){\r\n\t\tarchiveSubmission(target);\r\n\t}\r\n\r\n\tif(target.matches('.print.forms_table_action')){\r\n\t\twindow.location.href = window.location.href.split('?')[0]+\"?print=true&table_id=\"+table.dataset.id+\"&submission_id=\"+table_row.querySelector(\"[id='id' i]\").textContent;\r\n\t}\r\n\t\r\n\t//Open settings modal\r\n\tif(target.classList.contains('edit_formshortcode_settings')){\r\n\t\tdocument.querySelector('.modal.form_shortcode_settings').classList.remove('hidden');\r\n\t}\r\n\t\r\n\t//Edit data\r\n\tlet td = target.closest('td');\r\n\tif(td && !td.matches('.active')){\r\n\t\tif( target.matches('td.edit_forms_table')){\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tgetInputHtml(target);\r\n\t\t}else if(td.matches('td.edit_forms_table') && target.tagName != 'INPUT' && target.tagName != 'A' && target.tagName != 'TEXTAREA' && !target.closest('.nice-select') ){\r\n\t\t\tevent.stopPropagation();\r\n\t\t\tgetInputHtml(target.closest('td'));\r\n\t\t}\r\n\t}\r\n\t\r\n\t//Hide column\r\n\tif(target.classList.contains('visibilityicon')){\r\n\t\tif(target.tagName == 'SPAN'){\r\n\t\t\ttarget = target.querySelector('img');\r\n\t\t}\r\n\r\n\t\t// Table itself\r\n\t\tif(target.parentNode.matches('th')){\r\n\t\t\thideColumn(target.parentNode);\r\n\t\t// Table settings\r\n\t\t}else{\r\n\t\t\tif(target.classList.contains('visible')){\r\n\t\t\t\ttarget.classList.replace('visible','invisible');\r\n\t\t\t\ttarget.src\t= target.src.replace('visible.png','invisible.png');\r\n\t\t\t\ttarget.closest('.column_setting_wrapper').querySelector('.visibilitytype').value = 'hide';\r\n\t\t\t}else{\r\n\t\t\t\ttarget.classList.replace('invisible','visible');\r\n\t\t\t\ttarget.src\t= target.src.replace('invisible.png','visible.png');\r\n\t\t\t\ttarget.closest('.column_setting_wrapper').querySelector('.visibilitytype').value = 'show';\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tif(target.matches('.reset-col-vis')){\r\n\t\tshowHiddenColumns(target);\r\n\t}\r\n\r\n\t// If we clicked somewhere and there is an active cell\r\n\tlet activeCell\t= document.querySelector('td.active');\r\n\tif(activeCell != null && td == null){\r\n\t\tprocessFormsTableInput(activeCell);\r\n\t}\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\tconsole.log(\"Formstable.js loaded\");\r\n\t\r\n\tif(typeof(Sortable) != 'undefined'){\r\n\t\t//Make the sortable_column_settings_rows div sortable\r\n\t\tlet options = {\r\n\t\t\thandle: '.movecontrol',\r\n\t\t\tanimation: 150,\r\n\t\t};\r\n\r\n\t\tdocument.querySelectorAll('.sortable_column_settings_rows').forEach(el=>{\r\n\t\t\tSortable.create(el, options);\r\n\t\t});\r\n\t}\r\n});\r\n\r\ndocument.addEventListener('change', event=>{\r\n\tlet target = event.target;\r\n\r\n\tif(target.id == 'sim-forms-selector'){\r\n\t\tdocument.querySelectorAll('.main_form_wrapper').forEach(el=>{\r\n\t\t\tel.classList.add('hidden');\r\n\t\t});\r\n\r\n\t\tdocument.getElementById(target.value).classList.remove('hidden');\r\n\r\n\t\t// position table\r\n\t\tSimTableFunctions.positionTable();\r\n\t}\r\n\r\n\tif(target.closest('td.active') != null && target.type != 'file'){\r\n\t\tprocessFormsTableInput(target);\r\n\t}\r\n\r\n});\r\n\r\n//Add a keyboard listener\r\ndocument.addEventListener(\"keyup\", function(event){\r\n\tif (['Enter', 'NumpadEnter'].includes(event.key) && keysPressed.Shift == undefined) {\r\n\r\n\t\tlet activeCell\t= document.querySelector('td.active');\r\n\t\tif(activeCell != null){\r\n\t\t\tprocessFormsTableInput(activeCell);\r\n\t\t}\r\n\t}\r\n\r\n\tdelete keysPressed[event.key];\r\n});\r\n\r\n\r\n// Keep track of which keys are pressed\r\nlet keysPressed = {};\r\ndocument.addEventListener('keydown', (event) => {\r\n   keysPressed[event.key] = true;\r\n});"],"names":["async","askConfirmation","text","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","isConfirmed","changeArchiveButton","loader","action","outerHTML","getInputHtml","target","table","closest","document","querySelectorAll","forEach","td","processFormsTableInput","classList","add","formId","dataset","formid","submissionId","id","subId","subid","cellId","oldText","textContent","Main","showLoader","firstChild","oldtext","formData","FormData","append","response","FormSubmit","fetchRestApi","innerHTML","addFormsTableInputEventListeners","el","addEventListener","uploadFinished","cell","inputs","oldValue","undefined","oldvalue","JSON","parse","Array","isArray","inputNode","type","_niceselect","NiceSelect","bind","searchable","length","focus","event","removeEventListener","querySelector","running","value","setTimeout","remove","FormFunctions","getFieldValue","stringify","newValue","newvalue","replace","displayMessage","message","console","log","name","submitForm","location","reload","saveColumnSettings","saveTableSettings","matches","row","removeSubmission","tableRow","showSwal","showDenyButton","denyButtonText","isDismissed","params","Proxy","URLSearchParams","window","search","get","searchParams","prop","archived","archiveSubmission","href","split","table_row","contains","stopPropagation","tagName","parentNode","tableRows","rows","element","cells","cellIndex","hideColumn","src","showHiddenColumns","activeCell","options","handle","animation","Sortable","create","getElementById","SimTableFunctions","positionTable","includes","key","keysPressed","Shift"],"sourceRoot":""}