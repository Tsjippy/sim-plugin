{"version":3,"file":"login.min.js","mappings":"mBAQOA,eAAeC,EAAaC,EAAKC,GACvC,IAAIC,EACJD,EAASE,OAAO,WAAYC,IAAIC,WAEhC,IAAIC,QAAeC,MAClB,GAAGH,IAAII,kBAAkBJ,IAAIK,uBAAuBT,IACpD,CACCU,OAAQ,OACRC,YAAa,cACbC,KAAMX,IAIR,IACCC,QAAiBI,EAAOO,MAIzB,CAHC,MAAOC,GAEP,OADAC,QAAQD,MAAMA,IACP,CACR,CAEA,OAAGR,EAAOU,GACFd,EACkB,6BAAjBA,EAASe,MAChBC,KAAKC,eAAe,yCAA0C,UACvD,IAERJ,QAAQD,MAAMZ,GACdgB,KAAKC,eAAejB,EAASkB,QAAS,UAC/B,EAET,CAGA,MAAMC,EAAmBC,IAKzB,MAAMC,GAJND,EAAQA,EACNE,QAAQ,KAAM,KACdA,QAAQ,KAAM,MAEEC,OAAS,EAC3B,GAAIF,EAAK,CACR,GAAY,IAARA,EACJ,MAAM,IAAIG,MAAM,uFAEhBJ,GAAS,IAAIK,MAAM,EAAEJ,GAAKK,KAAK,IAChC,CAEA,OAAOC,OAAOC,KAAKR,EAAM,EAInBS,EAAuBC,GAAMC,KAAKC,OAAOC,gBAAgBH,IC/C/DlC,eAAesC,IAEdC,SAASC,iBAAiB,uCAAuCC,SAAQC,IACxEA,EAAGC,UAAUC,IAAI,UACjBF,EAAGC,UAAUC,IAAI,iBAAiB,IAInCL,SAASM,eAAe,sBAAsBF,UAAUG,OAAO,UAE/D,IAAIC,EAASR,SAASM,eAAe,aACjC1C,EAAW,IAAI6C,SAASD,GAI5B,GAHAA,EAAKP,iBAAiB,sBAAsBC,SAAQC,IAAKA,EAAGO,UAAW,KACxDF,EAAKG,iBAEpB,OAIM9B,KAAK+B,kBAEX,IAAI/C,QAAiBH,EAAa,gBAAiBE,GAEhDC,GACFmC,SAASa,cAAc,uCAAuCC,YAAY,wCAE3D,oBAAZjD,EACFkD,SAASC,SAETD,SAASE,KAAOpD,IAGjBmC,SAASM,eAAe,sBAAsBF,UAAUC,IAAI,UAE5DL,SAASa,cAAc,mBAAmBT,UAAUG,OAAO,UAjB5D,CAmBD,CAGA9C,eAAeyD,EAAeC,GAE7BnB,SAASM,eAAe,oBAAoBF,UAAUG,OAAO,UAE7D,IAAIa,EAAWpB,SAASM,eAAe,YAAYe,MAEnD,IACC,IAAIzD,EAAa,IAAI6C,SACrB7C,EAASE,OAAO,WAAYsD,GAE5B,IAAIvD,QAAmBH,EAAa,aAAcE,GAClD,IAAIC,EACH,MAAM,IAAIwB,MAAM,qBAGjB,IAAIiC,EDJiCA,KAEtCA,EAAUC,UAAYC,WAAWC,KAChCzC,EAAgBsC,EAAUC,YAC1BG,GAAKA,EAAEC,WAAW,UAIIC,IAAnBN,EAAUO,OACbP,EAAUO,KAAO,IACdP,EAAUO,KACbC,GAAIN,WAAWC,KACdjC,OAAOC,KAAK6B,EAAUO,KAAKC,KAC3BJ,GAAKA,EAAEC,WAAW,YAMiBC,IAAjCN,EAAUS,qBACbT,EAAUS,mBAAqBT,EAAUS,mBAAmBC,KAC3DC,IACO,IACHA,EACHH,GAAIN,WAAWC,KACdzC,EAAgBiD,EAAKH,KACrBJ,GAAKA,EAAEC,WAAW,eAOaC,IAA/BN,EAAUY,mBACbZ,EAAUY,iBAAmBZ,EAAUY,iBAAiBF,KACvDC,IACO,IACHA,EACHH,GAAIN,WAAWC,KACdzC,EAAgBiD,EAAKH,KACrBJ,GAAKA,EAAEC,WAAW,UAOfL,GC3CYa,CAAwBtE,GAG1CmC,SAASa,cAAc,qCAAqCC,YAAc,wBAE1E,IAAIxC,QAAsB8D,UAAU9D,YAAY+D,IAAI,CAACf,cAErDtB,SAASa,cAAc,qCAAqCC,YAAc,eAG1E,MAAMwB,EDqCmCL,KAC1C,MAAMK,EAAsB,CAC3BR,GAAIG,EAAKH,GACTS,KAAMN,EAAKM,KACXC,MAAO9C,EAAoB,IAAI8B,WAAWS,EAAKO,QAC/C3E,SAAU,CACV4E,eAAgB/C,EACf,IAAI8B,WAAWS,EAAKpE,SAAS4E,mBA6B/B,YAxBwCb,IAApCK,EAAKpE,SAAS6E,oBACjBJ,EAAoBzE,SAAS6E,kBAAoBhD,EAChD,IAAI8B,WAAWS,EAAKpE,SAAS6E,0BAISd,IAApCK,EAAKpE,SAAS8E,oBACjBL,EAAoBzE,SAAS8E,kBAAoBjD,EAChD,IAAI8B,WAAWS,EAAKpE,SAAS8E,0BAICf,IAA5BK,EAAKpE,SAAS+E,YACjBN,EAAoBzE,SAAS+E,UAAYlD,EACxC,IAAI8B,WAAWS,EAAKpE,SAAS+E,kBAIEhB,IAA7BK,EAAKpE,SAASgF,aACjBP,EAAoBzE,SAASgF,WAAanD,EACzC,IAAI8B,WAAWS,EAAKpE,SAASgF,cAIxBP,CAAmB,ECzEIQ,CAA4BxE,GAIzD,IAHAV,EAAe,IAAI6C,UACV3C,OAAO,sBAAuBiF,KAAKC,UAAUV,MACtDzE,QAAqBH,EAAa,cAAeE,IAEhD,MAAM,IAAIyB,MAAM,sBAIjBU,GAwBD,CAvBC,MAAOtB,GAUN,IAAIM,EATFiB,SAASM,eAAe,sBAAsBF,UAAUC,IAAI,UAG/DL,SAASa,cAAc,qBAAqBT,UAAUC,IAAI,UAErC,GAAlBc,EAAQ/B,QACV6D,EAAY,mEACZlD,MAGuB,8BAApBtB,EAAe,QACjBM,EAAU,yEAEVA,EAAU,4DACVA,GAAW,sHACXL,QAAQD,MAAM,2BAA2BA,EAAe,UAEzDwE,EAAYlE,GAGZmE,EAAgB/B,GAElB,CACD,CAoBA1D,eAAe0F,IACd,IAAI/B,EAAWpB,SAASM,eAAe,YAAYe,MAC/C+B,EAAWpD,SAASM,eAAe,YAAYe,MAGnD,GAAe,IAAZD,GAA8B,IAAZgC,EAArB,CACCpD,SAASa,cAAc,kCAAkCT,UAAUG,OAAO,gBAOrE1B,KAAK+B,kBAEX,IAAIhD,EAAW,IAAI6C,SACnB7C,EAASE,OAAO,WAAWsD,GAC3BxD,EAASE,OAAO,WAAWsF,GAE3B,IA2HmBnF,EA3HfJ,QAAiBH,EAAa,aAAcE,GAE5CC,IACY,SAAZA,GACFoF,EAAY,4BAGZjD,SAASa,cAAc,kCAAkCT,UAAUC,IAAI,YAoHtDpC,EAlHNJ,EAmHbmC,SAASa,cAAc,kCAAkCT,UAAUC,IAAI,UAElD,iBAAZ,GAAwBpC,GAEhC+B,SAASC,iBAAiB,iCAAiCC,SAAQC,GAAIA,EAAGC,UAAUC,IAAI,YAExFL,SAASM,eAAe,sBAAsBF,UAAUG,OAAO,UAE5DQ,SAASE,MAAQhD,EAEnB8C,SAASE,KAAOhD,EAGhBY,KAAKwE,cAEGpF,EAGiB,iBAAZ,GAEd+B,SAASC,iBAAiB,iCAAiCC,SAAQC,GAAIA,EAAGC,UAAUC,IAAI,YAGxF4C,EAAY,IAEThF,EAAOqF,MAAKC,GAAsB,YAAXA,IACtBC,EAEFtC,EAAejD,GACU,GAAjBA,EAAOmB,QACf6D,EAAY,gFACZlD,KAEAmD,EAAgBjF,GAIjBiF,EAAgBjF,IAIjB8C,SAASC,SAxBTiC,EAAY,kCAtJb,MAFCA,EAAY,wCAuBd,CAGAxF,eAAegG,EAAcC,GAC5B,IAAItC,EAAWpB,SAASM,eAAe,YAAYe,MAEnD,GAAe,IAAZD,EAAH,CAIA,IAAIuC,EAAUD,EAAOE,uBAErB,GAAGD,EAAQvD,UAAUyD,SAAS,UACS,MAAnCF,EAAQ9C,cAAc,WACxBhC,KAAKC,eAAe,kDAAkD,SAIvE6E,EAAQvD,UAAUG,OAAO,UAGzBmD,EAAOI,KAAO,kCACV,CACJJ,EAAOtD,UAAUC,IAAI,UACrB,IAAI0D,EAASlF,KAAKmF,WAAWN,GAAQ,EAAO,wBAExC9F,EAAW,IAAI6C,SACnB7C,EAASE,OAAO,WAAWsD,GAE3B,IAAIvD,QAAiBH,EAAa,oBAAqBE,GAEnDC,GACHgB,KAAKC,eAAejB,EAAS,WAG9BkG,EAAOxD,SACPmD,EAAOtD,UAAUG,OAAO,SACzB,CA5BA,MAFC1B,KAAKC,eAAe,8BAA8B,QA+BpD,CAwBA,SAASmE,EAAYlE,GACpBiB,SAASa,cAAc,2BAA2BoD,UAAWC,UAAUC,SAASpF,EACjF,CAxNAL,QAAQ0F,IAAI,mBA0NZ,IAAIZ,GAAoB,EAqBxB,SAASN,EAAgB/B,GACrBA,EAAQkD,SAAS,UAxIrB5G,iBAGCwF,EAAY,2CAD6BlF,IAAIuG,WAAW,uDAGxD,IAAIlD,EAAWpB,SAASM,eAAe,YAAYe,MAC/CzD,EAAW,IAAI6C,SACnB7C,EAASE,OAAO,WAAWsD,GAE3B,IAAIvD,QAAiBH,EAAa,qBAAsBE,GAErDC,GACFoF,EAAYpF,EAEd,CA2HE0G,GAID,IAAI,MAAMhB,KAAWpC,EACpB,GAAc,YAAXoC,EAAH,CAIA,IAAIiB,EAAUxE,SAASM,eAAeiD,EAAQ,YAChC,MAAXiB,IACFA,EAAQpE,UAAUG,OAAO,UACzBiE,EAAQvE,iBAAiB,SAASC,SAAQC,GAAIX,OAAOiF,YAAW,IAAMtE,EAAGuE,SAAS,KAJnF,CASD1E,SAASa,cAAc,iBAAiB8D,SAAa,GAErD3E,SAASa,cAAc,yBAAyBT,UAAUG,OAAO,SAClE,CA+EA,SAASqE,IAERC,ID5VA7E,SAASC,iBAAiB,kDAAkDC,SAAQC,GAAIA,EAAGC,UAAUG,OAAO,aAC5GP,SAASa,cAAc,QAAQT,UAAUG,OAAO,oBAChDP,SAASa,cAAc,yCAAyCiE,aAAe,QCgW/E9E,SAASa,cAAc,QAAQkE,MAAMC,UAAY,SAEjD,IAAIC,EAAQjF,SAASM,eAAe,eAGpC2E,EAAMhF,iBAAiB,2BAA2BC,SAAQC,GAAIA,EAAGC,UAAUC,IAAI,YAC/E4E,EAAMpE,cAAc,qBAAqBT,UAAUG,OAAO,UAE1D0E,EAAM7E,UAAUG,OAAO,UAEvBf,OAAOiF,YAAW,IAAMQ,EAAMpE,cAAc,aAAa6D,SAAS,EACnE,CAlDA1E,SAASkF,iBAAiB,YAAY,SAAUC,GAC9B,UAAVA,EAAEC,MACJpF,SAASa,cAAc,qBAAqBT,UAAUyD,SAAS,UAEzD7D,SAASa,cAAc,yBAAyBT,UAAUyD,SAAS,WAC5E9D,IAFAoD,IAKH,IA4CA,IAAIkC,EAAW,IAAIC,kBAAiB,SAASC,GAC5CA,EAAUrF,SAAQ,SAASsF,GACK,2BAA3BA,EAASC,eAA8CzF,SAASa,cAAc,qBAAqB6E,QAAQC,iBAAiBvG,OAAS,KACxIqE,EAAczD,SAASa,cAAc,gBAEvC,GACD,IAEA,SAASgE,IAEmC,MAAxC7E,SAASa,cAAc,eAG1B4D,YAAW,WACV,IAAImB,EAAS5F,SAASa,cAAc,qBACvB,MAAV+E,EACFf,IAEAQ,EAASQ,QAAQD,EAAQ,CACxBE,YAAY,GAGf,GAAG,IACJ,CApKKtG,OAAOuG,oBACVA,oBAAoBC,gDAAgDC,MAAMC,IACrEA,GACHxH,QAAQ0F,IAAI,cACZZ,GAAoB,GAEpB9E,QAAQ0F,IAAI,4DACb,IAEA+B,OAAOC,IACP1H,QAAQD,MAAM,yBACdC,QAAQD,MAAM2H,EAAI,IAGnB1H,QAAQ0F,IAAI,kBA2JdpE,SAASkF,iBAAiB,SAAS,SAASmB,GAC3C,IAAI3C,EAAS2C,EAAM3C,OAEH,SAAbA,EAAO5B,IAAyC,SAAxB4B,EAAO4C,WAAWxE,GAE5C8C,IACqB,cAAblB,EAAO5B,GAEfqB,IACqB,gBAAbO,EAAO5B,GAEf/B,IACqB,mBAAb2D,EAAO5B,IAAmD,mBAAxB4B,EAAO4C,WAAWxE,GAlF9D,SAA2ByE,GAC1B,IAAI7C,EAAS6C,EAAG7C,OAEQ,OAArB6C,EAAG7C,OAAO8C,UACZ9C,EAAS6C,EAAG7C,OAAO4C,YAGQ,KAAzB5C,EAAOgC,QAAQe,QACjB/C,EAAOgD,MAAe,gBACtBhD,EAAOgC,QAAQe,OAAc,IAC7B/C,EAAOO,UAAkBP,EAAOO,UAAU9E,QAAQ,YAAa,WAC/Da,SAASM,eAAe,YAAYiC,KAAO,SAE3CmB,EAAOgD,MAAe,gBACtBhD,EAAOgC,QAAQe,OAAc,IAC7B/C,EAAOO,UAAkBP,EAAOO,UAAU9E,QAAQ,UAAW,aAC7Da,SAASM,eAAe,YAAYiC,KAAO,WAE7C,CAiEEoE,CAAkBN,GACG,iBAAb3C,EAAO5B,GACf2B,EAAcC,GACO,kBAAbA,EAAO5B,IACfmB,EAAY,IACZ/B,EAAe,KACQ,mBAAfwC,EAAOkD,MAvNjBnJ,eAA8BiG,GAC7B,IAAIlD,EAASkD,EAAOmD,QAAQ,QAG5BrG,EAAKK,cAAc,cAAcT,UAAUG,OAAO,UAElD,IAAI3C,EAAW,IAAI6C,SAASD,GAExB3C,QAAiBH,EAAa,uBAAwBE,GAEvDC,GACFgB,KAAKC,eAAejB,GAIrB2C,EAAKsG,QAGLtG,EAAKK,cAAc,cAAcT,UAAUC,IAAI,SAChD,CAqME0G,CAAerD,EAEjB,IAoBwB,mBAAmBsD,KAAK5E,UAAU6E,aAAezH,OAAO0H,UAjB1C,MACrC,MAAM/G,EAAKH,SAASa,cAAc,uBAElC,GAAW,OAAPV,EAAa,CACf,IAAIgH,EAAUhH,EAAGiH,aAAa,WAC1BC,EAAK,2BAGRF,EADGE,EAAGL,KAAKG,GACDA,EAAQhI,QAAQkI,EAAI,qBAEpB,CAACF,EAAS,qBAAqB5H,KAAK,MAG/CY,EAAGmH,aAAa,UAAWH,EAC7B,GAMAI,E","sources":["webpack://login/./shared.js","webpack://login/./login.js"],"sourcesContent":["export function closeMobileMenu(){\r\n\t//close mobile menu\r\n\tdocument.querySelectorAll('#site-navigation, #mobile-menu-control-wrapper').forEach(el=>el.classList.remove('toggled'));\r\n\tdocument.querySelector('body').classList.remove('mobile-menu-open');\r\n\tdocument.querySelector(\"#mobile-menu-control-wrapper > button\").ariaExpanded = 'false';\r\n}\r\n\r\n// get response from rest api server\r\nexport async function fetchRestApi(url, formData){\r\n\tlet response;\r\n\tformData.append('_wpnonce', sim.restNonce);\r\n\r\n\tlet result = await fetch(\r\n\t\t`${sim.baseUrl}/wp-json${sim.restApiPrefix}/login/${url}`,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t\tbody: formData\r\n\t\t}\r\n\t);\r\n\r\n\ttry{\r\n\t\tresponse\t= await result.json();\r\n\t}catch (error){\r\n\t\tconsole.error(error);\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif(result.ok){\r\n\t\treturn response;\r\n\t}else if(response.code == 'rest_cookie_invalid_nonce'){\r\n\t\t\tMain.displayMessage('Please refresh the page and try again!', 'error');\r\n\t\t\treturn false;\r\n\t}else{\r\n\t\tconsole.error(response);\r\n\t\tMain.displayMessage(response.message, 'error');\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n// Decodes a Base64Url string\r\nconst base64UrlDecode = (input) => {\r\ninput = input\r\n\t.replace(/-/g, '+')\r\n\t.replace(/_/g, '/');\r\n\r\nconst pad = input.length % 4;\r\nif (pad) {\r\n\tif (pad === 1) {\r\n\tthrow new Error('InvalidLengthError: Input base64url string is the wrong length to determine padding');\r\n\t}\r\n\tinput += new Array(5-pad).join('=');\r\n}\r\n\r\nreturn window.atob(input);\r\n};\r\n\r\n// Converts an array of bytes into a Base64Url string\r\nconst arrayToBase64String = (a) => btoa(String.fromCharCode(...a));\r\n\r\n// Prepares the public key options object returned by the Webauthn Framework\r\nexport const preparePublicKeyOptions = publicKey => {\r\n\t//Convert challenge from Base64Url string to Uint8Array\r\n\tpublicKey.challenge = Uint8Array.from(\r\n\t\tbase64UrlDecode(publicKey.challenge),\r\n\t\tc => c.charCodeAt(0)\r\n\t);\r\n\r\n\t//Convert the user ID from Base64 string to Uint8Array\r\n\tif (publicKey.user !== undefined) {\r\n\t\tpublicKey.user = {\r\n\t\t...publicKey.user,\r\n\t\tid: Uint8Array.from(\r\n\t\t\twindow.atob(publicKey.user.id),\r\n\t\t\tc => c.charCodeAt(0)\r\n\t\t),\r\n\t\t};\r\n\t}\r\n\r\n\t//If excludeCredentials is defined, we convert all IDs to Uint8Array\r\n\tif (publicKey.excludeCredentials !== undefined) {\r\n\t\tpublicKey.excludeCredentials = publicKey.excludeCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tif (publicKey.allowCredentials !== undefined) {\r\n\t\tpublicKey.allowCredentials = publicKey.allowCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKey;\r\n};\r\n\r\n// Prepares the public key credentials object returned by the authenticator\r\nexport const preparePublicKeyCredentials = data => {\r\n\tconst publicKeyCredential = {\r\n\t\tid: data.id,\r\n\t\ttype: data.type,\r\n\t\trawId: arrayToBase64String(new Uint8Array(data.rawId)),\r\n\t\tresponse: {\r\n\t\tclientDataJSON: arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.clientDataJSON)\r\n\t\t),\r\n\t\t},\r\n\t};\r\n\r\n\tif (data.response.attestationObject !== undefined) {\r\n\t\tpublicKeyCredential.response.attestationObject = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.attestationObject)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.authenticatorData !== undefined) {\r\n\t\tpublicKeyCredential.response.authenticatorData = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.authenticatorData)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.signature !== undefined) {\r\n\t\tpublicKeyCredential.response.signature = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.signature)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.userHandle !== undefined) {\r\n\t\tpublicKeyCredential.response.userHandle = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.userHandle)\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKeyCredential;\r\n};","import {\r\n\tcloseMobileMenu,\r\n    preparePublicKeyCredentials,\r\n    preparePublicKeyOptions,\r\n\tfetchRestApi\r\n} from './shared.js';\r\n\r\n//Add an event listener to the login or register button\r\nconsole.log(\"Login.js loaded\");\r\n\r\n//show loader\r\nasync function requestLogin(){\r\n\t//hide everything\r\n\tdocument.querySelectorAll('.authenticator_wrapper:not(.hidden)').forEach(el=>{\r\n\t\tel.classList.add('hidden');\r\n\t\tel.classList.add('current-method');\r\n\t});\r\n\t\r\n\t//show login message\r\n\tdocument.getElementById('logging_in_wrapper').classList.remove('hidden');\r\n\r\n\tvar form \t\t= document.getElementById('loginform');\r\n\tvar formData\t= new FormData(form);\r\n\tform.querySelectorAll('.hidden [required]').forEach(el=>{el.required = false});\r\n\tvar validity\t= form.reportValidity();\r\n\t//if not valid return\r\n\tif(!validity){\r\n\t\treturn;\r\n\t}\r\n\r\n\tawait Main.waitForInternet();\r\n\r\n\tvar response\t= await fetchRestApi('request_login', formData);\r\n\r\n\tif(response){\r\n\t\tdocument.querySelector('#logging_in_wrapper .status_message').textContent='Succesfully logged in, redirecting...';\r\n\t\t\r\n\t\tif(response == 'Login successful'){\r\n\t\t\tlocation.reload();\r\n\t\t}else{\r\n\t\t\tlocation.href = response;\r\n\t\t}\r\n\t}else{\r\n\t\tdocument.getElementById('logging_in_wrapper').classList.add('hidden');\r\n\r\n\t\tdocument.querySelector('.current-method').classList.remove('hidden');\r\n\t}\r\n}\r\n\r\n// Send request to start webauthn\r\nasync function verifyWebauthn(methods){\t\r\n\t//show webauthn messages\r\n\tdocument.getElementById('webauthn_wrapper').classList.remove('hidden');\r\n\r\n\tvar username\t= document.getElementById('username').value;\r\n\r\n\ttry{\r\n\t\tvar formData\t\t\t= new FormData();\r\n\t\tformData.append('username', username);\r\n\r\n\t\tvar response\t\t\t= await fetchRestApi('auth_start', formData);\r\n\t\tif(!response){\r\n\t\t\tthrow new Error('auth_start failed');\r\n\t\t}\r\n\r\n\t\tvar publicKey\t\t\t= preparePublicKeyOptions(response);\r\n\r\n\t\t// Update message\r\n\t\tdocument.querySelector('#webauthn_wrapper .status_message').textContent\t= 'Waiting for biometric';\r\n\t\t// Verify on device\r\n\t\tvar credentials\t\t\t= await navigator.credentials.get({publicKey});\r\n\t\t// Update message\r\n\t\tdocument.querySelector('#webauthn_wrapper .status_message').textContent\t= 'Verifying...';\r\n\r\n\t\t// Verify on the server\r\n\t\tconst publicKeyCredential \t= preparePublicKeyCredentials(credentials);\r\n\t\tformData\t\t\t\t\t= new FormData();\r\n\t\tformData.append('publicKeyCredential', JSON.stringify(publicKeyCredential));\r\n\t\tresponse\t\t\t\t\t= await fetchRestApi('auth_finish', formData);\r\n\t\tif(!response){\r\n\t\t\tthrow new Error('auth_finish failed');\r\n\t\t}\r\n\r\n\t\t//authentication success\r\n\t\trequestLogin();\r\n\t}catch (error){\r\n\t\tif(document.getElementById('logging_in_wrapper').classList.add('hidden'));\r\n\r\n\t\t//authentication failed\r\n\t\tdocument.querySelector('#webauthn_wrapper').classList.add('hidden');\r\n\r\n\t\tif(methods.length == 1){\r\n\t\t\tshowMessage('Authentication failed, please setup an additional login factor.');\r\n\t\t\trequestLogin();\r\n\t\t}else{\r\n\t\t\tvar message;\r\n\t\t\tif(error['message'] == \"No authenticator available\"){\r\n\t\t\t\tmessage = \"No biometric login for this device found. <br>Give verification code.\";\r\n\t\t\t}else{\r\n\t\t\t\tmessage = 'Web authentication failed, please give verification code.';\r\n\t\t\t\tmessage += '<button type=\"button\" class=\"button small\" id=\"retry_webauthn\" style=\"float:right;margin-top:-20px;\">Retry</button>';\r\n\t\t\t\tconsole.error('Authentication failure: '+error['message']);\r\n\t\t\t}\r\n\t\t\tshowMessage(message);\r\n\r\n\t\t\t//Show other 2fa fields\r\n\t\t\tshowTwoFaFields(methods);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// Request email code for 2fa login\r\nasync function requestEmailCode(){\r\n\t//add new one\r\n\tvar loader\t\t\t\t= \"<img id='loader' src='\"+sim.loadingGif+\"' style='height:30px;margin-top:-6px;float:right;'>\";\r\n\tshowMessage(`Sending e-mail... ${loader}`);\r\n\r\n\tvar username\t= document.getElementById('username').value;\r\n\tvar formData\t= new FormData();\r\n\tformData.append('username',username);\r\n\r\n\tvar response\t= await fetchRestApi('request_email_code', formData);\r\n\t\r\n\tif(response){\r\n\t\tshowMessage(response);\r\n\t}\r\n}\r\n\r\n// Check if a valid username and password is submitted\r\nasync function verifyCreds(){\r\n\tvar username\t= document.getElementById('username').value;\r\n\tvar password\t= document.getElementById('password').value;\r\n\r\n\t// Check if the fields are filled\r\n\tif(username != '' && password != ''){\r\n\t\tdocument.querySelector('#check_cred_wrapper .loadergif').classList.remove('hidden');\r\n\t}else{\r\n\t\tshowMessage('Please give an username and password!');\r\n\t\treturn;\r\n\t}\r\n\r\n\t// Make sure we have a internet connection\r\n\tawait Main.waitForInternet();\r\n\r\n\tvar formData\t= new FormData();\r\n\tformData.append('username',username);\r\n\tformData.append('password',password);\r\n\r\n\tvar response\t= await fetchRestApi('check_cred', formData);\r\n\r\n \tif(response){\r\n\t\tif(response == 'false') {\r\n\t\t\tshowMessage('Invalid login, try again');\r\n\t\t\t\r\n\t\t\t// hide loader\r\n\t\t\tdocument.querySelector('#check_cred_wrapper .loadergif').classList.add('hidden');\r\n\t\t} else {\r\n\t\t\taddMethods(response);\r\n\t\t}\r\n\t}\r\n}\r\n\r\n//request password reset e-mail\r\nasync function resetPassword(target){\r\n\tvar username\t= document.getElementById('username').value;\r\n\r\n\tif(username == ''){\r\n\t\tMain.displayMessage('Specify your username first','error');\r\n\t\treturn;\r\n\t}\r\n\tvar captcha\t= target.previousElementSibling;\r\n\t//check if captcha visible\r\n\tif(captcha.classList.contains('hidden')){\r\n\t\tif(captcha.querySelector('iframe') == null){\r\n\t\t\tMain.displayMessage('Captcha failed to load, please refresh the page','error');\r\n\t\t}\r\n\r\n\t\t//show captcha\r\n\t\tcaptcha.classList.remove('hidden');\r\n\r\n\t\t//change button text\r\n\t\ttarget.text\t= 'Send password reset request';\r\n\t}else{\r\n\t\ttarget.classList.add('hidden');\r\n\t\tvar loader = Main.showLoader(target, false, 'Sending e-mail...   ');\r\n\r\n\t\tvar formData\t= new FormData();\r\n\t\tformData.append('username',username);\r\n\t\t\r\n\t\tvar response\t= await fetchRestApi('request_pwd_reset', formData);\r\n\r\n\t\tif (response) {\r\n\t\t\tMain.displayMessage(response,'success');\r\n\t\t}\r\n\r\n\t\tloader.remove();\r\n\t\ttarget.classList.remove('hidden');\r\n\t}\r\n}\r\n\r\n// request a new user account\r\nasync function requestAccount(target){\r\n\tvar form \t\t= target.closest('form');\r\n\r\n\t// Show loader\r\n\tform.querySelector('.loadergif').classList.remove('hidden');\r\n\r\n\tvar formData\t= new FormData(form);\r\n\r\n\tvar response\t= await fetchRestApi('request_user_account', formData);\r\n\t\r\n\tif(response){\r\n\t\tMain.displayMessage(response);\r\n\t}\r\n\r\n\t// reset form \r\n\tform.reset();\r\n\r\n\t// Hide loader\r\n\tform.querySelector('.loadergif').classList.add('hidden');\r\n}\r\n\r\nfunction showMessage(message){\r\n\tdocument.querySelector(\"#login_wrapper .message\").innerHTML= DOMPurify.sanitize(message);\r\n}\r\n\r\nlet webauthnSupported\t= false;\r\nfunction checkWebauthnAvailable(){\r\n\tif (window.PublicKeyCredential) {\r\n\t\tPublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then((available) => {\r\n\t\t\tif (available) {\r\n\t\t\t\tconsole.log(\"Supported.\");\r\n\t\t\t\twebauthnSupported = true;\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"WebAuthn supported, Platform Authenticator not supported.\");\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.error(\"Something went wrong.\");\r\n\t\t\tconsole.error(err);\r\n\t\t});\r\n\t} else {\r\n\t\tconsole.log(\"Not supported.\");\r\n\t}\r\n}\r\n\r\n// Display the form for the 2fa email or authenticator code\r\nfunction showTwoFaFields(methods){\r\n\tif(methods.includes('email')){\r\n\t\trequestEmailCode();\r\n\t}\r\n\r\n\t//show 2fa fields\r\n\tfor(const element of methods){\r\n\t\tif(element == 'webauthn'){\r\n\t\t\t//do not show webauthn\r\n\t\t\tcontinue;\r\n\t\t}\r\n\t\tvar wrapper\t= document.getElementById(element+'_wrapper');\r\n\t\tif(wrapper != null){\r\n\t\t\twrapper.classList.remove('hidden');\r\n\t\t\twrapper.querySelectorAll('input').forEach(el=>window.setTimeout(() => el.focus(), 0));\r\n\t\t}\r\n\t}\r\n\r\n\t//enable login button\r\n\tdocument.querySelector(\"#login_button\").disabled\t\t\t= '';\r\n\t//show login button\r\n\tdocument.querySelector('#submit_login_wrapper').classList.remove('hidden');\r\n}\r\n\r\nfunction addMethods(result){\r\n\tdocument.querySelector('#check_cred_wrapper .loadergif').classList.add('hidden');\r\n\t\r\n\tif(typeof(result) == 'string' && result){\r\n\t\t//hide login form\r\n\t\tdocument.querySelectorAll(\"#usercred_wrapper, #login_nav\").forEach(el=>el.classList.add('hidden'));\r\n\r\n\t\tdocument.getElementById('logging_in_wrapper').classList.remove('hidden');\r\n\r\n\t\tif(location.href != result){\r\n\t\t\t//redirect to the returned webpage\r\n\t\t\tlocation.href\t= result;\r\n\t\t}else{\r\n\t\t\t//close login modal\r\n\t\t\tMain.hideModals();\r\n\t\t}\r\n\t}else if(!result){\r\n\t\t//incorrect creds add message, but only once\r\n\t\tshowMessage('Invalid username or password!');\r\n\t}else if(typeof(result) == 'object'){\r\n\t\t//hide cred fields\r\n\t\tdocument.querySelectorAll(\"#usercred_wrapper, #login_nav\").forEach(el=>el.classList.add('hidden'));\r\n\r\n\t\t//hide messsages\r\n\t\tshowMessage('');\r\n\r\n\t\tif(result.find(element => element == 'webauthn')){\r\n\t\t\tif(webauthnSupported){\r\n\t\t\t\t//correct creds and webauthn enabled\r\n\t\t\t\tverifyWebauthn(result);\r\n\t\t\t}else if(result.length == 1){\r\n\t\t\t\tshowMessage('You do not have a valid second login method for this device, please add one.');\r\n\t\t\t\trequestLogin();\r\n\t\t\t}else{\r\n\t\t\t\tshowTwoFaFields(result);\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\t//correct creds and 2fa enabled\r\n\t\t\tshowTwoFaFields(result);\r\n\t\t}\r\n\t}else{\r\n\t\t//something went wrong, reload the page\r\n\t\tlocation.reload();\r\n\t}\r\n}\r\n\r\ndocument.addEventListener('keypress', function (e) {\r\n    if (e.key === 'Enter'){\r\n\t\tif(!document.querySelector(\"#usercred_wrapper\").classList.contains('hidden')) {\r\n\t\t\tverifyCreds();\r\n\t\t}else if(!document.querySelector(\"#submit_login_wrapper\").classList.contains('hidden')){\r\n\t\t\trequestLogin();\r\n\t\t}\r\n\t}\r\n});\r\n\r\nfunction togglePassworView(ev){\r\n\tvar target\t= ev.target;\r\n\r\n\tif(ev.target.tagName == 'IMG'){\r\n\t\ttarget\t= ev.target.parentNode;\r\n\t}\r\n\r\n\tif(target.dataset.toggle == '0'){\r\n\t\ttarget.title\t\t\t\t\t\t\t\t= 'Hide password';\r\n\t\ttarget.dataset.toggle\t\t\t\t\t\t= '1';\r\n\t\ttarget.innerHTML\t\t\t\t\t\t\t= target.innerHTML.replace('invisible', 'visible');\r\n\t\tdocument.getElementById('password').type\t= 'text';\r\n\t}else{\r\n\t\ttarget.title\t\t\t\t\t\t\t\t= 'Show password';\r\n\t\ttarget.dataset.toggle\t\t\t\t\t\t= '0';\r\n\t\ttarget.innerHTML\t\t\t\t\t\t\t= target.innerHTML.replace('visible', 'invisible');\r\n\t\tdocument.getElementById('password').type\t= 'password';\r\n\t}\r\n}\r\n\r\n// Show the modal with the login form\r\nfunction openLoginModal(){\r\n\t// Allready load the captcha for password reset so it is available when we need it\r\n\twaitForCaptcha();\r\n\r\n\t// Make sure the menu is closed\r\n\tcloseMobileMenu();\r\n\r\n\t//prevent page scrolling\r\n\tdocument.querySelector('body').style.overflowY = 'hidden';\r\n\r\n\tvar modal\t= document.getElementById('login_modal');\r\n\r\n\t//reset form\r\n\tmodal.querySelectorAll('form > div:not(.hidden)').forEach(el=>el.classList.add('hidden'));\r\n\tmodal.querySelector('#usercred_wrapper').classList.remove('hidden');\r\n\r\n\tmodal.classList.remove('hidden');\r\n\r\n\twindow.setTimeout(() => modal.querySelector('#username').focus(), 0);\r\n}\r\n\r\nvar observer = new MutationObserver(function(mutations) {\r\n\tmutations.forEach(function(mutation) {\r\n\t\tif (mutation.attributeName === \"data-hcaptcha-response\" && document.querySelector('.h-captcha iframe').dataset.hcaptchaResponse.length > 1000) {\r\n\t\t\tresetPassword(document.querySelector('#login_nav>a'));\r\n\t\t}\r\n\t});\r\n});\r\n\r\nfunction waitForCaptcha(){\r\n\t// Do not try to load if there is not even a h-captcha element\r\n\tif(document.querySelector('.h-captcha') == null) return;\r\n\r\n\t// Wait till the iframe is loaded before we attach the observer\r\n\tsetTimeout(function() {\r\n\t\tvar iframe\t= document.querySelector('.h-captcha iframe');\r\n\t\tif(iframe\t== null){\r\n\t\t\twaitForCaptcha();\r\n\t\t}else{\r\n\t\t\tobserver.observe(iframe, {\r\n\t\t\t\tattributes: true\r\n\t\t\t});\r\n\t\t}\r\n\t}, 1000);\r\n}\r\n\r\n//check if the current browser supports webauthn\r\ncheckWebauthnAvailable();\r\n\r\ndocument.addEventListener(\"click\", function(event){\r\n\tvar target = event.target;\r\n\r\n\tif(target.id == 'login' || target.parentNode.id == 'login'){\r\n\t\t// Show modal with login form\r\n\t\topenLoginModal();\r\n\t}else if(target.id == 'check_cred'){\r\n\t\t// Check if a valid username and password is submitted\r\n\t\tverifyCreds();\r\n\t}else if(target.id == \"login_button\"){\r\n\t\t// Submit the login form when averything is ok\r\n\t\trequestLogin();\r\n\t}else if(target.id == 'toggle_pwd_view' || target.parentNode.id == 'toggle_pwd_view'){\r\n\t\ttogglePassworView(event);\r\n\t}else if(target.id == \"lost_pwd_link\"){\r\n\t\tresetPassword(target);\r\n\t}else if(target.id == 'retry_webauthn'){\r\n\t\tshowMessage('');\r\n\t\tverifyWebauthn([]);\r\n\t}else if(target.name == 'request_account'){\r\n\t\trequestAccount(target);\r\n\t}\r\n});\r\n\r\n//prevent zoom in on login form on a iphone\r\nconst addMaximumScaleToMetaViewport = () => {\r\n\tconst el = document.querySelector('meta[name=viewport]');\r\n  \r\n\tif (el !== null) {\r\n\t  let content = el.getAttribute('content');\r\n\t  let re = /maximum\\-scale=[0-9\\.]+/g;\r\n  \r\n\t  if (re.test(content)) {\r\n\t\t  content = content.replace(re, 'maximum-scale=1.0');\r\n\t  } else {\r\n\t\t  content = [content, 'maximum-scale=1.0'].join(', ')\r\n\t  }\r\n  \r\n\t  el.setAttribute('content', content);\r\n\t}\r\n};\r\n\r\nconst checkIsIOS = () =>/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\r\n\r\nif (checkIsIOS()) {\r\n\taddMaximumScaleToMetaViewport();\r\n}"],"names":["async","fetchRestApi","url","formData","response","append","sim","restNonce","result","fetch","baseUrl","restApiPrefix","method","credentials","body","json","error","console","ok","code","Main","displayMessage","message","base64UrlDecode","input","pad","replace","length","Error","Array","join","window","atob","arrayToBase64String","a","btoa","String","fromCharCode","requestLogin","document","querySelectorAll","forEach","el","classList","add","getElementById","remove","form","FormData","required","reportValidity","waitForInternet","querySelector","textContent","location","reload","href","verifyWebauthn","methods","username","value","publicKey","challenge","Uint8Array","from","c","charCodeAt","undefined","user","id","excludeCredentials","map","data","allowCredentials","preparePublicKeyOptions","navigator","get","publicKeyCredential","type","rawId","clientDataJSON","attestationObject","authenticatorData","signature","userHandle","preparePublicKeyCredentials","JSON","stringify","showMessage","showTwoFaFields","verifyCreds","password","hideModals","find","element","webauthnSupported","resetPassword","target","captcha","previousElementSibling","contains","text","loader","showLoader","innerHTML","DOMPurify","sanitize","log","includes","loadingGif","requestEmailCode","wrapper","setTimeout","focus","disabled","openLoginModal","waitForCaptcha","ariaExpanded","style","overflowY","modal","addEventListener","e","key","observer","MutationObserver","mutations","mutation","attributeName","dataset","hcaptchaResponse","iframe","observe","attributes","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","then","available","catch","err","event","parentNode","ev","tagName","toggle","title","togglePassworView","name","closest","reset","requestAccount","test","userAgent","MSStream","content","getAttribute","re","setAttribute","addMaximumScaleToMetaViewport"],"sourceRoot":""}