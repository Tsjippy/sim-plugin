{"version":3,"file":"login.min.js","mappings":"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","sources":["webpack://login/./shared.js","webpack://login/./login.js"],"sourcesContent":["export function closeMobileMenu(){\r\n\t//close mobile menu\r\n\tdocument.querySelectorAll('#site-navigation, #mobile-menu-control-wrapper').forEach(el=>el.classList.remove('toggled'));\r\n\tdocument.querySelector('body').classList.remove('mobile-menu-open');\r\n\tdocument.querySelector(\"#mobile-menu-control-wrapper > button\").ariaExpanded = 'false';\r\n}\r\n\r\n// get response from rest api server\r\nexport async function fetchRestApi(url, formdata){\r\n\tformdata.append('_wpnonce', sim.restnonce);\r\n\r\n\tvar result = await fetch(\r\n\t\tsim.base_url+'/wp-json/sim/v1/login/'+url,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t\tbody: formdata\r\n\t\t}\r\n\t);\r\n\r\n\ttry{\r\n\t\tvar response\t= await result.json();\r\n\t}catch (error){\r\n\t\tconsole.error(error);\r\n\t\t//display_message(response.message, 'error');\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif(result.ok){\r\n\t\treturn response;\r\n\t}else{\r\n\t\tconsole.error(response);\r\n\t\tdisplay_message(response.message, 'error');\r\n\t\treturn false;\r\n\t};\r\n}\r\n\r\n// Predefined fetch function\r\nexport const fetchEndpoint = (data, url, header) => {\r\n\treturn fetch(\r\n\t\turl,\r\n\t\t{\r\n\t\t  method: 'POST',\r\n\t\t  credentials: 'same-origin',\r\n\t\t  redirect: 'error',\r\n\t\t  headers: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t...header\r\n\t\t  },\r\n\t\t  body: JSON.stringify(data),\r\n\t\t}\r\n\t);\r\n} \r\n\r\n// Decodes a Base64Url string\r\nconst base64UrlDecode = (input) => {\r\ninput = input\r\n\t.replace(/-/g, '+')\r\n\t.replace(/_/g, '/');\r\n\r\nconst pad = input.length % 4;\r\nif (pad) {\r\n\tif (pad === 1) {\r\n\tthrow new Error('InvalidLengthError: Input base64url string is the wrong length to determine padding');\r\n\t}\r\n\tinput += new Array(5-pad).join('=');\r\n}\r\n\r\nreturn window.atob(input);\r\n};\r\n\r\n// Converts an array of bytes into a Base64Url string\r\nconst arrayToBase64String = (a) => btoa(String.fromCharCode(...a));\r\n\r\n// Prepares the public key options object returned by the Webauthn Framework\r\nexport const preparePublicKeyOptions = publicKey => {\r\n\t//Convert challenge from Base64Url string to Uint8Array\r\n\tpublicKey.challenge = Uint8Array.from(\r\n\t\tbase64UrlDecode(publicKey.challenge),\r\n\t\tc => c.charCodeAt(0)\r\n\t);\r\n\r\n\t//Convert the user ID from Base64 string to Uint8Array\r\n\tif (publicKey.user !== undefined) {\r\n\t\tpublicKey.user = {\r\n\t\t...publicKey.user,\r\n\t\tid: Uint8Array.from(\r\n\t\t\twindow.atob(publicKey.user.id),\r\n\t\t\tc => c.charCodeAt(0)\r\n\t\t),\r\n\t\t};\r\n\t}\r\n\r\n\t//If excludeCredentials is defined, we convert all IDs to Uint8Array\r\n\tif (publicKey.excludeCredentials !== undefined) {\r\n\t\tpublicKey.excludeCredentials = publicKey.excludeCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tif (publicKey.allowCredentials !== undefined) {\r\n\t\tpublicKey.allowCredentials = publicKey.allowCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKey;\r\n};\r\n\r\n// Prepares the public key credentials object returned by the authenticator\r\nexport const preparePublicKeyCredentials = data => {\r\n\tconst publicKeyCredential = {\r\n\t\tid: data.id,\r\n\t\ttype: data.type,\r\n\t\trawId: arrayToBase64String(new Uint8Array(data.rawId)),\r\n\t\tresponse: {\r\n\t\tclientDataJSON: arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.clientDataJSON)\r\n\t\t),\r\n\t\t},\r\n\t};\r\n\r\n\tif (data.response.attestationObject !== undefined) {\r\n\t\tpublicKeyCredential.response.attestationObject = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.attestationObject)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.authenticatorData !== undefined) {\r\n\t\tpublicKeyCredential.response.authenticatorData = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.authenticatorData)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.signature !== undefined) {\r\n\t\tpublicKeyCredential.response.signature = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.signature)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.userHandle !== undefined) {\r\n\t\tpublicKeyCredential.response.userHandle = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.userHandle)\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKeyCredential;\r\n};\r\n  ","import {\n\tcloseMobileMenu,\n\tfetchEndpoint,\n    preparePublicKeyCredentials,\n    preparePublicKeyOptions,\n\tfetchRestApi\n} from './shared.js';\n\n//Add an event listener to the login or register button\nconsole.log(\"Login.js loaded\");\n\n//show loader\nasync function requestLogin(){\n\t//hide everything\n\tdocument.querySelectorAll('.authenticator_wrapper:not(.hidden)').forEach(el=>el.classList.add('hidden'));\n\t\n\t//show login message\n\tdocument.getElementById('logging_in_wrapper').classList.remove('hidden');\n\n\tvar form \t\t= document.getElementById('loginform');\n\tvar formData\t= new FormData(form);\n\tform.querySelectorAll('.hidden [required]').forEach(el=>{el.required = false});\n\tvar validity\t= form.reportValidity();\n\t//if not valid return\n\tif(!validity){\n\t\treturn;\n\t}\n\n\tawait waitForInternet();\n\n\tvar response\t= await fetchRestApi('request_login', formData);\n\n\tif(response){\n\t\tdocument.querySelector('#logging_in_wrapper .status_message').textContent='Succesfully logged in, redirecting...';\n\t\t\n\t\tif(response == 'Login successful'){\n\t\t\tlocation.reload();\n\t\t}else{\n\t\t\tlocation.href = response;\n\t\t}\n\t}\n/* \n\n\tif(response.ok){\n\t\t\n\t}else{\n\t\tdocument.querySelectorAll('.authenticator_wrapper input').forEach(el=>{\n\t\t\tif(el.value != ''){\n\t\t\t\tel.closest('.authenticator_wrapper').classList.remove('hidden');\n\t\t\t\tel.value\t= '';\n\t\t\t}\n\t\t})\n\t\tdocument.getElementById('logging_in_wrapper').classList.add('hidden');\n\t\tdocument.getElementById('logging_in_wrapper').classList.add('hidden');\n\t\tshowMessage(message,'error');\n\t} */\n};\n\n// Send request to start webauthn\nasync function verifyWebauthn(methods){\t\n\t//show webauthn messages\n\tdocument.getElementById('webauthn_wrapper').classList.remove('hidden');\n\n\tvar username\t= document.getElementById('username').value;\n\n\ttry{\n\t\tvar formData\t\t\t= new FormData();\n\t\tformData.append('username', username);\n\n\t\tvar response\t\t\t= await fetchRestApi('auth_start', formData);\n\t\tif(!response){\n\t\t\tthrow 'auth_start failed';\n\t\t}\n\n\t\tvar publicKey\t\t\t= preparePublicKeyOptions(response);\n\n\t\t// Update message\n\t\tdocument.querySelector('#webauthn_wrapper .status_message').textContent\t= 'Waiting for biometric';\n\t\t// Verify on device\n\t\tvar credentials\t\t\t= await navigator.credentials.get({publicKey});\n\t\t// Update message\n\t\tdocument.querySelector('#webauthn_wrapper .status_message').textContent\t= 'Verifying...';\n\n\t\t// Verify on the server\n\t\tconst publicKeyCredential \t= preparePublicKeyCredentials(credentials);\n\t\tvar formData\t\t\t\t= new FormData();\n\t\tformData.append('publicKeyCredential', JSON.stringify(publicKeyCredential));\n\t\tvar response\t\t\t\t= await fetchRestApi('auth_finish', formData);\n\t\tif(!response){\n\t\t\tthrow 'auth_finish failed';\n\t\t}\n\n\t\t//authentication success\n\t\trequestLogin();\n\t}catch (error){\n\t\tif(document.getElementById('logging_in_wrapper').classList.add('hidden'));\n\n\t\t//authentication failed\n\t\tdocument.querySelector('#webauthn_wrapper').classList.add('hidden');\n\n\t\tif(methods.length == 1){\n\t\t\tshowMessage('Authentication failed, please setup an additional login factor.');\n\t\t\trequestLogin();\n\t\t}else{\n\t\t\tif(error['message'] == \"No authenticator available\"){\n\t\t\t\tvar message = \"No biometric login for this device found. <br>Give verification code.\";\n\t\t\t}else{\n\t\t\t\tvar message = 'Web authentication failed, please give verification code.';\n\t\t\t\tmessage += '<button type=\"button\" class=\"button small\" id=\"retry_webauthn\" style=\"float:right;margin-top:-20px;\">Retry</button>';\n\t\t\t\tconsole.error('Authentication failure: '+error['message']);\n\t\t\t}\n\t\t\tshowMessage(message);\n\n\t\t\t//Show other 2fa fields\n\t\t\tshowTwoFaFields(methods);\n\t\t}\n\t}\n}\n\nasync function requestEmailCode(){\n\t//add new one\n\tvar loader\t\t\t\t= \"<img id='loader' src='\"+sim.loading_gif+\"' style='height:30px;margin-top:-6px;float:right;'>\";\n\tshowMessage(`Sending e-mail... ${loader}`);\n\n\tvar username\t= document.getElementById('username').value;\n\tvar formData\t= new FormData();\n\tformData.append('username',username);\n\n\tvar response\t= await fetchRestApi('request_email_code', formData);\n\t\n\tif(response){\n\t\tshowMessage(response);\n\t}\n}\n\n// Check if a valid username and password is submitted\nasync function verifyCreds(){\n\tvar username\t= document.getElementById('username').value;\n\tvar password\t= document.getElementById('password').value;\n\n\t// Check if the fields are filled\n\tif(username != '' && password != ''){\n\t\tdocument.querySelector('#check_cred_wrapper .loadergif').classList.remove('hidden');\n\t}else{\n\t\tshowMessage('Please give an username and password!');\n\t\treturn;\n\t}\n\n\t// Make sure we have a internet connection\n\tawait waitForInternet();\n\n\tvar formData\t= new FormData();\n\tformData.append('username',username);\n\tformData.append('password',password);\n\n\tvar response\t= await fetchRestApi('check_cred', formData);\n\n \tif(response){\n\t\ttry {\n\t\t\taddMethods(response);\n\t\t} catch (e) {\n\t\t\tlocation.href=text;\n\t\t}\n\t}\n}\n\n//request password reset e-mail\nasync function reset_password(target){\n\tvar username\t= document.getElementById('username').value;\n\n\tif(username == ''){\n\t\tdisplay_message('Specify your username first','error');\n\t\treturn;\n\t}\n\tvar captcha\t= target.previousElementSibling;\n\t//check if captcha visible\n\tif(captcha.classList.contains('hidden')){\n\t\tif(captcha.querySelector('iframe') == null){\n\t\t\tdisplay_message('Captcha failed to load, please refresh the page','error');\n\t\t}\n\n\t\t//show captcha\n\t\tcaptcha.classList.remove('hidden');\n\n\t\t//change button text\n\t\ttarget.text\t= 'Send password reset request';\n\t}else{\n\t\ttarget.classList.add('hidden');\n\t\tvar loader = showLoader(target, false, 'Sending e-mail...   ');\n\n\t\tvar formData\t= new FormData(target.closest('form'));\n\t\tformData.append('action','request_pwd_reset');\n\t\tformData.append('username',username);\n\n\t\tvar response = await fetch(sim.ajax_url, {\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'same-origin',\n\t\t\tbody: formData\n\t\t});\n\n\t\tvar message = await response.text();\n\n\t\tif (response.ok) {\n\t\t\tdisplay_message(message,'success');\n\t\t}else{\n\t\t\tdisplay_message(message,'error');\n\t\t}\n\n\t\tloader.remove();\n\t\ttarget.classList.remove('hidden');\n\t}\n};\n\nfunction showMessage(message){\n\tdocument.querySelector(\"#login_wrapper .message\").innerHTML= message;\n}\n\nlet webauthn_supported\t= false;\nfunction checkWebauthnAvailable(){\n\tif (window.PublicKeyCredential) {\n\t\tPublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then((available) => {\n\t\t\tif (available) {\n\t\t\t\tconsole.log(\"Supported.\");\n\t\t\t\twebauthn_supported = true;\n\t\t\t} else {\n\t\t\t\tconsole.log(\"WebAuthn supported, Platform Authenticator not supported.\");\n\t\t\t}\n\t\t})\n\t\t.catch((err) => console.log(\"Something went wrong.\"));\n\t} else {\n\t\tconsole.log(\"Not supported.\");\n\t}\n}\n\n// Display the form for the 2fa email or authenticator code\nfunction showTwoFaFields(methods){\n\tif(methods.includes('email')){\n\t\trequestEmailCode();\n\t}\n\n\t//show 2fa fields\n\tfor(var x=0; x<methods.length; x++){\n\t\tif(methods[x] == 'webauthn'){\n\t\t\t//do not show webauthn\n\t\t\tcontinue;\n\t\t}\n\t\tvar wrapper\t= document.getElementById(methods[x]+'_wrapper');\n\t\tif(wrapper != null){\n\t\t\twrapper.classList.remove('hidden');\n\t\t\twrapper.querySelectorAll('input').forEach(el=>window.setTimeout(() => el.focus(), 0));\n\t\t}\n\t}\n\n\t//enable login button\n\tdocument.querySelector(\"#login_button\").disabled\t\t\t= '';\n\t//show login button\n\tdocument.querySelector('#submit_login_wrapper').classList.remove('hidden');\n}\n\nfunction addMethods(result){\n\tdocument.querySelector('#check_cred_wrapper .loadergif').classList.add('hidden');\n\t\n\tif(typeof(result) == 'string' && result != false){\n\t\t//hide login form\n\t\tdocument.querySelectorAll(\"#usercred_wrapper, #login_nav\").forEach(el=>el.classList.add('hidden'));\n\n\t\tdocument.getElementById('logging_in_wrapper').classList.remove('hidden');\n\n\t\tif(location.href != result){\n\t\t\t//redirect to the returned webpage\n\t\t\tlocation.href\t= result;\n\t\t}else{\n\t\t\t//close login modal\n\t\t\thide_modals();\n\t\t}\n\t}else if(result == false){\n\t\t//incorrect creds add message, but only once\n\t\tshowMessage('Invalid username or password!');\n\t}else if(typeof(result) == 'object'){\n\t\t//hide cred fields\n\t\tdocument.querySelectorAll(\"#usercred_wrapper, #login_nav\").forEach(el=>el.classList.add('hidden'));\n\n\t\t//hide messsages\n\t\tshowMessage('');\n\n\t\tif(result.find(element => element == 'webauthn')){\n\t\t\tif(webauthn_supported){\n\t\t\t\t//correct creds and webauthn enabled\n\t\t\t\tverifyWebauthn(result);\n\t\t\t}else if(result.length == 1){\n\t\t\t\tshowMessage('You do not have a valid second login method for this device, please add one.');\n\t\t\t\trequestLogin();\n\t\t\t}else{\n\t\t\t\tshowTwoFaFields(result);\n\t\t\t}\n\t\t}else{\n\t\t\t//correct creds and 2fa enabled\n\t\t\tshowTwoFaFields(result);\n\t\t}\n\t}else{\n\t\t//something went wrong, reload the page\n\t\tlocation.reload();\n\t}\n}\n\ndocument.addEventListener('keypress', function (e) {\n    if (e.key === 'Enter'){\n\t\tif(!document.querySelector(\"#usercred_wrapper\").classList.contains('hidden')) {\n\t\t\tverifyCreds(e);\n\t\t}else if(!document.querySelector(\"#submit_login_wrapper\").classList.contains('hidden')){\n\t\t\trequestLogin();\n\t\t}\n\t}\n});\n\nfunction toggle_pwd_view(ev){\n\tif(ev.target.tagName == 'IMG'){\n\t\tvar target\t= ev.target.parentNode;\n\t}else{\n\t\tvar target\t= ev.target;\n\t}\n\n\tif(target.dataset.toggle == '0'){\n\t\ttarget.title\t\t\t\t\t\t\t\t= 'Hide password';\n\t\ttarget.dataset.toggle\t\t\t\t\t\t= '1';\n\t\ttarget.innerHTML\t\t\t\t\t\t\t= target.innerHTML.replace('invisible', 'visible');\n\t\tdocument.getElementById('password').type\t= 'text';\n\t}else{\n\t\ttarget.title\t\t\t\t\t\t\t\t= 'Show password';\n\t\ttarget.dataset.toggle\t\t\t\t\t\t= '0';\n\t\ttarget.innerHTML\t\t\t\t\t\t\t= target.innerHTML.replace('visible', 'invisible');\n\t\tdocument.getElementById('password').type\t= 'password';\n\t}\n};\n\n// Show the modal with the login form\nfunction openLoginModal(){\n\t// Allready load the captcha for password reset so it is available when we need it\n\twaitForCaptcha();\n\n\t// Make sure the menu is closed\n\tcloseMobileMenu();\n\n\t//prevent page scrolling\n\tdocument.querySelector('body').style.overflowY = 'hidden';\n\n\tvar modal\t= document.getElementById('login_modal');\n\n\t//reset form\n\tmodal.querySelectorAll('form > div:not(.hidden)').forEach(el=>el.classList.add('hidden'));\n\tmodal.querySelector('#usercred_wrapper').classList.remove('hidden');\n\n\tmodal.classList.remove('hidden');\n\n\twindow.setTimeout(() => modal.querySelector('#username').focus(), 0);\n}\n\nvar observer = new MutationObserver(function(mutations) {\n\tmutations.forEach(function(mutation) {\n\t\tif (mutation.attributeName === \"data-hcaptcha-response\" && document.querySelector('.h-captcha iframe').dataset.hcaptchaResponse.length > 1000) {\n\t\t\treset_password(document.querySelector('#login_nav>a'));\n\t\t}\n\t});\n});\n\nfunction waitForCaptcha(){\n\tsetTimeout(function() {\n\t\tvar iframe\t= document.querySelector('.h-captcha iframe');\n\t\tif(iframe\t== null){\n\t\t\twaitForCaptcha();\n\t\t}else{\n\t\t\tobserver.observe(iframe, {\n\t\t\t\tattributes: true\n\t\t\t});\n\t\t}\n\t}, 1000);\n}\n\n//check if the current browser supports webauthn\ncheckWebauthnAvailable();\n\ndocument.addEventListener(\"click\", function(event){\n\tvar target = event.target;\n\n\tif(target.id == 'login' || target.parentNode.id == 'login'){\n\t\t// Show modal with login form\n\t\topenLoginModal();\n\t}else if(target.id == 'check_cred'){\n\t\t// Check if a valid username and password is submitted\n\t\tverifyCreds();\n\t}else if(target.id == \"login_button\"){\n\t\t// Submit the login form when averything is ok\n\t\trequestLogin();\n\t}else if(target.id == 'toggle_pwd_view' || target.parentNode.id == 'toggle_pwd_view'){\n\t\ttoggle_pwd_view(event);\n\t}else if(target.id == \"lost_pwd_link\"){\n\t\treset_password(target);\n\t}else if(target.id == 'retry_webauthn'){\n\t\tshowMessage('');\n\t\tverifyWebauthn([]);\n\t}\n});\n\n//prevent zoom in on login form on a iphone\nconst addMaximumScaleToMetaViewport = () => {\n\tconst el = document.querySelector('meta[name=viewport]');\n  \n\tif (el !== null) {\n\t  let content = el.getAttribute('content');\n\t  let re = /maximum\\-scale=[0-9\\.]+/g;\n  \n\t  if (re.test(content)) {\n\t\t  content = content.replace(re, 'maximum-scale=1.0');\n\t  } else {\n\t\t  content = [content, 'maximum-scale=1.0'].join(', ')\n\t  }\n  \n\t  el.setAttribute('content', content);\n\t}\n};\n\nconst checkIsIOS = () =>/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream;\n\nif (checkIsIOS()) {\n\taddMaximumScaleToMetaViewport();\n}"],"names":["async","fetchRestApi","url","formdata","append","sim","restnonce","result","fetch","base_url","method","credentials","body","response","json","error","console","ok","display_message","message","base64UrlDecode","input","pad","replace","length","Error","Array","join","window","atob","arrayToBase64String","a","btoa","String","fromCharCode","requestLogin","document","querySelectorAll","forEach","el","classList","add","getElementById","remove","form","formData","FormData","required","reportValidity","waitForInternet","querySelector","textContent","location","reload","href","verifyWebauthn","methods","username","value","publicKey","challenge","Uint8Array","from","c","charCodeAt","undefined","user","id","excludeCredentials","map","data","allowCredentials","preparePublicKeyOptions","navigator","get","publicKeyCredential","type","rawId","clientDataJSON","attestationObject","authenticatorData","signature","userHandle","preparePublicKeyCredentials","JSON","stringify","showMessage","showTwoFaFields","verifyCreds","password","hide_modals","find","element","webauthn_supported","e","text","reset_password","target","captcha","previousElementSibling","contains","loader","showLoader","closest","ajax_url","innerHTML","log","includes","loading_gif","requestEmailCode","x","wrapper","setTimeout","focus","disabled","openLoginModal","waitForCaptcha","ariaExpanded","style","overflowY","modal","addEventListener","key","observer","MutationObserver","mutations","mutation","attributeName","dataset","hcaptchaResponse","iframe","observe","attributes","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","then","available","catch","err","event","parentNode","ev","tagName","toggle","title","toggle_pwd_view","test","userAgent","MSStream","content","getAttribute","re","setAttribute","addMaximumScaleToMetaViewport"],"sourceRoot":""}