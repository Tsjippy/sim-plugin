{"version":3,"file":"2fa.min.js","mappings":"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","sources":["webpack://login/./shared.js","webpack://login/./2fa.js"],"sourcesContent":["export function closeMobileMenu(){\n\t//close mobile menu\n\tdocument.querySelectorAll('#site-navigation, #mobile-menu-control-wrapper').forEach(el=>el.classList.remove('toggled'));\n\tdocument.querySelector('body').classList.remove('mobile-menu-open');\n\tdocument.querySelector(\"#mobile-menu-control-wrapper > button\").ariaExpanded = 'false';\n}\n\n// get response from rest api server\nexport async function fetchRestApi(url, formData){\n\tformData.append('_wpnonce', sim.restNonce);\n\n\tvar result = await fetch(\n\t\tsim.baseUrl+'/wp-json/sim/v1/login/'+url,\n\t\t{\n\t\t\tmethod: 'POST',\n\t\t\tcredentials: 'same-origin',\n\t\t\tbody: formData\n\t\t}\n\t);\n\n\ttry{\n\t\tvar response\t= await result.json();\n\t}catch (error){\n\t\tconsole.error(error);\n\t\treturn false;\n\t}\n\n\tif(result.ok){\n\t\treturn response;\n\t}else if(response.code == 'rest_cookie_invalid_nonce'){\n\t\t\tMain.displayMessage('Please refresh the page and try again!', 'error');\n\t\t\treturn false;\n\t}else{\n\t\tconsole.error(response);\n\t\tMain.displayMessage(response.message, 'error');\n\t\treturn false;\n\t};\n}\n\n// Decodes a Base64Url string\nconst base64UrlDecode = (input) => {\ninput = input\n\t.replace(/-/g, '+')\n\t.replace(/_/g, '/');\n\nconst pad = input.length % 4;\nif (pad) {\n\tif (pad === 1) {\n\tthrow new Error('InvalidLengthError: Input base64url string is the wrong length to determine padding');\n\t}\n\tinput += new Array(5-pad).join('=');\n}\n\nreturn window.atob(input);\n};\n\n// Converts an array of bytes into a Base64Url string\nconst arrayToBase64String = (a) => btoa(String.fromCharCode(...a));\n\n// Prepares the public key options object returned by the Webauthn Framework\nexport const preparePublicKeyOptions = publicKey => {\n\t//Convert challenge from Base64Url string to Uint8Array\n\tpublicKey.challenge = Uint8Array.from(\n\t\tbase64UrlDecode(publicKey.challenge),\n\t\tc => c.charCodeAt(0)\n\t);\n\n\t//Convert the user ID from Base64 string to Uint8Array\n\tif (publicKey.user !== undefined) {\n\t\tpublicKey.user = {\n\t\t...publicKey.user,\n\t\tid: Uint8Array.from(\n\t\t\twindow.atob(publicKey.user.id),\n\t\t\tc => c.charCodeAt(0)\n\t\t),\n\t\t};\n\t}\n\n\t//If excludeCredentials is defined, we convert all IDs to Uint8Array\n\tif (publicKey.excludeCredentials !== undefined) {\n\t\tpublicKey.excludeCredentials = publicKey.excludeCredentials.map(\n\t\t\tdata => {\n\t\t\treturn {\n\t\t\t\t...data,\n\t\t\t\tid: Uint8Array.from(\n\t\t\t\t\tbase64UrlDecode(data.id),\n\t\t\t\t\tc => c.charCodeAt(0)\n\t\t\t\t),\n\t\t\t};\n\t\t\t}\n\t\t);\n\t}\n\n\tif (publicKey.allowCredentials !== undefined) {\n\t\tpublicKey.allowCredentials = publicKey.allowCredentials.map(\n\t\t\tdata => {\n\t\t\treturn {\n\t\t\t\t...data,\n\t\t\t\tid: Uint8Array.from(\n\t\t\t\t\tbase64UrlDecode(data.id),\n\t\t\t\t\tc => c.charCodeAt(0)\n\t\t\t\t),\n\t\t\t};\n\t\t\t}\n\t\t);\n\t}\n\n\treturn publicKey;\n};\n\n// Prepares the public key credentials object returned by the authenticator\nexport const preparePublicKeyCredentials = data => {\n\tconst publicKeyCredential = {\n\t\tid: data.id,\n\t\ttype: data.type,\n\t\trawId: arrayToBase64String(new Uint8Array(data.rawId)),\n\t\tresponse: {\n\t\tclientDataJSON: arrayToBase64String(\n\t\t\tnew Uint8Array(data.response.clientDataJSON)\n\t\t),\n\t\t},\n\t};\n\n\tif (data.response.attestationObject !== undefined) {\n\t\tpublicKeyCredential.response.attestationObject = arrayToBase64String(\n\t\t\tnew Uint8Array(data.response.attestationObject)\n\t\t);\n\t}\n\n\tif (data.response.authenticatorData !== undefined) {\n\t\tpublicKeyCredential.response.authenticatorData = arrayToBase64String(\n\t\t\tnew Uint8Array(data.response.authenticatorData)\n\t\t);\n\t}\n\n\tif (data.response.signature !== undefined) {\n\t\tpublicKeyCredential.response.signature = arrayToBase64String(\n\t\t\tnew Uint8Array(data.response.signature)\n\t\t);\n\t}\n\n\tif (data.response.userHandle !== undefined) {\n\t\tpublicKeyCredential.response.userHandle = arrayToBase64String(\n\t\t\tnew Uint8Array(data.response.userHandle)\n\t\t);\n\t}\n\n\treturn publicKeyCredential;\n};","// Import the registration hook\nimport {\n    preparePublicKeyCredentials,\n    preparePublicKeyOptions,\n\tfetchRestApi\n} from './shared.js';\n\nasync function saveTwofaSettings(target){\n\t// Show loader\n\tvar loader\t= target.closest('.submit_wrapper').querySelector('.loadergif');\n\tloader.classList.remove('hidden');\n\n\tvar form\t\t= target.closest('form');\n\n\tform.querySelectorAll('.hidden [required], select[required]').forEach(el=>{el.required = false});\n\n\tvar validity\t= form.reportValidity();\n\n\tif(validity){\n\t\tvar formData\t= new FormData(form);\n\t\tvar response \t= await fetchRestApi('save_2fa_settings', formData);\n\n\t\tif(response){\n\t\t\tform.querySelectorAll('[id^=\"setup-\"]:not(.hidden)').forEach(el=>el.classList.add('hidden'));\n\n\t\t\tMain.displayMessage(response, 'success');\n\n\t\t\t//Show submit button\n\t\t\ttarget.closest('form').querySelector('.form_submit').classList.add('hidden');\n\t\t}\n\t}\n\n\tloader.classList.add('hidden');\n}\n\nfunction checkWebauthnAvailable(){\n\tif (window.PublicKeyCredential) {\n\t\tPublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then((available) => {\n\t\t\tif (available) {\n\t\t\t\tconsole.log(\"Supported.\");\n\t\t\t\tdocument.getElementById('webauthn_wrapper').classList.remove('hidden');\n\t\t\t} else {\n\t\t\t\tconsole.log(\"WebAuthn supported, Platform Authenticator not supported.\");\n\t\t\t}\n\t\t})\n\t\t.catch((err) => {\n\t\t\tconsole.error(\"Something went wrong.\");\n\t\t\tconsole.error(err);\n\t\t});\n\t} else {\n\t\tconsole.log(\"Not supported.\");\n\t}\n}\n\nfunction showTwofaSetup(target) {\n\t//hide all options\n\tdocument.querySelectorAll('.twofa_option').forEach(el=>el.classList.add('hidden'));\n\n\t// Show setup for this method\n\tvar wrapper\t= document.getElementById('setup-'+target.value);\n\twrapper.classList.remove('hidden');\n\n\tif (Main.isMobileDevice()){\n\t\twrapper.querySelectorAll('.mobile.hidden').forEach(el=>el.classList.remove('hidden'));\n\t}else{\n\t\twrapper.querySelectorAll('.desktop.hidden').forEach(el=>el.classList.remove('hidden'));\n\t}\n\n\tif(target.value == 'authenticator'){\n\t\t//Show submit button\n\t\ttarget.closest('form').querySelector('.form_submit').classList.remove('hidden');\n\t}\n}\n\nasync function removeWebAuthenticator(target){\n\tvar table   = target.closest('table');\n\tvar row     = target.closest('tr');\n\n\tvar formData\t= new FormData();\n\tformData.append('key',target.dataset.key);\n\n\tMain.showLoader(target, true);\n\n\tvar response \t= await fetchRestApi('remove_web_authenticator', formData);\n\n\tif(response){\n\t\tif(table.rows.length==2){\n\t\t\ttable.remove();\n\t\t}else{\n\t\t\trow.remove();\n\t\t}\n\n\t\tMain.displayMessage(response);\n\t}\n}\n\n//Start registration with button click\nasync function registerBiometric(target){\n    var identifier  = target.closest('#webauthn_wrapper').querySelector('[name=\"identifier\"]').value;\n    if(identifier == ''){\n\t\tMain.displayMessage('Please specify a device name', 'error');\n      return;\n    }\n\n    //show loader\n    document.getElementById('add_webauthn').classList.add('hidden');\n    var loaderHtml = `<div id=\"loader_wrapper\" style='margin-bottom:20px;'><span class=\"message\"></span><img class=\"loadergif\" src=\"${sim.loadingGif}\" height=\"30px;\"></div>`;\n    document.getElementById('add_webauthn').insertAdjacentHTML('afterEnd', loaderHtml);\n\tvar message\t\t= document.querySelector('#loader_wrapper .message');\n\n\ttry{\n\t\t// Get biometric challenge\n\t\tvar formData\t\t\t= new FormData();\n\t\tformData.append('identifier', identifier);\n\t\tvar response\t\t\t= await fetchRestApi('fingerprint_options', formData);\n\t\tif(!response){\n\t\t\tthrow new Error('Options retrieval failed');\n\t\t}\n\t\tvar publicKey \t\t\t= preparePublicKeyOptions(response);\n\n\t\t// Update the message\n\t\tmessage.textContent  \t= 'Please authenticate...';\n\n\t\t// Ask user to verify\n\t\tvar credentials \t\t= await navigator.credentials.create({publicKey});\n\n\t\t// Update the message\n\t\tmessage.textContent  \t= 'Saving authenticator...';\n\n\t\t// Store result\n\t\tvar publicKeyCredential = preparePublicKeyCredentials(credentials);\n\t\t\n\t\tformData\t\t\t= new FormData();\n\t\tformData.append('publicKeyCredential', JSON.stringify(publicKeyCredential));\n\t\tresponse\t\t\t= await fetchRestApi('store_fingerprint', formData);\n\t\tif(!response){\n\t\t\tthrow new Error('Storing biometric failed');\n\t\t}\n\n\t\tvar wrapper \t\t\t= document.getElementById('webautn_devices_wrapper');\n\t\tif(wrapper == null){\n\t\t\t//add authenthn table\n\t\t\tdocument.getElementById('webauthn_wrapper').insertAdjacentHTML('beforeEnd', response);\n\t\t}else{\n\t\t\t//update authenthn table\n\t\t\twrapper.outerHTML = response;\n\t\t}\n  \n\t\t//labels for use\n\t\tSimTableFunctions.setTableLabel();\n  \n\t\tMain.displayMessage('Registration success');\n\t}catch(error){\n\t\tdocument.getElementById('add_webauthn').classList.remove('hidden');\n\t\tconsole.error(error);\n\t}\n\n    document.querySelector('#loader_wrapper').remove();\n}\n\nasync function sendValidationEmail(target){\n\t// Request email code for 2fa login setup\n\tvar loader\t\t\t\t= `<img id='loader' src='${sim.loadingGif}' style='height:30px;margin-top:-6px;float:right;'>`;\n\n\tdocument.getElementById('email-message').innerHTML\t= `Sending e-mail... ${loader}`;\n\n\tvar username\t= document.getElementById('username').value;\n\tvar formData\t= new FormData();\n\tformData.append('username', username);\n\n\tvar response\t= await fetchRestApi('request_email_code', formData);\n\n\tif(response){\n\t\tdocument.getElementById('email-message').innerHTML\t= response;\n\t\tdocument.getElementById('email-message').classList.add('success');\n\n\t\tdocument.getElementById('email-code-validation').classList.remove('hidden');\n\n\t\ttarget.classList.add('hidden');\n\n\t\t//Show submit button\n\t\ttarget.closest('form').querySelector('.form_submit').classList.remove('hidden');\n\n\t\tdocument.getElementById('email-code-validation').focus();\n\t}\n}\n\ndocument.addEventListener(\"DOMContentLoaded\",function() {\n\tconsole.log(\"2fa.js loaded\");\n\n\t//hide the webauthn table if not possible\n\tvar el = document.getElementById('webauthn_wrapper');\n\tif(el != null){\n\t\tcheckWebauthnAvailable();\n\t}\t\n});\n\ndocument.addEventListener('click', ev =>{\n\tvar target = ev.target;\n\n\tif(target.name == '2fa_methods[]'){\n\t\tshowTwofaSetup(target);\n\t}\n\n\tif(target.matches('.remove_webauthn')){\n\t\tremoveWebAuthenticator(target);\n\t}\n\t\n\tif(target.id == 'add_fingerprint'){\n\t\tregisterBiometric(target);\n\t}\n\n\tif(target.name == 'save2fa'){\n\t\tsaveTwofaSettings(target);\n\t}\n\n\tif(target.id == 'email-code-button'){\n\t\tsendValidationEmail(target);\n\t}\n})"],"names":["async","fetchRestApi","url","formData","append","sim","restNonce","result","fetch","baseUrl","method","credentials","body","response","json","error","console","ok","code","Main","displayMessage","message","base64UrlDecode","input","pad","replace","length","Error","Array","join","window","atob","arrayToBase64String","a","btoa","String","fromCharCode","document","addEventListener","log","getElementById","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","then","available","classList","remove","catch","err","ev","target","name","querySelectorAll","forEach","el","add","wrapper","value","isMobileDevice","closest","querySelector","showTwofaSetup","matches","table","row","FormData","dataset","key","showLoader","rows","removeWebAuthenticator","id","identifier","loaderHtml","loadingGif","insertAdjacentHTML","publicKey","challenge","Uint8Array","from","c","charCodeAt","undefined","user","excludeCredentials","map","data","allowCredentials","preparePublicKeyOptions","textContent","navigator","create","publicKeyCredential","type","rawId","clientDataJSON","attestationObject","authenticatorData","signature","userHandle","preparePublicKeyCredentials","JSON","stringify","outerHTML","SimTableFunctions","setTableLabel","registerBiometric","loader","form","required","reportValidity","saveTwofaSettings","innerHTML","username","focus","sendValidationEmail"],"sourceRoot":""}