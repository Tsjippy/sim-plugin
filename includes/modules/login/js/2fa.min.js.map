{"version":3,"file":"2fa.min.js","mappings":"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","sources":["webpack://login/./shared.js","webpack://login/./2fa.js"],"sourcesContent":["export function closeMobileMenu(){\r\n\t//close mobile menu\r\n\tdocument.querySelectorAll('#site-navigation, #mobile-menu-control-wrapper').forEach(el=>el.classList.remove('toggled'));\r\n\tdocument.querySelector('body').classList.remove('mobile-menu-open');\r\n\tdocument.querySelector(\"#mobile-menu-control-wrapper > button\").ariaExpanded = 'false';\r\n}\r\n\r\n// get response from rest api server\r\nexport async function fetchRestApi(url, formdata){\r\n\tformdata.append('_wpnonce', sim.restnonce);\r\n\r\n\tvar result = await fetch(\r\n\t\tsim.base_url+'/wp-json/sim/v1/login/'+url,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t\tbody: formdata\r\n\t\t}\r\n\t);\r\n\r\n\ttry{\r\n\t\tvar response\t= await result.json();\r\n\t}catch (error){\r\n\t\tconsole.error(error);\r\n\t\t//display_message(response.message, 'error');\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif(result.ok){\r\n\t\treturn response;\r\n\t}else{\r\n\t\tconsole.error(response);\r\n\t\tdisplay_message(response.message, 'error');\r\n\t\treturn false;\r\n\t};\r\n}\r\n\r\n// Predefined fetch function\r\nexport const fetchEndpoint = (data, url, header) => {\r\n\treturn fetch(\r\n\t\turl,\r\n\t\t{\r\n\t\t  method: 'POST',\r\n\t\t  credentials: 'same-origin',\r\n\t\t  redirect: 'error',\r\n\t\t  headers: {\r\n\t\t\t'Content-Type': 'application/json',\r\n\t\t\t'Accept': 'application/json',\r\n\t\t\t...header\r\n\t\t  },\r\n\t\t  body: JSON.stringify(data),\r\n\t\t}\r\n\t);\r\n} \r\n\r\n// Decodes a Base64Url string\r\nconst base64UrlDecode = (input) => {\r\ninput = input\r\n\t.replace(/-/g, '+')\r\n\t.replace(/_/g, '/');\r\n\r\nconst pad = input.length % 4;\r\nif (pad) {\r\n\tif (pad === 1) {\r\n\tthrow new Error('InvalidLengthError: Input base64url string is the wrong length to determine padding');\r\n\t}\r\n\tinput += new Array(5-pad).join('=');\r\n}\r\n\r\nreturn window.atob(input);\r\n};\r\n\r\n// Converts an array of bytes into a Base64Url string\r\nconst arrayToBase64String = (a) => btoa(String.fromCharCode(...a));\r\n\r\n// Prepares the public key options object returned by the Webauthn Framework\r\nexport const preparePublicKeyOptions = publicKey => {\r\n\t//Convert challenge from Base64Url string to Uint8Array\r\n\tpublicKey.challenge = Uint8Array.from(\r\n\t\tbase64UrlDecode(publicKey.challenge),\r\n\t\tc => c.charCodeAt(0)\r\n\t);\r\n\r\n\t//Convert the user ID from Base64 string to Uint8Array\r\n\tif (publicKey.user !== undefined) {\r\n\t\tpublicKey.user = {\r\n\t\t...publicKey.user,\r\n\t\tid: Uint8Array.from(\r\n\t\t\twindow.atob(publicKey.user.id),\r\n\t\t\tc => c.charCodeAt(0)\r\n\t\t),\r\n\t\t};\r\n\t}\r\n\r\n\t//If excludeCredentials is defined, we convert all IDs to Uint8Array\r\n\tif (publicKey.excludeCredentials !== undefined) {\r\n\t\tpublicKey.excludeCredentials = publicKey.excludeCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tif (publicKey.allowCredentials !== undefined) {\r\n\t\tpublicKey.allowCredentials = publicKey.allowCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKey;\r\n};\r\n\r\n// Prepares the public key credentials object returned by the authenticator\r\nexport const preparePublicKeyCredentials = data => {\r\n\tconst publicKeyCredential = {\r\n\t\tid: data.id,\r\n\t\ttype: data.type,\r\n\t\trawId: arrayToBase64String(new Uint8Array(data.rawId)),\r\n\t\tresponse: {\r\n\t\tclientDataJSON: arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.clientDataJSON)\r\n\t\t),\r\n\t\t},\r\n\t};\r\n\r\n\tif (data.response.attestationObject !== undefined) {\r\n\t\tpublicKeyCredential.response.attestationObject = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.attestationObject)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.authenticatorData !== undefined) {\r\n\t\tpublicKeyCredential.response.authenticatorData = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.authenticatorData)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.signature !== undefined) {\r\n\t\tpublicKeyCredential.response.signature = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.signature)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.userHandle !== undefined) {\r\n\t\tpublicKeyCredential.response.userHandle = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.userHandle)\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKeyCredential;\r\n};\r\n  ","// Import the registration hook\r\nimport {\r\n    fetchEndpoint,\r\n    preparePublicKeyCredentials,\r\n    preparePublicKeyOptions,\r\n\tfetchRestApi\r\n} from './shared.js';\r\n\r\nasync function saveTwofaSettings(target){\r\n\t// Show loader\r\n\tvar loader\t= target.closest('.submit_wrapper').querySelector('.loadergif');\r\n\tloader.classList.remove('hidden');\r\n\r\n\tvar form\t\t= target.closest('form');\r\n\tvar formdata\t= new FormData(form);\r\n\tvar response \t= await fetchRestApi('save_2fa_settings', formdata);\r\n\r\n\tif(response){\r\n\t\tform.querySelectorAll('[id^=\"setup-\"]:not(.hidden)').forEach(el=>el.classList.add('hidden'));\r\n\r\n\t\tdisplay_message(response);\r\n\t}\r\n\r\n\tloader.classList.add('hidden');\r\n}\r\n\r\nfunction checkWebauthnAvailable(){\r\n\tif (window.PublicKeyCredential) {\r\n\t\tPublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then((available) => {\r\n\t\t\tif (available) {\r\n\t\t\t\tconsole.log(\"Supported.\");\r\n\t\t\t\tdocument.getElementById('webauthn_wrapper').classList.remove('hidden');\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"WebAuthn supported, Platform Authenticator not supported.\");\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => console.log(\"Something went wrong.\"));\r\n\t} else {\r\n\t\tconsole.log(\"Not supported.\");\r\n\t}\r\n}\r\n\r\nfunction showTwofaSetup(target) {\r\n\t//hide all options\r\n\tdocument.querySelectorAll('.twofa_option').forEach(el=>el.classList.add('hidden'));\r\n\r\n\t// Show setup for this method\r\n\tvar wrapper\t= document.getElementById('setup-'+target.value);\r\n\twrapper.classList.remove('hidden');\r\n\r\n\tif (isMobileDevice()){\r\n\t\twrapper.querySelectorAll('.mobile.hidden').forEach(el=>el.classList.remove('hidden'));\r\n\t}else{\r\n\t\twrapper.querySelectorAll('.desktop.hidden').forEach(el=>el.classList.remove('hidden'));\r\n\t}\r\n\r\n\t//Show submit button\r\n\ttarget.closest('form').querySelector('.form_submit').classList.remove('hidden');\r\n}\r\n\r\nasync function removeWebAuthenticator(target){\r\n\tvar table   = target.closest('table');\r\n\tvar row     = target.closest('tr');\r\n\r\n\tvar formdata\t= new FormData();\r\n\tformdata.append('key',target.dataset.key);\r\n\tformdata.append('_wpnonce', sim.restnonce);\r\n\r\n\tshowLoader(target, true);\r\n\r\n\tvar result = await fetch(\r\n\t\tsim.base_url+'/wp-json/sim/v1/login/remove_web_authenticator',\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t\tbody: formdata\r\n\t\t}\r\n\t);\r\n\r\n\tvar response\t= await result.json();\r\n\r\n\tif(result.ok){\r\n\t\tif(table.rows.length==2){\r\n\t\t\ttable.remove();\r\n\t\t}else{\r\n\t\t\trow.remove();\r\n\t\t}\r\n\r\n\t\tdisplay_message(response);\r\n\t}else{\r\n\t\tconsole.error(response);\r\n\t\tdisplay_message(response.message, 'error');\r\n\t};\r\n}\r\n\r\n//Start registration with button click\r\nasync function registerBiometric(target){\r\n    var identifier  = target.closest('#webauthn_wrapper').querySelector('[name=\"identifier\"]').value;\r\n    if(identifier == ''){\r\n      display_message('Please specify a device name', 'error');\r\n      return;\r\n    }\r\n\r\n    //show loader\r\n    document.getElementById('add_webauthn').classList.add('hidden');\r\n    var loader_html = `<div id=\"loader_wrapper\" style='margin-bottom:20px;'><span class=\"message\"></span><img class=\"loadergif\" src=\"${sim.loading_gif}\" height=\"30px;\"></div>`;\r\n    document.getElementById('add_webauthn').insertAdjacentHTML('afterEnd',loader_html);\r\n\tvar message\t\t= document.querySelector('#loader_wrapper .message');\r\n\r\n\ttry{\r\n\t\t// Get biometric challenge\r\n\t\tvar formData\t\t\t= new FormData();\r\n\t\tformData.append('identifier', identifier);\r\n\t\tvar response\t\t\t= await fetchRestApi('fingerprint_options', formData);\r\n\t\tif(!response){\r\n\t\t\tthrow 'Options retrieval failed';\r\n\t\t}\r\n\t\tvar publicKey \t\t\t= preparePublicKeyOptions(response);\r\n\r\n\t\t// Update the message\r\n\t\tmessage.textContent  \t= 'Please authenticate...';\r\n\r\n\t\t// Ask user to verify\r\n\t\tvar credentials \t\t= await navigator.credentials.create({publicKey});\r\n\r\n\t\t// Update the message\r\n\t\tmessage.textContent  \t= 'Saving authenticator...';\r\n\r\n\t\t// Store result\r\n\t\tvar publicKeyCredential = preparePublicKeyCredentials(credentials);\r\n\t\t\r\n\t\tvar formData\t\t\t= new FormData();\r\n\t\tformData.append('publicKeyCredential', JSON.stringify(publicKeyCredential));\r\n\t\tvar response\t\t\t= await fetchRestApi('store_fingerprint', formData);\r\n\t\tif(!response){\r\n\t\t\tthrow 'Storing biometric failed';\r\n\t\t}\r\n\r\n\t\tvar wrapper \t\t\t= document.getElementById('webautn_devices_wrapper');\r\n\t\tif(wrapper == null){\r\n\t\t\t//add authenthn table\r\n\t\t\tdocument.getElementById('webauthn_wrapper').insertAdjacentHTML('beforeEnd', response);\r\n\t\t}else{\r\n\t\t\t//update authenthn table\r\n\t\t\twrapper.outerHTML = response;\r\n\t\t}\r\n  \r\n\t\t//labels for use\r\n\t\tsetTableLabel();\r\n  \r\n\t\tdisplay_message('Registration success');\r\n\t}catch(error){\r\n\t\tdocument.getElementById('add_webauthn').classList.remove('hidden');\r\n\t\tconsole.error(error);\r\n\t}\r\n\r\n    document.querySelector('#loader_wrapper').remove();\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\",function() {\r\n\tconsole.log(\"2fa.js loaded\");\r\n\r\n\t//hide the webauthn table if not possible\r\n\tvar el = document.getElementById('webauthn_wrapper');\r\n\tif(el != null){\r\n\t\tcheckWebauthnAvailable();\r\n\t}\t\r\n});\r\n\r\ndocument.addEventListener('click', ev =>{\r\n\tvar target = ev.target;\r\n\r\n\tif(target.name == '2fa_methods[]'){\r\n\t\tshowTwofaSetup(target);\r\n\t}\r\n\r\n\tif(target.matches('.remove_webauthn')){\r\n\t\tremoveWebAuthenticator(target);\r\n\t}\r\n\t\r\n\tif(target.id == 'add_fingerprint'){\r\n\t\tregisterBiometric(target);\r\n\t}\r\n\r\n\tif(target.name == 'save2fa'){\r\n\t\tsaveTwofaSettings(target);\r\n\t}\r\n})"],"names":["async","fetchRestApi","url","formdata","append","sim","restnonce","result","fetch","base_url","method","credentials","body","response","json","error","console","ok","display_message","message","base64UrlDecode","input","pad","replace","length","Error","Array","join","window","atob","arrayToBase64String","a","btoa","String","fromCharCode","document","addEventListener","log","getElementById","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","then","available","classList","remove","catch","err","ev","target","name","querySelectorAll","forEach","el","add","wrapper","value","isMobileDevice","closest","querySelector","showTwofaSetup","matches","table","row","FormData","dataset","key","showLoader","rows","removeWebAuthenticator","id","identifier","loader_html","loading_gif","insertAdjacentHTML","formData","publicKey","challenge","Uint8Array","from","c","charCodeAt","undefined","user","excludeCredentials","map","data","allowCredentials","preparePublicKeyOptions","textContent","navigator","create","publicKeyCredential","type","rawId","clientDataJSON","attestationObject","authenticatorData","signature","userHandle","preparePublicKeyCredentials","JSON","stringify","outerHTML","setTableLabel","registerBiometric","loader","form","saveTwofaSettings"],"sourceRoot":""}