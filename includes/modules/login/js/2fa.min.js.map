{"version":3,"file":"2fa.min.js","mappings":"mBAQOA,eAAeC,EAAaC,EAAKC,GACvC,IAAIC,EACJD,EAASE,OAAO,WAAYC,IAAIC,WAEhC,IAAIC,QAAeC,MAClB,GAAGH,IAAII,kBAAkBJ,IAAIK,uBAAuBT,IACpD,CACCU,OAAQ,OACRC,YAAa,cACbC,KAAMX,IAIR,IACCC,QAAiBI,EAAOO,MAIzB,CAHC,MAAOC,GAEP,OADAC,QAAQD,MAAMA,IACP,CACR,CAEA,OAAGR,EAAOU,GACFd,EACkB,6BAAjBA,EAASe,MAChBC,KAAKC,eAAe,yCAA0C,UACvD,IAERJ,QAAQD,MAAMZ,GACdgB,KAAKC,eAAejB,EAASkB,QAAS,UAC/B,EAET,CAGA,MAAMC,EAAmBC,IAKzB,MAAMC,GAJND,EAAQA,EACNE,QAAQ,KAAM,KACdA,QAAQ,KAAM,MAEEC,OAAS,EAC3B,GAAIF,EAAK,CACR,GAAY,IAARA,EACJ,MAAM,IAAIG,MAAM,uFAEhBJ,GAAS,IAAIK,MAAM,EAAEJ,GAAKK,KAAK,IAChC,CAEA,OAAOC,OAAOC,KAAKR,EAAM,EAInBS,EAAuBC,GAAMC,KAAKC,OAAOC,gBAAgBH,ICiI/DI,SAASC,iBAAiB,oBAAmB,WAC5CtB,QAAQuB,IAAI,iBAIH,MADAF,SAASG,eAAe,sBA3J7BV,OAAOW,oBACVA,oBAAoBC,gDAAgDC,MAAMC,IACrEA,GACH5B,QAAQuB,IAAI,cACZF,SAASG,eAAe,oBAAoBK,UAAUC,OAAO,WAE7D9B,QAAQuB,IAAI,4DACb,IAEAQ,OAAOC,IACPhC,QAAQD,MAAM,yBACdC,QAAQD,MAAMiC,EAAI,IAGnBhC,QAAQuB,IAAI,kBAiJd,IAEAF,SAASC,iBAAiB,SAASW,IAClC,IAAIC,EAASD,EAAGC,OAEE,iBAAfA,EAAOC,MAlJX,SAAwBD,GAEvBb,SAASe,iBAAiB,iBAAiBC,SAAQC,GAAIA,EAAGT,UAAUU,IAAI,YAGxE,IAAIC,EAAUnB,SAASG,eAAe,SAASU,EAAOO,OACtDD,EAAQX,UAAUC,OAAO,UAErB3B,KAAKuC,iBACRF,EAAQJ,iBAAiB,kBAAkBC,SAAQC,GAAIA,EAAGT,UAAUC,OAAO,YAE3EU,EAAQJ,iBAAiB,mBAAmBC,SAAQC,GAAIA,EAAGT,UAAUC,OAAO,YAG1D,iBAAhBI,EAAOO,OAETP,EAAOS,QAAQ,QAAQC,cAAc,gBAAgBf,UAAUC,OAAO,SAExE,CAiIEe,CAAeX,GAGbA,EAAOY,QAAQ,qBAlInB/D,eAAsCmD,GACrC,IAAIa,EAAUb,EAAOS,QAAQ,SACzBK,EAAUd,EAAOS,QAAQ,MAEzBzD,EAAW,IAAI+D,SACnB/D,EAASE,OAAO,MAAM8C,EAAOgB,QAAQC,KAErChD,KAAKiD,WAAWlB,GAAQ,GAExB,IAAI/C,QAAkBH,EAAa,2BAA4BE,GAE5DC,IACoB,GAAnB4D,EAAMM,KAAK3C,OACbqC,EAAMjB,SAENkB,EAAIlB,SAGL3B,KAAKC,eAAejB,GAEtB,CA+GEmE,CAAuBpB,GAGR,mBAAbA,EAAOqB,IA/GXxE,eAAiCmD,GAC7B,IAAIsB,EAActB,EAAOS,QAAQ,qBAAqBC,cAAc,uBAAuBH,MAC3F,GAAiB,IAAde,EAAH,CAMAnC,SAASG,eAAe,gBAAgBK,UAAUU,IAAI,UACtD,IAAIkB,EAAa,iHAAiHpE,IAAIqE,oCACtIrC,SAASG,eAAe,gBAAgBmC,mBAAmB,WAAYF,GAC1E,IAAIpD,EAAWgB,SAASuB,cAAc,4BAEtC,IAEC,IAAI1D,EAAa,IAAI+D,SACrB/D,EAASE,OAAO,aAAcoE,GAC9B,IAAIrE,QAAmBH,EAAa,sBAAuBE,GAC3D,IAAIC,EACH,MAAM,IAAIwB,MAAM,4BAEjB,IAAIiD,EDzDiCA,KAEtCA,EAAUC,UAAYC,WAAWC,KAChCzD,EAAgBsD,EAAUC,YAC1BG,GAAKA,EAAEC,WAAW,UAIIC,IAAnBN,EAAUO,OACbP,EAAUO,KAAO,IACdP,EAAUO,KACbZ,GAAIO,WAAWC,KACdjD,OAAOC,KAAK6C,EAAUO,KAAKZ,KAC3BS,GAAKA,EAAEC,WAAW,YAMiBC,IAAjCN,EAAUQ,qBACbR,EAAUQ,mBAAqBR,EAAUQ,mBAAmBC,KAC3DC,IACO,IACHA,EACHf,GAAIO,WAAWC,KACdzD,EAAgBgE,EAAKf,KACrBS,GAAKA,EAAEC,WAAW,eAOaC,IAA/BN,EAAUW,mBACbX,EAAUW,iBAAmBX,EAAUW,iBAAiBF,KACvDC,IACO,IACHA,EACHf,GAAIO,WAAWC,KACdzD,EAAgBgE,EAAKf,KACrBS,GAAKA,EAAEC,WAAW,UAOfL,GCUaY,CAAwBrF,GAG3CkB,EAAQoE,YAAgB,yBAGxB,IAAI7E,QAAsB8E,UAAU9E,YAAY+E,OAAO,CAACf,cAGxDvD,EAAQoE,YAAgB,0BAGxB,IAAIG,EDlBqCN,KAC1C,MAAMM,EAAsB,CAC3BrB,GAAIe,EAAKf,GACTsB,KAAMP,EAAKO,KACXC,MAAO9D,EAAoB,IAAI8C,WAAWQ,EAAKQ,QAC/C3F,SAAU,CACV4F,eAAgB/D,EACf,IAAI8C,WAAWQ,EAAKnF,SAAS4F,mBA6B/B,YAxBwCb,IAApCI,EAAKnF,SAAS6F,oBACjBJ,EAAoBzF,SAAS6F,kBAAoBhE,EAChD,IAAI8C,WAAWQ,EAAKnF,SAAS6F,0BAISd,IAApCI,EAAKnF,SAAS8F,oBACjBL,EAAoBzF,SAAS8F,kBAAoBjE,EAChD,IAAI8C,WAAWQ,EAAKnF,SAAS8F,0BAICf,IAA5BI,EAAKnF,SAAS+F,YACjBN,EAAoBzF,SAAS+F,UAAYlE,EACxC,IAAI8C,WAAWQ,EAAKnF,SAAS+F,kBAIEhB,IAA7BI,EAAKnF,SAASgG,aACjBP,EAAoBzF,SAASgG,WAAanE,EACzC,IAAI8C,WAAWQ,EAAKnF,SAASgG,cAIxBP,CAAmB,EClBCQ,CAA4BxF,GAKtD,IAHAV,EAAa,IAAI+D,UACR7D,OAAO,sBAAuBiG,KAAKC,UAAUV,MACtDzF,QAAmBH,EAAa,oBAAqBE,IAEpD,MAAM,IAAIyB,MAAM,4BAGjB,IAAI6B,EAAanB,SAASG,eAAe,2BAC3B,MAAXgB,EAEFnB,SAASG,eAAe,oBAAoBmC,mBAAmB,YAAaxE,GAG5EqD,EAAQ+C,UAAYpG,EAIrBqG,kBAAkBC,gBAElBtF,KAAKC,eAAe,uBAIrB,CAHC,MAAML,GACNsB,SAASG,eAAe,gBAAgBK,UAAUC,OAAO,UACzD9B,QAAQD,MAAMA,EACf,CAEGsB,SAASuB,cAAc,mBAAmBd,QAvD1C,MAFF3B,KAAKC,eAAe,+BAAgC,QA0DtD,CAmDEsF,CAAkBxD,GAGD,WAAfA,EAAOC,MA7MXpD,eAAiCmD,GAEhC,IAAIyD,EAASzD,EAAOS,QAAQ,mBAAmBC,cAAc,cAC7D+C,EAAO9D,UAAUC,OAAO,UAExB,IAAI8D,EAAQ1D,EAAOS,QAAQ,QAM3B,GAJAiD,EAAKxD,iBAAiB,wCAAwCC,SAAQC,IAAKA,EAAGuD,UAAW,KAE1ED,EAAKE,iBAER,CACX,IAAI5G,EAAW,IAAI+D,SAAS2C,GACxBzG,QAAkBH,EAAa,oBAAqBE,GAErDC,IACFyG,EAAKxD,iBAAiB,+BAA+BC,SAAQC,GAAIA,EAAGT,UAAUU,IAAI,YAElFpC,KAAKC,eAAejB,EAAU,WAG9B+C,EAAOS,QAAQ,QAAQC,cAAc,gBAAgBf,UAAUU,IAAI,UAErE,CAEAoD,EAAO9D,UAAUU,IAAI,SACtB,CAoLEwD,CAAkB7D,GAGH,qBAAbA,EAAOqB,IAxDXxE,eAAmCmD,GAElC,IAAIyD,EAAY,yBAAyBtG,IAAIqE,gEAE7CrC,SAASG,eAAe,iBAAiBwE,UAAY,qBAAqBL,IAE1E,IAAIM,EAAW5E,SAASG,eAAe,YAAYiB,MAC/CvD,EAAW,IAAI+D,SACnB/D,EAASE,OAAO,WAAY6G,GAE5B,IAAI9G,QAAiBH,EAAa,qBAAsBE,GAErDC,IACFkC,SAASG,eAAe,iBAAiBwE,UAAY7G,EACrDkC,SAASG,eAAe,iBAAiBK,UAAUU,IAAI,WAEvDlB,SAASG,eAAe,yBAAyBK,UAAUC,OAAO,UAElEI,EAAOL,UAAUU,IAAI,UAGrBL,EAAOS,QAAQ,QAAQC,cAAc,gBAAgBf,UAAUC,OAAO,UAEtET,SAASG,eAAe,yBAAyB0E,QAEnD,CAgCEC,CAAoBjE,EACrB,G","sources":["webpack://login/./shared.js","webpack://login/./2fa.js"],"sourcesContent":["export function closeMobileMenu(){\r\n\t//close mobile menu\r\n\tdocument.querySelectorAll('#site-navigation, #mobile-menu-control-wrapper').forEach(el=>el.classList.remove('toggled'));\r\n\tdocument.querySelector('body').classList.remove('mobile-menu-open');\r\n\tdocument.querySelector(\"#mobile-menu-control-wrapper > button\").ariaExpanded = 'false';\r\n}\r\n\r\n// get response from rest api server\r\nexport async function fetchRestApi(url, formData){\r\n\tlet response;\r\n\tformData.append('_wpnonce', sim.restNonce);\r\n\r\n\tlet result = await fetch(\r\n\t\t`${sim.baseUrl}/wp-json${sim.restApiPrefix}/login/${url}`,\r\n\t\t{\r\n\t\t\tmethod: 'POST',\r\n\t\t\tcredentials: 'same-origin',\r\n\t\t\tbody: formData\r\n\t\t}\r\n\t);\r\n\r\n\ttry{\r\n\t\tresponse\t= await result.json();\r\n\t}catch (error){\r\n\t\tconsole.error(error);\r\n\t\treturn false;\r\n\t}\r\n\r\n\tif(result.ok){\r\n\t\treturn response;\r\n\t}else if(response.code == 'rest_cookie_invalid_nonce'){\r\n\t\t\tMain.displayMessage('Please refresh the page and try again!', 'error');\r\n\t\t\treturn false;\r\n\t}else{\r\n\t\tconsole.error(response);\r\n\t\tMain.displayMessage(response.message, 'error');\r\n\t\treturn false;\r\n\t}\r\n}\r\n\r\n// Decodes a Base64Url string\r\nconst base64UrlDecode = (input) => {\r\ninput = input\r\n\t.replace(/-/g, '+')\r\n\t.replace(/_/g, '/');\r\n\r\nconst pad = input.length % 4;\r\nif (pad) {\r\n\tif (pad === 1) {\r\n\tthrow new Error('InvalidLengthError: Input base64url string is the wrong length to determine padding');\r\n\t}\r\n\tinput += new Array(5-pad).join('=');\r\n}\r\n\r\nreturn window.atob(input);\r\n};\r\n\r\n// Converts an array of bytes into a Base64Url string\r\nconst arrayToBase64String = (a) => btoa(String.fromCharCode(...a));\r\n\r\n// Prepares the public key options object returned by the Webauthn Framework\r\nexport const preparePublicKeyOptions = publicKey => {\r\n\t//Convert challenge from Base64Url string to Uint8Array\r\n\tpublicKey.challenge = Uint8Array.from(\r\n\t\tbase64UrlDecode(publicKey.challenge),\r\n\t\tc => c.charCodeAt(0)\r\n\t);\r\n\r\n\t//Convert the user ID from Base64 string to Uint8Array\r\n\tif (publicKey.user !== undefined) {\r\n\t\tpublicKey.user = {\r\n\t\t...publicKey.user,\r\n\t\tid: Uint8Array.from(\r\n\t\t\twindow.atob(publicKey.user.id),\r\n\t\t\tc => c.charCodeAt(0)\r\n\t\t),\r\n\t\t};\r\n\t}\r\n\r\n\t//If excludeCredentials is defined, we convert all IDs to Uint8Array\r\n\tif (publicKey.excludeCredentials !== undefined) {\r\n\t\tpublicKey.excludeCredentials = publicKey.excludeCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tif (publicKey.allowCredentials !== undefined) {\r\n\t\tpublicKey.allowCredentials = publicKey.allowCredentials.map(\r\n\t\t\tdata => {\r\n\t\t\treturn {\r\n\t\t\t\t...data,\r\n\t\t\t\tid: Uint8Array.from(\r\n\t\t\t\t\tbase64UrlDecode(data.id),\r\n\t\t\t\t\tc => c.charCodeAt(0)\r\n\t\t\t\t),\r\n\t\t\t};\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKey;\r\n};\r\n\r\n// Prepares the public key credentials object returned by the authenticator\r\nexport const preparePublicKeyCredentials = data => {\r\n\tconst publicKeyCredential = {\r\n\t\tid: data.id,\r\n\t\ttype: data.type,\r\n\t\trawId: arrayToBase64String(new Uint8Array(data.rawId)),\r\n\t\tresponse: {\r\n\t\tclientDataJSON: arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.clientDataJSON)\r\n\t\t),\r\n\t\t},\r\n\t};\r\n\r\n\tif (data.response.attestationObject !== undefined) {\r\n\t\tpublicKeyCredential.response.attestationObject = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.attestationObject)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.authenticatorData !== undefined) {\r\n\t\tpublicKeyCredential.response.authenticatorData = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.authenticatorData)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.signature !== undefined) {\r\n\t\tpublicKeyCredential.response.signature = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.signature)\r\n\t\t);\r\n\t}\r\n\r\n\tif (data.response.userHandle !== undefined) {\r\n\t\tpublicKeyCredential.response.userHandle = arrayToBase64String(\r\n\t\t\tnew Uint8Array(data.response.userHandle)\r\n\t\t);\r\n\t}\r\n\r\n\treturn publicKeyCredential;\r\n};","// Import the registration hook\r\nimport {\r\n    preparePublicKeyCredentials,\r\n    preparePublicKeyOptions,\r\n\tfetchRestApi\r\n} from './shared.js';\r\n\r\nasync function saveTwofaSettings(target){\r\n\t// Show loader\r\n\tvar loader\t= target.closest('.submit_wrapper').querySelector('.loadergif');\r\n\tloader.classList.remove('hidden');\r\n\r\n\tvar form\t\t= target.closest('form');\r\n\r\n\tform.querySelectorAll('.hidden [required], select[required]').forEach(el=>{el.required = false});\r\n\r\n\tvar validity\t= form.reportValidity();\r\n\r\n\tif(validity){\r\n\t\tvar formData\t= new FormData(form);\r\n\t\tvar response \t= await fetchRestApi('save_2fa_settings', formData);\r\n\r\n\t\tif(response){\r\n\t\t\tform.querySelectorAll('[id^=\"setup-\"]:not(.hidden)').forEach(el=>el.classList.add('hidden'));\r\n\r\n\t\t\tMain.displayMessage(response, 'success');\r\n\r\n\t\t\t//Show submit button\r\n\t\t\ttarget.closest('form').querySelector('.form_submit').classList.add('hidden');\r\n\t\t}\r\n\t}\r\n\r\n\tloader.classList.add('hidden');\r\n}\r\n\r\nfunction checkWebauthnAvailable(){\r\n\tif (window.PublicKeyCredential) {\r\n\t\tPublicKeyCredential.isUserVerifyingPlatformAuthenticatorAvailable().then((available) => {\r\n\t\t\tif (available) {\r\n\t\t\t\tconsole.log(\"Supported.\");\r\n\t\t\t\tdocument.getElementById('webauthn_wrapper').classList.remove('hidden');\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"WebAuthn supported, Platform Authenticator not supported.\");\r\n\t\t\t}\r\n\t\t})\r\n\t\t.catch((err) => {\r\n\t\t\tconsole.error(\"Something went wrong.\");\r\n\t\t\tconsole.error(err);\r\n\t\t});\r\n\t} else {\r\n\t\tconsole.log(\"Not supported.\");\r\n\t}\r\n}\r\n\r\nfunction showTwofaSetup(target) {\r\n\t//hide all options\r\n\tdocument.querySelectorAll('.twofa_option').forEach(el=>el.classList.add('hidden'));\r\n\r\n\t// Show setup for this method\r\n\tvar wrapper\t= document.getElementById('setup-'+target.value);\r\n\twrapper.classList.remove('hidden');\r\n\r\n\tif (Main.isMobileDevice()){\r\n\t\twrapper.querySelectorAll('.mobile.hidden').forEach(el=>el.classList.remove('hidden'));\r\n\t}else{\r\n\t\twrapper.querySelectorAll('.desktop.hidden').forEach(el=>el.classList.remove('hidden'));\r\n\t}\r\n\r\n\tif(target.value == 'authenticator'){\r\n\t\t//Show submit button\r\n\t\ttarget.closest('form').querySelector('.form_submit').classList.remove('hidden');\r\n\t}\r\n}\r\n\r\nasync function removeWebAuthenticator(target){\r\n\tvar table   = target.closest('table');\r\n\tvar row     = target.closest('tr');\r\n\r\n\tvar formData\t= new FormData();\r\n\tformData.append('key',target.dataset.key);\r\n\r\n\tMain.showLoader(target, true);\r\n\r\n\tvar response \t= await fetchRestApi('remove_web_authenticator', formData);\r\n\r\n\tif(response){\r\n\t\tif(table.rows.length==2){\r\n\t\t\ttable.remove();\r\n\t\t}else{\r\n\t\t\trow.remove();\r\n\t\t}\r\n\r\n\t\tMain.displayMessage(response);\r\n\t}\r\n}\r\n\r\n//Start registration with button click\r\nasync function registerBiometric(target){\r\n    var identifier  = target.closest('#webauthn_wrapper').querySelector('[name=\"identifier\"]').value;\r\n    if(identifier == ''){\r\n\t\tMain.displayMessage('Please specify a device name', 'error');\r\n      return;\r\n    }\r\n\r\n    //show loader\r\n    document.getElementById('add_webauthn').classList.add('hidden');\r\n    var loaderHtml = `<div id=\"loader_wrapper\" style='margin-bottom:20px;'><span class=\"message\"></span><img class=\"loadergif\" src=\"${sim.loadingGif}\" height=\"30px;\"></div>`;\r\n    document.getElementById('add_webauthn').insertAdjacentHTML('afterEnd', loaderHtml);\r\n\tvar message\t\t= document.querySelector('#loader_wrapper .message');\r\n\r\n\ttry{\r\n\t\t// Get biometric challenge\r\n\t\tvar formData\t\t\t= new FormData();\r\n\t\tformData.append('identifier', identifier);\r\n\t\tvar response\t\t\t= await fetchRestApi('fingerprint_options', formData);\r\n\t\tif(!response){\r\n\t\t\tthrow new Error('Options retrieval failed');\r\n\t\t}\r\n\t\tvar publicKey \t\t\t= preparePublicKeyOptions(response);\r\n\r\n\t\t// Update the message\r\n\t\tmessage.textContent  \t= 'Please authenticate...';\r\n\r\n\t\t// Ask user to verify\r\n\t\tvar credentials \t\t= await navigator.credentials.create({publicKey});\r\n\r\n\t\t// Update the message\r\n\t\tmessage.textContent  \t= 'Saving authenticator...';\r\n\r\n\t\t// Store result\r\n\t\tvar publicKeyCredential = preparePublicKeyCredentials(credentials);\r\n\t\t\r\n\t\tformData\t\t\t= new FormData();\r\n\t\tformData.append('publicKeyCredential', JSON.stringify(publicKeyCredential));\r\n\t\tresponse\t\t\t= await fetchRestApi('store_fingerprint', formData);\r\n\t\tif(!response){\r\n\t\t\tthrow new Error('Storing biometric failed');\r\n\t\t}\r\n\r\n\t\tvar wrapper \t\t\t= document.getElementById('webautn_devices_wrapper');\r\n\t\tif(wrapper == null){\r\n\t\t\t//add authenthn table\r\n\t\t\tdocument.getElementById('webauthn_wrapper').insertAdjacentHTML('beforeEnd', response);\r\n\t\t}else{\r\n\t\t\t//update authenthn table\r\n\t\t\twrapper.outerHTML = response;\r\n\t\t}\r\n  \r\n\t\t//labels for use\r\n\t\tSimTableFunctions.setTableLabel();\r\n  \r\n\t\tMain.displayMessage('Registration success');\r\n\t}catch(error){\r\n\t\tdocument.getElementById('add_webauthn').classList.remove('hidden');\r\n\t\tconsole.error(error);\r\n\t}\r\n\r\n    document.querySelector('#loader_wrapper').remove();\r\n}\r\n\r\nasync function sendValidationEmail(target){\r\n\t// Request email code for 2fa login setup\r\n\tvar loader\t\t\t\t= `<img id='loader' src='${sim.loadingGif}' style='height:30px;margin-top:-6px;float:right;'>`;\r\n\r\n\tdocument.getElementById('email-message').innerHTML\t= `Sending e-mail... ${loader}`;\r\n\r\n\tvar username\t= document.getElementById('username').value;\r\n\tvar formData\t= new FormData();\r\n\tformData.append('username', username);\r\n\r\n\tvar response\t= await fetchRestApi('request_email_code', formData);\r\n\r\n\tif(response){\r\n\t\tdocument.getElementById('email-message').innerHTML\t= response;\r\n\t\tdocument.getElementById('email-message').classList.add('success');\r\n\r\n\t\tdocument.getElementById('email-code-validation').classList.remove('hidden');\r\n\r\n\t\ttarget.classList.add('hidden');\r\n\r\n\t\t//Show submit button\r\n\t\ttarget.closest('form').querySelector('.form_submit').classList.remove('hidden');\r\n\r\n\t\tdocument.getElementById('email-code-validation').focus();\r\n\t}\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\",function() {\r\n\tconsole.log(\"2fa.js loaded\");\r\n\r\n\t//hide the webauthn table if not possible\r\n\tvar el = document.getElementById('webauthn_wrapper');\r\n\tif(el != null){\r\n\t\tcheckWebauthnAvailable();\r\n\t}\t\r\n});\r\n\r\ndocument.addEventListener('click', ev =>{\r\n\tvar target = ev.target;\r\n\r\n\tif(target.name == '2fa_methods[]'){\r\n\t\tshowTwofaSetup(target);\r\n\t}\r\n\r\n\tif(target.matches('.remove_webauthn')){\r\n\t\tremoveWebAuthenticator(target);\r\n\t}\r\n\t\r\n\tif(target.id == 'add_fingerprint'){\r\n\t\tregisterBiometric(target);\r\n\t}\r\n\r\n\tif(target.name == 'save2fa'){\r\n\t\tsaveTwofaSettings(target);\r\n\t}\r\n\r\n\tif(target.id == 'email-code-button'){\r\n\t\tsendValidationEmail(target);\r\n\t}\r\n})"],"names":["async","fetchRestApi","url","formData","response","append","sim","restNonce","result","fetch","baseUrl","restApiPrefix","method","credentials","body","json","error","console","ok","code","Main","displayMessage","message","base64UrlDecode","input","pad","replace","length","Error","Array","join","window","atob","arrayToBase64String","a","btoa","String","fromCharCode","document","addEventListener","log","getElementById","PublicKeyCredential","isUserVerifyingPlatformAuthenticatorAvailable","then","available","classList","remove","catch","err","ev","target","name","querySelectorAll","forEach","el","add","wrapper","value","isMobileDevice","closest","querySelector","showTwofaSetup","matches","table","row","FormData","dataset","key","showLoader","rows","removeWebAuthenticator","id","identifier","loaderHtml","loadingGif","insertAdjacentHTML","publicKey","challenge","Uint8Array","from","c","charCodeAt","undefined","user","excludeCredentials","map","data","allowCredentials","preparePublicKeyOptions","textContent","navigator","create","publicKeyCredential","type","rawId","clientDataJSON","attestationObject","authenticatorData","signature","userHandle","preparePublicKeyCredentials","JSON","stringify","outerHTML","SimTableFunctions","setTableLabel","registerBiometric","loader","form","required","reportValidity","saveTwofaSettings","innerHTML","username","focus","sendValidationEmail"],"sourceRoot":""}