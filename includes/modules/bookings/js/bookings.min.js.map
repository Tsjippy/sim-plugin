{"version":3,"file":"bookings.min.js","mappings":"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","sources":["webpack://bookings/./bookings.js"],"sourcesContent":["function reset(modal, onlyEnd=false){\r\n    if(!onlyEnd){\r\n        modal.querySelector('.booking-startdate').value     = '';\r\n        modal.querySelector('.calendar.day.startdate').classList.remove('startdate');\r\n        modal.querySelectorAll('.available.unavailable').forEach(dt=>dt.classList.remove('unavailable'));\r\n\r\n        modal.querySelector('.booking-date-label-wrapper.enddate').classList.add('disabled')\r\n    }\r\n    modal.querySelector('.booking-enddate').value       = '';\r\n    \r\n    modal.querySelector('.calendar.day.enddate').classList.remove('enddate');\r\n\r\n    modal.querySelectorAll('.inbetween').forEach(dt=>dt.classList.remove('inbetween'));    \r\n\r\n    modal.querySelectorAll('.room-selector').forEach(el=>el.checked=false);    \r\n\r\n    if(modal.querySelectorAll('.room-selector').length>1){\r\n        modal.querySelectorAll('.roomwrapper:not(.hidden)').forEach(el=>el.classList.add('hidden'));\r\n    }\r\n}\r\n\r\nasync function getMonth(target){\r\n    let wrapper         = target.closest('.bookings-wrap');\r\n    let monthContainers = wrapper.querySelectorAll(`.month-container[data-month=\"${target.dataset.month}\"][data-year=\"${target.dataset.year}\"]`);\r\n\r\n    // hide the first month\r\n    if(target.closest('.prev') != null){\r\n        wrapper.querySelectorAll('.calendar.table .month-container:not(.hidden)').forEach(\r\n            (el, index) => {\r\n                if(index % 2 != 0){ // uneven index\r\n                    el.classList.add('hidden');\r\n                }\r\n            }\r\n        );\r\n    }else{\r\n        wrapper.querySelectorAll('.calendar.table .month-container:not(.hidden)').forEach(\r\n            (el, index) => {\r\n                if(index % 2 == 0){ // even index\r\n                    el.classList.add('hidden');\r\n                }\r\n            }\r\n        );\r\n    }\r\n\r\n    // month does not exist yet, request the data\r\n    if(monthContainers.length == 0){\r\n        let formData    = new FormData();\r\n        formData.append('month', target.dataset.month);\r\n        formData.append('year', target.dataset.year);\r\n        formData.append('subject', wrapper.dataset.subject);\r\n        formData.append('formid', wrapper.dataset.formid);\r\n        if(wrapper.dataset.elid != undefined){\r\n            formData.append('elid', wrapper.dataset.elid);\r\n        }\r\n        if(wrapper.dataset.shortcodeid != undefined){\r\n            formData.append('shortcodeid', wrapper.dataset.shortcodeid);\r\n        }\r\n\r\n        let loaderWrapper\t= document.createElement(\"DIV\");\r\n        loaderWrapper.setAttribute('class','loaderwrapper');\r\n\r\n        let loader\t= document.createElement(\"IMG\");\r\n        loader.setAttribute(\"src\", sim.loadingGif);\r\n\r\n        loaderWrapper.insertAdjacentElement('beforeEnd', loader);\r\n        wrapper.querySelectorAll('.calendar.table .roomwrapper>div').forEach(div=>{\r\n            let clone   = loaderWrapper.cloneNode(true);\r\n            div.insertAdjacentElement('beforeEnd', clone);\r\n        });\r\n            \r\n        let response = await FormSubmit.fetchRestApi('bookings/get_next_month', formData);\r\n\r\n        if(response){\r\n\r\n            console.log(response);\r\n\r\n            // add the new months to each room\r\n            wrapper.querySelectorAll('.roomwrapper').forEach((el, index)=>{\r\n                el.querySelector('.loaderwrapper').outerHTML        = response.months[index];\r\n            });\r\n\r\n            // hide current navigator and add new one\r\n            wrapper.querySelector('.navigators .navigator:not(.hidden)').classList.add('hidden');\r\n            wrapper.querySelector('.navigators').insertAdjacentHTML('beforeEnd', response.navigator);\r\n            wrapper.querySelector('.booking.details-wrapper').insertAdjacentHTML('beforeEnd', response.details);\r\n        }\r\n    }else{\r\n        // hide the current navigator\r\n        wrapper.querySelector('.navigators .navigator:not(.hidden)').classList.add('hidden');\r\n\r\n        // show the new one\r\n        console.log(wrapper);\r\n        console.log(target);\r\n        wrapper.querySelector(`.navigator[data-month=\"${target.dataset.month}\"][data-year=\"${target.dataset.year}\"]`).classList.remove('hidden');\r\n        \r\n        // Show the month calendar\r\n        monthContainers.forEach(el=>el.classList.remove('hidden'));\r\n    }\r\n}\r\n\r\nasync function approve(target){    \r\n    let formData    = new FormData();\r\n    formData.append('id', target.dataset.id);\r\n\r\n    let row         = target.closest('tr');\r\n\r\n    Main.showLoader(target.closest('td'));\r\n        \r\n    let response = await FormSubmit.fetchRestApi('bookings/approve', formData);\r\n\r\n    if(response){\r\n\r\n        // Remove table if empty\r\n        if(row.closest('tbody').rows.length == 1){\r\n            row.closest('table').remove()\r\n        }else{\r\n            // remove the row\r\n            row.remove();\r\n        }\r\n\r\n        let subjectWrapper  = document.querySelector(`.bookings-wrap[data-subject='${response.subject}']`);\r\n\r\n        for (let i = 0; i < response.months.length; i++) {\r\n            // Get the calendar\r\n            subjectWrapper.querySelectorAll(`.month-container[data-month='${response.months[i]}'][data-year='${response.years[i]}']`).forEach(el=>el.outerHTML   = response.html);\r\n        }\r\n\r\n        // Add the details\r\n        subjectWrapper.querySelector(`.booking.details-wrapper`).insertAdjacentHTML('beforeEnd', response.details);\r\n        \r\n    }\r\n}\r\n\r\nasync function remove(target){    \r\n    let formData    = new FormData();\r\n    formData.append('id', target.dataset.id);\r\n    let row         = target.closest('tr');\r\n\r\n    Main.showLoader(target.closest('td'));\r\n        \r\n    let response = await FormSubmit.fetchRestApi('bookings/remove', formData);\r\n\r\n    if(response){\r\n        // Remove table if empty\r\n        if(row.closest('tbody').rows.length == 1){\r\n            row.closest('table').remove()\r\n        }else{\r\n            // remove the row\r\n            row.remove();\r\n        }\r\n\r\n        Main.displayMessage(response);\r\n    }\r\n}\r\n\r\nfunction changeBookingData(target){\r\n    let selector    = '';\r\n    let el  = document.querySelector(`.booking-subject-selector:checked`);\r\n    if(el == null){\r\n        selector    = '.booking.modal';\r\n        console.log(selector);\r\n    }else{\r\n        selector    = `[name=\"${el.value}-modal\"]`;\r\n        console.log(selector);\r\n    }\r\n    document.querySelector(selector).classList.remove('hidden');\r\n}\r\n\r\nfunction storeDates(target){\r\n    let modal   = target.closest('.modal');\r\n\r\n    // remove all previous dates\r\n    target.closest('form').querySelectorAll('.selected-booking-dates .clone_div').forEach((el, index)=>{\r\n        if(index>0){\r\n            el.remove();\r\n        }\r\n    });\r\n\r\n    let parent          = target.closest('form').querySelector('.selected-booking-dates');\r\n    let original        = parent.querySelector('.clone_div');\r\n\r\n    // set values and create clones\r\n    modal.querySelectorAll('.startdate').forEach((el, index)=>{\r\n        let clone\t\t= original;\r\n\r\n        if(index > 0){\r\n            clone\t\t= FormFunctions.cloneNode(original);\r\n        }\r\n    \r\n        let startEl     = clone.querySelector('[name^=\"booking-startdate\"]');\r\n        let endEl       = clone.querySelector('[name^=\"booking-enddate\"]');\r\n        let roomEl      = clone.querySelector('[name^=\"booking-room\"]');\r\n        let room        = el.closest('.roomwrapper').dataset.room;\r\n\r\n        startEl.value   = el.dataset.isodate;\r\n        endEl.value     = modal.querySelectorAll('.day.enddate')[index].dataset.isodate;\r\n\r\n        if(room == undefined){\r\n            roomEl.closest('div').classList.add('hidden');\r\n            roomEl.value    = '';\r\n        }else{\r\n            roomEl.closest('div').classList.remove('hidden');\r\n            roomEl.value    = room;\r\n        }\r\n\r\n        parent.insertAdjacentElement('beforeEnd', clone);\r\n        \r\n        FormFunctions.fixNumbering(parent);\r\n    });\r\n\r\n    parent.classList.remove('hidden');\r\n\r\n    Main.hideModals();\r\n\r\n    target.closest('form').querySelector('.change-booking-date').textContent    = 'Change';\r\n\r\n    target.closest('form').querySelector('.change-booking-date').classList.remove('hidden');\r\n\r\n    reset(modal);\r\n}\r\n\r\nfunction daySelected(target){ \r\n    let modal   = target.closest('.modal');\r\n\r\n    if(modal == null){\r\n        return;\r\n    }\r\n\r\n    let roomWrapper = target.closest('.roomwrapper');\r\n\r\n    // we already have an selection\r\n    if(roomWrapper.querySelector('.calendar.day.startdate') != null && roomWrapper.querySelector('.calendar.day.enddate') != null){\r\n        let onlyEnd = false;\r\n        if(target.matches('.inbetween')){\r\n            onlyEnd = true;\r\n        }\r\n        \r\n        reset(modal, onlyEnd);\r\n    }\r\n\r\n    if(roomWrapper.querySelector('.calendar.day.startdate') == null){\r\n        //roomWrapper.querySelector('.booking-startdate').value             = target.dataset.date;\r\n        //roomWrapper.querySelector('.booking-startdate').dataset.isodate   = target.dataset.isodate;\r\n\r\n        target.classList.add('startdate');\r\n        roomWrapper.querySelectorAll('.booking-date-label-wrapper.disabled').forEach(el=>el.classList.remove('disabled'));\r\n\r\n        // do not allow any date before the startdate to be the enddate\r\n        let dts     = roomWrapper.querySelectorAll('dt.calendar.day:not(.head, .unavailable)');\r\n        let skip    = false;\r\n        for (i = 0; i < dts.length; ++i) {\r\n            // all dates after the booked date are available\r\n            if(dts[i] == target){\r\n                skip = true;\r\n            // until we encounter another booked date\r\n            }else if(skip && dts[i].matches('.booked:not(.available)')){\r\n                skip = false;\r\n            }\r\n\r\n            if(!skip){\r\n                dts[i].classList.add('unavailable');\r\n            }\r\n        }\r\n    }else{\r\n        // store enddate\r\n        modal.querySelector('.booking-enddate').value               = target.dataset.date;\r\n        modal.querySelector('.booking-enddate').dataset.isodate     = target.dataset.isodate;\r\n        target.classList.add('enddate');\r\n\r\n        // make other dates available again\r\n        roomWrapper.querySelectorAll('.available.booked:not(.enddate, .startdate)').forEach(dt=>dt.classList.remove('booked'));\r\n\r\n        // color the dates between start and end\r\n        let dts     = roomWrapper.querySelectorAll('dt.calendar.day:not(.head)');\r\n        let skip    = true;\r\n        for (i = 0; i < dts.length; ++i) {\r\n            \r\n            // until we encounter another booked date\r\n            if(dts[i] == target){\r\n                break;\r\n            }\r\n\r\n            if(!skip){\r\n                dts[i].classList.add('inbetween');\r\n            }\r\n\r\n            // all dates after the booked date are available\r\n            if(dts[i].matches('.startdate')){\r\n                skip = false;\r\n            }\r\n        }\r\n\r\n        modal.querySelectorAll('.actions .action.disabled').forEach(el=>el.classList.remove('disabled'));\r\n    }\r\n}\r\n\r\nfunction roomSelected(target){\r\n\r\n    let modal   = target.closest('.modal');\r\n\r\n    if(modal == null){\r\n        modal = target.closest('.booking.overview'); // when viewing the results\r\n    }\r\n\r\n    if(modal == null){\r\n        return;\r\n    }\r\n\r\n    // show date warning\r\n    modal.querySelectorAll(`.booking-date-wrapper.hidden`).forEach(el=>el.classList.remove('hidden'));\r\n\r\n    // show month navigator\r\n    modal.querySelectorAll(`.navigators.hidden`).forEach(el=>el.classList.remove('hidden'));\r\n\r\n    // Show the selected room\r\n    modal.querySelectorAll(`[data-room=\"${target.value}\"]`).forEach(el=>el.classList.toggle('hidden'));\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    console.log(\"Bookings.js loaded\");\r\n\r\n    // show booking date selector\r\n    document.querySelectorAll(`.booking-subject-selector`).forEach(el=>el.addEventListener(`change`, (ev)=>{\r\n        Main.showModal(document.querySelector(`[name=\"${ev.target.value}-modal\"]`));\r\n    }));\r\n\r\n    // show booking calendar\r\n    document.querySelectorAll(`.admin-booking-subject-selector`).forEach(el=>el.addEventListener(`change`, (ev)=>{\r\n        document.querySelector(`.bookings-wrap[data-subject=\"${ev.target.value}\"]`).classList.toggle('hidden');\r\n    }));\r\n\r\n    document.querySelectorAll(\".tables-wrapper\").forEach(wrapper=>{\r\n        offset\t= wrapper.getBoundingClientRect().x;\r\n        wrapper.style.marginLeft = `-${offset}px`;\r\n    });\r\n\r\n    document.querySelectorAll('.booking-detail tr.actions').forEach(row=>row.addEventListener('submissionArchived', ev => {\r\n        let wrapper     = ev.target.closest('.booking-detail-wrapper');\r\n        let bookingId   = wrapper.dataset.bookingid;\r\n\r\n        // mark dates as available again\r\n        document.querySelectorAll(`.calendar.day.booked[data-bookingid=\"${bookingId}\"]`).forEach(el=>{\r\n            el.classList.remove('booked');\r\n            el.classList.add('available');\r\n        });\r\n\r\n        // remove details\r\n        wrapper.remove();\r\n        \r\n        Main.displayMessage('Succesfully archived');\r\n    }));\r\n});\r\n\r\ndocument.addEventListener('click', (ev) => {\r\n    let target  = ev.target;\r\n    let modal   = target.closest('.modal');\r\n\r\n    if(target.closest('dt') != null){\r\n        target  = target.closest('dt');\r\n    }\r\n\r\n    if(target.matches('.action.reset')){\r\n        reset(modal);\r\n    }\r\n\r\n    if(target.matches('.prevnext')){\r\n        getMonth(target);\r\n    }\r\n\r\n    if(target.matches('.change-booking-date, [name=\"booking-startdate\"], [name=\"booking-enddate\"]')){\r\n        changeBookingData(target);\r\n    }\r\n\r\n    if(target.matches('.action.confirm')){\r\n        storeDates(target);\r\n    }\r\n\r\n    if(target.matches('.bookings-wrap .available:not(.unavailable)')){\r\n        daySelected(target);\r\n    }\r\n\r\n    if(target.matches('.form.table-wrapper .booked')){\r\n        // Hide others\r\n        target.closest('.bookings-wrap').querySelectorAll(`.booking-detail-wrapper:not(.hidden)`).forEach(el=>el.classList.add('hidden'));\r\n        \r\n        // Show the details\r\n        target.closest('.bookings-wrap').querySelector(`.booking-detail-wrapper[data-bookingid=\"${target.dataset.bookingid}\"]`).classList.remove('hidden');\r\n    }\r\n\r\n    if(target.matches('.button.approve')){\r\n        approve(target);\r\n    }else if(target.matches('.button.delete')){\r\n        remove(target);\r\n    }else if(target.matches('.room-selector')){\r\n        roomSelected(target);\r\n    }\r\n});"],"names":["reset","modal","onlyEnd","querySelector","value","classList","remove","querySelectorAll","forEach","dt","add","el","checked","length","document","addEventListener","console","log","ev","Main","showModal","target","toggle","wrapper","offset","getBoundingClientRect","x","style","marginLeft","row","closest","bookingId","dataset","bookingid","displayMessage","matches","async","monthContainers","month","year","index","formData","FormData","append","subject","formid","undefined","elid","shortcodeid","loaderWrapper","createElement","setAttribute","loader","sim","loadingGif","insertAdjacentElement","div","clone","cloneNode","response","FormSubmit","fetchRestApi","outerHTML","months","insertAdjacentHTML","navigator","details","getMonth","selector","changeBookingData","parent","original","FormFunctions","startEl","endEl","roomEl","room","isodate","fixNumbering","hideModals","textContent","storeDates","roomWrapper","dts","skip","i","date","daySelected","id","showLoader","rows","subjectWrapper","years","html","approve","roomSelected"],"sourceRoot":""}