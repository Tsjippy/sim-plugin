{"version":3,"file":"edit_post.min.js","mappings":"mBAAO,IAAIA,EACAC,EAEAC,EAAqB,WAC5BC,QAAQC,SAGRC,SAASC,iBAAiB,kCAAkCC,SAAQC,IAChEC,OAAOC,QAAQC,YAAY,gBAAgB,EAAOH,EAAGI,GAAG,IAI5DH,OAAOJ,SAASQ,cAAc,IAAIC,MAAM,mBAAoB,CACxDC,SAAS,EACTC,YAAY,KAIhBX,SAASC,iBAAiB,qBAAqBC,SAAQC,GAAIA,EAAGS,iBAAiB,SAASC,IACpF,IAAIC,EAAUX,EAAGY,QAAQ,mBAAmBC,cAAc,mBACtDC,EAAWd,EAAGY,QAAQ,mBAAmBC,cAAc,cAC3DF,EAAKI,MAAMC,WAAW,QACnBN,EAAGO,OAAOC,QAAQ,iBAClBJ,EAAMC,MAAMI,QAAQ,QACnBR,EAAKI,MAAMI,QAAQ,SAEnBL,EAAMC,MAAMI,QAAQ,OACpBR,EAAKI,MAAMI,QAAQ,QACvB,MAGkB,mBAAZ1B,GACNA,GAER,EAmBW2B,EAAa,WACpB,IAAIpB,EAAKR,EAAQ6B,QAGjB,GAAqC,MAAlCxB,SAASyB,eAAetB,EAAGI,KAA6B,UAAdJ,EAAGuB,QAAoB,CAChE,IAAIC,EAAI3B,SAAS4B,cAAc,UAEjB,IAAXzB,EAAG0B,KACFF,EAAEE,KAAO,kBAETF,EAAEE,KAAO1B,EAAG0B,KAGH,IAAV1B,EAAG2B,IACFH,EAAEG,IAAO3B,EAAG2B,IAEZH,EAAEI,UAAY5B,EAAG4B,UAGrBJ,EAAEpB,GAAKJ,EAAGI,GAEVP,SAASgC,KAAKC,YAAYN,GAEvBhC,EAAQuC,OAAS,EACH,IAAV/B,EAAG2B,IACFH,EAAEf,iBAAiB,OAAQW,GAE3BA,IAGS,IAAVpB,EAAG2B,IACFH,EAAEf,iBAAiB,OAAQf,GAE3BA,GAGZ,MAASF,EAAQuC,OAAS,EAEtBX,IAEA1B,GAER,EC1DAG,SAASY,iBAAiB,oBAAoB,WAC7CuB,QAAQC,IAAI,uBAEZpC,SAASC,iBAAiB,cAAcC,SAAQC,IAC/CA,EAAGkC,UAAUtC,OAAO,SAAS,GAE/B,IAEAC,SAASY,iBAAiB,SAAS,SAASC,GACxB,aAAhBA,EAAGO,OAAOb,IA5CO+B,eAAgBC,GACpC,IAOIC,EAASD,EAAMnB,OACfqB,EAAUD,EAAOzB,QAAQ,QAAQC,cAAc,oBACnDyB,EAAQJ,UAAUK,IAAI,UAEtB,IAAIC,EAAc,IAAIC,SACfC,EAAcL,EAAOM,QAAQvC,GACjCoC,EAASI,OAAO,SAAUF,GAE7B,MAAMG,EAAQ,IAAIC,IAAIC,eACtBF,EAAIG,aAAaC,IAAI,UAAWP,GAEhCzC,OAAOiD,QAAQC,UAAU,CAAC,EAAG,GAAIN,GAEjC,IAAIO,EAASC,KAAKC,WAAWjB,GAAQ,EAAM,sBAEvCkB,QAAiBC,WAAWC,aAAa,6BAA8BjB,GAExEe,GACFjB,EAAQV,UAAY2B,EAASG,KAC7BjE,EA1B6B,WAC7BI,SAASyB,eAAe,wBAAwBY,UAAUtC,OAAO,UAEjE0C,EAAQJ,UAAUtC,OAAO,UACzBwD,EAAOxD,QACR,ED4ByB,SAAU2D,GAChC,IAAII,EAAO9D,SAAS4B,cAAc,OAE/B8B,EAASK,KACRD,EAAK/B,UAAa2B,EAASK,GAC3BpE,EAAU,IAAImE,EAAKE,UACnBzC,KAGDmC,EAASO,MACRH,EAAK/B,UAAY2B,EAASO,IAC1B,IAAIH,EAAKE,UAAU9D,SAAQC,IACvBH,SAASgC,KAAKC,YAAY9B,EAAG,IAGzC,CCpBE+D,CAAUR,IAEVH,EAAOY,UAAY3B,EAAO2B,SAE5B,CAYEC,CAAevD,EAEjB,G","sources":["webpack://frontend_posting/../../../js/ajax_import.js","webpack://frontend_posting/./edit_post.js"],"sourcesContent":["export let scripts;\r\nexport let callback;\r\n\r\nexport let afterScriptsLoaded\t= function (){\r\n    tinymce.remove();\r\n\r\n    // Activate tinyMce's again\r\n    document.querySelectorAll('.entry-content .wp-editor-area').forEach(el =>{\r\n        window.tinyMCE.execCommand('mceAddEditor', false, el.id);\r\n    });\r\n\r\n    // invoke dom content loaded events\r\n    window.document.dispatchEvent(new Event(\"DOMContentLoaded\", {\r\n        bubbles: true,\r\n        cancelable: true\r\n    }));\r\n\r\n    // Somehow the visual/text switch does not work, manually fix it\r\n    document.querySelectorAll('.wp-switch-editor').forEach(el=>el.addEventListener('click', ev=>{\r\n        let area    = el.closest('.wp-editor-wrap').querySelector('.wp-editor-area');\r\n        let panel   =  el.closest('.wp-editor-wrap').querySelector('.mce-panel');\r\n        area.style.visibility='unset';\r\n        if(ev.target.matches('.switch-tmce')){\r\n           panel.style.display='block';\r\n            area.style.display='none';\r\n        }else{\r\n            panel.style.display='none';\r\n            area.style.display='block';\r\n        }\r\n    }));\r\n\r\n    if(typeof callback == 'function'){\r\n        callback();\r\n    }\r\n}\r\n\r\nexport let addStyles    = function (response){\r\n    let temp = document.createElement('div');\r\n\r\n    if(response.js){\r\n        temp.innerHTML =  response.js;\r\n        scripts\t= [...temp.children];\r\n        addScripts();\r\n    }\r\n\r\n    if(response.css){\r\n        temp.innerHTML = response.css;\r\n        [...temp.children].forEach(el => {\r\n            document.head.appendChild(el);\r\n        });\r\n    }\r\n}\r\n\r\nexport let addScripts\t= function () {\r\n    let el\t= scripts.shift();\r\n\r\n    // only add if needed\r\n    if(document.getElementById(el.id) == null && el.tagName == 'SCRIPT'){\r\n        var s = document.createElement('script');\r\n\r\n        if(el.type == ''){\r\n            s.type\t= 'text/javascript'; \r\n        }else{\r\n            s.type\t= el.type;\r\n        }\r\n\r\n        if(el.src != ''){\r\n            s.src \t= el.src;\r\n        }else{\r\n            s.innerHTML\t= el.innerHTML;\r\n        }\r\n        \r\n        s.id\t= el.id;\r\n        \r\n        document.head.appendChild(s);\r\n\r\n        if(scripts.length > 0){\r\n            if(el.src != ''){\r\n                s.addEventListener('load', addScripts);\r\n            }else{\r\n                addScripts();\r\n            }\r\n        }else{\r\n            if(el.src != ''){\r\n                s.addEventListener('load', afterScriptsLoaded);\r\n            }else{\r\n                afterScriptsLoaded();\r\n            }\t\t\t\r\n        }\r\n    }else if(scripts.length > 0){\r\n        //run again when this script is loaded\r\n        addScripts();\r\n    }else{\r\n        afterScriptsLoaded();\r\n    }\r\n}","import { callback, addStyles } from './../../../js/ajax_import.js';\r\n\r\nlet editPostSwitch = async function (event){\r\n\tlet afterScriptsLoadedFinal\t= function (){\r\n\t\tdocument.getElementById('frontend_upload_form').classList.remove('hidden');\r\n\r\n\t\twrapper.classList.remove('hidden');\r\n\t\tloader.remove();\r\n\t}\r\n\r\n\tlet button\t= event.target;\r\n\tlet wrapper\t= button.closest('main').querySelector('.content-wrapper');\r\n\twrapper.classList.add('hidden');\r\n\r\n\tlet formData    = new FormData();\r\n    let postId      = button.dataset.id;\r\n    formData.append('postid', postId);\r\n\r\n\tconst url \t\t= new URL(edit_post_url);\r\n\turl.searchParams.set('post_id', postId);\r\n\r\n\twindow.history.pushState({}, '', url);\r\n\r\n\tlet loader\t= Main.showLoader(button, true, 'Requesting form...');\r\n\r\n\tlet response = await FormSubmit.fetchRestApi('frontend_posting/post_edit', formData);\r\n\r\n\tif(response){\r\n\t\twrapper.innerHTML\t= response.html;\r\n\t\tcallback\t= afterScriptsLoadedFinal;\r\n\r\n\t\taddStyles(response);\r\n\t}else{\r\n\t\tloader.outerHTML\t= button.outerHTML;\r\n\t}\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function() {\r\n\tconsole.log(\"Edit post.js loaded\");\r\n\t\r\n\tdocument.querySelectorAll('#page-edit').forEach(el=>{\r\n\t\tel.classList.remove('hidden');\r\n\t});\r\n});\r\n\r\ndocument.addEventListener(\"click\", function(ev) {\t\r\n\tif(ev.target.id == 'page-edit'){\r\n\t\teditPostSwitch(ev);\r\n\t}\r\n});"],"names":["scripts","callback","afterScriptsLoaded","tinymce","remove","document","querySelectorAll","forEach","el","window","tinyMCE","execCommand","id","dispatchEvent","Event","bubbles","cancelable","addEventListener","ev","area","closest","querySelector","panel","style","visibility","target","matches","display","addScripts","shift","getElementById","tagName","s","createElement","type","src","innerHTML","head","appendChild","length","console","log","classList","async","event","button","wrapper","add","formData","FormData","postId","dataset","append","url","URL","edit_post_url","searchParams","set","history","pushState","loader","Main","showLoader","response","FormSubmit","fetchRestApi","html","temp","js","children","css","addStyles","outerHTML","editPostSwitch"],"sourceRoot":""}