{"version":3,"file":"expand.min.js","mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,KAE1CD,SAASE,iBAAiB,+FAA+FC,SAAQC,GAAIA,EAAGC,UAAUC,OAAO,YAGzJC,OAASP,SAASQ,cAAc,UAChCD,OAAOE,UAAY,WACnBF,OAAOF,UAAUK,IAAI,UACrBH,OAAOF,UAAUK,IAAI,SACrBH,OAAOF,UAAUK,IAAI,mBAGrBV,SAASE,iBAAiB,0CAA0CC,SAAQC,IAEzB,MAA5CA,EAAGO,WAAWC,cAAc,cAAwBR,EAAGS,mBAAmBC,QAAQ,2BACjFV,EAAGO,WAAWI,aAAaR,OAAOS,WAAU,GAAOZ,EAAGa,YAC1D,IAOJjB,SAASC,iBAAiB,SAASiB,IAC5BA,EAAGC,OAAOL,QAAQ,qBACjBI,EAAGC,OAAOC,QAAQ,MAAMR,cAAc,aAAaP,UAAUgB,OAAO,SACxE,GACF","sources":["webpack://sim-children/./expand.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', () => {\r\n    // Unhide the children of the ancestor and the current page\r\n    document.querySelectorAll('.childpost .current_page_ancestor > .children.hidden, .current_page_item > .children.hidden').forEach(el=>el.classList.remove('hidden'));\r\n\r\n    // Create a button\r\n    button = document.createElement('button');\r\n    button.innerHTML = '&#x25BC;';\r\n    button.classList.add('button');\r\n    button.classList.add('small');\r\n    button.classList.add('expand-children');\r\n\r\n    // Insert a button\r\n    document.querySelectorAll('.childpost .page_item_has_children > a').forEach(el=>{\r\n        // There are children and no button yet\r\n        if(el.parentNode.querySelector('.children') != null && el.nextElementSibling.matches(':not(.expand-children)')){\r\n            el.parentNode.insertBefore(button.cloneNode(true), el.nextSibling);\r\n        }\r\n    });\r\n\r\n    // Expand al ancestors and children of the current page\r\n    //document.querySelectorAll('.childpost .current_page_ancestor > .expand-children, .current_page_item > .children.hidden').forEach(el=>el.textContent = '-');\r\n\r\n    // Add event listeners to the buttons\r\n    document.addEventListener('click', ev=>{\r\n        if(ev.target.matches('.expand-children')){\r\n            ev.target.closest('li').querySelector('.children').classList.toggle('hidden');\r\n        }\r\n    });\r\n})"],"names":["document","addEventListener","querySelectorAll","forEach","el","classList","remove","button","createElement","innerHTML","add","parentNode","querySelector","nextElementSibling","matches","insertBefore","cloneNode","nextSibling","ev","target","closest","toggle"],"sourceRoot":""}